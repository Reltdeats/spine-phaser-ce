{"version":3,"file":"spine-phaser-ce.min.js","mappings":"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","sources":["webpack:///../node_modules/@esotericsoftware/spine-core/dist/Utils.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/Attachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/Sequence.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Animation.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/AnimationState.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/AnimationStateData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/BoundingBoxAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/ClippingAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Texture.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/BoneData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/PathConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SlotData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonBinary.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/TextureAtlas.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/MeshAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/PathAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/PointAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/RegionAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/AtlasAttachmentLoader.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Bone.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/IkConstraint.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/ConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/PathConstraint.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Slot.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/TransformConstraint.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Skeleton.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Event.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/EventData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/IkConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Skin.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/TransformConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonBounds.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Triangulator.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonClipping.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonJson.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/polyfills.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/WebGL.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/GLTexture.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Vector3.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Matrix4.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Camera.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Shader.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Mesh.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/PolygonBatcher.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/ShapeRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/SkeletonDebugRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/SkeletonRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/SceneRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-canvas/dist/CanvasTexture.js","webpack:///../node_modules/@esotericsoftware/spine-canvas/dist/SkeletonRenderer.js","webpack:///./spineBaseGameObject.js","webpack:///./spineSkeleton.js","webpack:///./spineUtils.js","webpack:///./spineGameObject.js","webpack:///./spinePlugin.js","webpack:///./index.js"],"sourcesContent":["/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class IntSet {\n    array = new Array();\n    add(value) {\n        let contains = this.contains(value);\n        this.array[value | 0] = value | 0;\n        return !contains;\n    }\n    contains(value) {\n        return this.array[value | 0] != undefined;\n    }\n    remove(value) {\n        this.array[value | 0] = undefined;\n    }\n    clear() {\n        this.array.length = 0;\n    }\n}\nexport class StringSet {\n    entries = {};\n    size = 0;\n    add(value) {\n        let contains = this.entries[value];\n        this.entries[value] = true;\n        if (!contains) {\n            this.size++;\n            return true;\n        }\n        return false;\n    }\n    addAll(values) {\n        let oldSize = this.size;\n        for (var i = 0, n = values.length; i < n; i++)\n            this.add(values[i]);\n        return oldSize != this.size;\n    }\n    contains(value) {\n        return this.entries[value];\n    }\n    clear() {\n        this.entries = {};\n        this.size = 0;\n    }\n}\nexport class Color {\n    r;\n    g;\n    b;\n    a;\n    static WHITE = new Color(1, 1, 1, 1);\n    static RED = new Color(1, 0, 0, 1);\n    static GREEN = new Color(0, 1, 0, 1);\n    static BLUE = new Color(0, 0, 1, 1);\n    static MAGENTA = new Color(1, 0, 1, 1);\n    constructor(r = 0, g = 0, b = 0, a = 0) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    set(r, g, b, a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n        return this.clamp();\n    }\n    setFromColor(c) {\n        this.r = c.r;\n        this.g = c.g;\n        this.b = c.b;\n        this.a = c.a;\n        return this;\n    }\n    setFromString(hex) {\n        hex = hex.charAt(0) == '#' ? hex.substr(1) : hex;\n        this.r = parseInt(hex.substr(0, 2), 16) / 255;\n        this.g = parseInt(hex.substr(2, 2), 16) / 255;\n        this.b = parseInt(hex.substr(4, 2), 16) / 255;\n        this.a = hex.length != 8 ? 1 : parseInt(hex.substr(6, 2), 16) / 255;\n        return this;\n    }\n    add(r, g, b, a) {\n        this.r += r;\n        this.g += g;\n        this.b += b;\n        this.a += a;\n        return this.clamp();\n    }\n    clamp() {\n        if (this.r < 0)\n            this.r = 0;\n        else if (this.r > 1)\n            this.r = 1;\n        if (this.g < 0)\n            this.g = 0;\n        else if (this.g > 1)\n            this.g = 1;\n        if (this.b < 0)\n            this.b = 0;\n        else if (this.b > 1)\n            this.b = 1;\n        if (this.a < 0)\n            this.a = 0;\n        else if (this.a > 1)\n            this.a = 1;\n        return this;\n    }\n    static rgba8888ToColor(color, value) {\n        color.r = ((value & 0xff000000) >>> 24) / 255;\n        color.g = ((value & 0x00ff0000) >>> 16) / 255;\n        color.b = ((value & 0x0000ff00) >>> 8) / 255;\n        color.a = ((value & 0x000000ff)) / 255;\n    }\n    static rgb888ToColor(color, value) {\n        color.r = ((value & 0x00ff0000) >>> 16) / 255;\n        color.g = ((value & 0x0000ff00) >>> 8) / 255;\n        color.b = ((value & 0x000000ff)) / 255;\n    }\n    static fromString(hex) {\n        return new Color().setFromString(hex);\n    }\n}\nexport class MathUtils {\n    static PI = 3.1415927;\n    static PI2 = MathUtils.PI * 2;\n    static radiansToDegrees = 180 / MathUtils.PI;\n    static radDeg = MathUtils.radiansToDegrees;\n    static degreesToRadians = MathUtils.PI / 180;\n    static degRad = MathUtils.degreesToRadians;\n    static clamp(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    }\n    static cosDeg(degrees) {\n        return Math.cos(degrees * MathUtils.degRad);\n    }\n    static sinDeg(degrees) {\n        return Math.sin(degrees * MathUtils.degRad);\n    }\n    static signum(value) {\n        return value > 0 ? 1 : value < 0 ? -1 : 0;\n    }\n    static toInt(x) {\n        return x > 0 ? Math.floor(x) : Math.ceil(x);\n    }\n    static cbrt(x) {\n        let y = Math.pow(Math.abs(x), 1 / 3);\n        return x < 0 ? -y : y;\n    }\n    static randomTriangular(min, max) {\n        return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n    }\n    static randomTriangularWith(min, max, mode) {\n        let u = Math.random();\n        let d = max - min;\n        if (u <= (mode - min) / d)\n            return min + Math.sqrt(u * d * (mode - min));\n        return max - Math.sqrt((1 - u) * d * (max - mode));\n    }\n    static isPowerOfTwo(value) {\n        return value && (value & (value - 1)) === 0;\n    }\n}\nexport class Interpolation {\n    apply(start, end, a) {\n        return start + (end - start) * this.applyInternal(a);\n    }\n}\nexport class Pow extends Interpolation {\n    power = 2;\n    constructor(power) {\n        super();\n        this.power = power;\n    }\n    applyInternal(a) {\n        if (a <= 0.5)\n            return Math.pow(a * 2, this.power) / 2;\n        return Math.pow((a - 1) * 2, this.power) / (this.power % 2 == 0 ? -2 : 2) + 1;\n    }\n}\nexport class PowOut extends Pow {\n    constructor(power) {\n        super(power);\n    }\n    applyInternal(a) {\n        return Math.pow(a - 1, this.power) * (this.power % 2 == 0 ? -1 : 1) + 1;\n    }\n}\nexport class Utils {\n    static SUPPORTS_TYPED_ARRAYS = typeof (Float32Array) !== \"undefined\";\n    static arrayCopy(source, sourceStart, dest, destStart, numElements) {\n        for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n            dest[j] = source[i];\n        }\n    }\n    static arrayFill(array, fromIndex, toIndex, value) {\n        for (let i = fromIndex; i < toIndex; i++)\n            array[i] = value;\n    }\n    static setArraySize(array, size, value = 0) {\n        let oldSize = array.length;\n        if (oldSize == size)\n            return array;\n        array.length = size;\n        if (oldSize < size) {\n            for (let i = oldSize; i < size; i++)\n                array[i] = value;\n        }\n        return array;\n    }\n    static ensureArrayCapacity(array, size, value = 0) {\n        if (array.length >= size)\n            return array;\n        return Utils.setArraySize(array, size, value);\n    }\n    static newArray(size, defaultValue) {\n        let array = new Array(size);\n        for (let i = 0; i < size; i++)\n            array[i] = defaultValue;\n        return array;\n    }\n    static newFloatArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Float32Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static newShortArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Int16Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static toFloatArray(array) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n    }\n    static toSinglePrecision(value) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n    }\n    // This function is used to fix WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n    static webkit602BugfixHelper(alpha, blend) {\n    }\n    static contains(array, element, identity = true) {\n        for (var i = 0; i < array.length; i++)\n            if (array[i] == element)\n                return true;\n        return false;\n    }\n    static enumValue(type, name) {\n        return type[name[0].toUpperCase() + name.slice(1)];\n    }\n}\nexport class DebugUtils {\n    static logBones(skeleton) {\n        for (let i = 0; i < skeleton.bones.length; i++) {\n            let bone = skeleton.bones[i];\n            console.log(bone.data.name + \", \" + bone.a + \", \" + bone.b + \", \" + bone.c + \", \" + bone.d + \", \" + bone.worldX + \", \" + bone.worldY);\n        }\n    }\n}\nexport class Pool {\n    items = new Array();\n    instantiator;\n    constructor(instantiator) {\n        this.instantiator = instantiator;\n    }\n    obtain() {\n        return this.items.length > 0 ? this.items.pop() : this.instantiator();\n    }\n    free(item) {\n        if (item.reset)\n            item.reset();\n        this.items.push(item);\n    }\n    freeAll(items) {\n        for (let i = 0; i < items.length; i++)\n            this.free(items[i]);\n    }\n    clear() {\n        this.items.length = 0;\n    }\n}\nexport class Vector2 {\n    x;\n    y;\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    length() {\n        let x = this.x;\n        let y = this.y;\n        return Math.sqrt(x * x + y * y);\n    }\n    normalize() {\n        let len = this.length();\n        if (len != 0) {\n            this.x /= len;\n            this.y /= len;\n        }\n        return this;\n    }\n}\nexport class TimeKeeper {\n    maxDelta = 0.064;\n    framesPerSecond = 0;\n    delta = 0;\n    totalTime = 0;\n    lastTime = Date.now() / 1000;\n    frameCount = 0;\n    frameTime = 0;\n    update() {\n        let now = Date.now() / 1000;\n        this.delta = now - this.lastTime;\n        this.frameTime += this.delta;\n        this.totalTime += this.delta;\n        if (this.delta > this.maxDelta)\n            this.delta = this.maxDelta;\n        this.lastTime = now;\n        this.frameCount++;\n        if (this.frameTime > 1) {\n            this.framesPerSecond = this.frameCount / this.frameTime;\n            this.frameTime = 0;\n            this.frameCount = 0;\n        }\n    }\n}\nexport class WindowedMean {\n    values;\n    addedValues = 0;\n    lastValue = 0;\n    mean = 0;\n    dirty = true;\n    constructor(windowSize = 32) {\n        this.values = new Array(windowSize);\n    }\n    hasEnoughData() {\n        return this.addedValues >= this.values.length;\n    }\n    addValue(value) {\n        if (this.addedValues < this.values.length)\n            this.addedValues++;\n        this.values[this.lastValue++] = value;\n        if (this.lastValue > this.values.length - 1)\n            this.lastValue = 0;\n        this.dirty = true;\n    }\n    getMean() {\n        if (this.hasEnoughData()) {\n            if (this.dirty) {\n                let mean = 0;\n                for (let i = 0; i < this.values.length; i++)\n                    mean += this.values[i];\n                this.mean = mean / this.values.length;\n                this.dirty = false;\n            }\n            return this.mean;\n        }\n        return 0;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils } from \"../Utils.js\";\n/** The base class for all attachments. */\nexport class Attachment {\n    name;\n    constructor(name) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n}\n/** Base class for an attachment with vertices that are transformed by one or more bones and can be deformed by a slot's\n * {@link Slot#deform}. */\nexport class VertexAttachment extends Attachment {\n    static nextID = 0;\n    /** The unique ID for this attachment. */\n    id = VertexAttachment.nextID++;\n    /** The bones which affect the {@link #getVertices()}. The array entries are, for each vertex, the number of bones affecting\n     * the vertex followed by that many bone indices, which is the index of the bone in {@link Skeleton#bones}. Will be null\n     * if this attachment has no weights. */\n    bones = null;\n    /** The vertex positions in the bone's coordinate system. For a non-weighted attachment, the values are `x,y`\n     * entries for each vertex. For a weighted attachment, the values are `x,y,weight` entries for each bone affecting\n     * each vertex. */\n    vertices = [];\n    /** The maximum number of world vertex values that can be output by\n     * {@link #computeWorldVertices()} using the `count` parameter. */\n    worldVerticesLength = 0;\n    /** Timelines for the timeline attachment are also applied to this attachment.\n     * May be null if no attachment-specific timelines should be applied. */\n    timelineAttachment = this;\n    constructor(name) {\n        super(name);\n    }\n    /** Transforms the attachment's local {@link #vertices} to world coordinates. If the slot's {@link Slot#deform} is\n     * not empty, it is used to deform the vertices.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide.\n     * @param start The index of the first {@link #vertices} value to transform. Each vertex has 2 values, x and y.\n     * @param count The number of world vertex values to output. Must be <= {@link #worldVerticesLength} - `start`.\n     * @param worldVertices The output world vertices. Must have a length >= `offset` + `count` *\n     *           `stride` / 2.\n     * @param offset The `worldVertices` index to begin writing values.\n     * @param stride The number of `worldVertices` entries between the value pairs written. */\n    computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n        count = offset + (count >> 1) * stride;\n        let skeleton = slot.bone.skeleton;\n        let deformArray = slot.deform;\n        let vertices = this.vertices;\n        let bones = this.bones;\n        if (!bones) {\n            if (deformArray.length > 0)\n                vertices = deformArray;\n            let bone = slot.bone;\n            let x = bone.worldX;\n            let y = bone.worldY;\n            let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n            for (let v = start, w = offset; w < count; v += 2, w += stride) {\n                let vx = vertices[v], vy = vertices[v + 1];\n                worldVertices[w] = vx * a + vy * b + x;\n                worldVertices[w + 1] = vx * c + vy * d + y;\n            }\n            return;\n        }\n        let v = 0, skip = 0;\n        for (let i = 0; i < start; i += 2) {\n            let n = bones[v];\n            v += n + 1;\n            skip += n;\n        }\n        let skeletonBones = skeleton.bones;\n        if (deformArray.length == 0) {\n            for (let w = offset, b = skip * 3; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b], vy = vertices[b + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n        else {\n            let deform = deformArray;\n            for (let w = offset, b = skip * 3, f = skip << 1; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3, f += 2) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b] + deform[f], vy = vertices[b + 1] + deform[f + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n    }\n    /** Does not copy id (generated) or name (set on construction). **/\n    copyTo(attachment) {\n        if (this.bones) {\n            attachment.bones = new Array(this.bones.length);\n            Utils.arrayCopy(this.bones, 0, attachment.bones, 0, this.bones.length);\n        }\n        else\n            attachment.bones = null;\n        if (this.vertices) {\n            attachment.vertices = Utils.newFloatArray(this.vertices.length);\n            Utils.arrayCopy(this.vertices, 0, attachment.vertices, 0, this.vertices.length);\n        }\n        attachment.worldVerticesLength = this.worldVerticesLength;\n        attachment.timelineAttachment = this.timelineAttachment;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXR0YWNobWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hdHRhY2htZW50cy9BdHRhY2htZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQW1CLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUVyRCwwQ0FBMEM7QUFDMUMsTUFBTSxPQUFnQixVQUFVO0lBQy9CLElBQUksQ0FBUztJQUViLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBR0Q7QUFFRDswQkFDMEI7QUFDMUIsTUFBTSxPQUFnQixnQkFBaUIsU0FBUSxVQUFVO0lBQ2hELE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBRTFCLHlDQUF5QztJQUN6QyxFQUFFLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUM7SUFFL0I7OzRDQUV3QztJQUN4QyxLQUFLLEdBQXlCLElBQUksQ0FBQztJQUVuQzs7c0JBRWtCO0lBQ2xCLFFBQVEsR0FBb0IsRUFBRSxDQUFDO0lBRS9CO3NFQUNrRTtJQUNsRSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7SUFFeEI7NEVBQ3dFO0lBQ3hFLGtCQUFrQixHQUFlLElBQUksQ0FBQztJQUV0QyxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs7Ozs7Ozs7OzhGQVUwRjtJQUMxRixvQkFBb0IsQ0FBRSxJQUFVLEVBQUUsS0FBYSxFQUFFLEtBQWEsRUFBRSxhQUE4QixFQUFFLE1BQWMsRUFBRSxNQUFjO1FBQzdILEtBQUssR0FBRyxNQUFNLEdBQUcsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLEdBQUcsTUFB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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils } from \"../Utils.js\";\nexport class Sequence {\n    static _nextID = 0;\n    id = Sequence.nextID();\n    regions;\n    start = 0;\n    digits = 0;\n    /** The index of the region to show for the setup pose. */\n    setupIndex = 0;\n    constructor(count) {\n        this.regions = new Array(count);\n    }\n    copy() {\n        let copy = new Sequence(this.regions.length);\n        Utils.arrayCopy(this.regions, 0, copy.regions, 0, this.regions.length);\n        copy.start = this.start;\n        copy.digits = this.digits;\n        copy.setupIndex = this.setupIndex;\n        return copy;\n    }\n    apply(slot, attachment) {\n        let index = slot.sequenceIndex;\n        if (index == -1)\n            index = this.setupIndex;\n        if (index >= this.regions.length)\n            index = this.regions.length - 1;\n        let region = this.regions[index];\n        if (attachment.region != region) {\n            attachment.region = region;\n            attachment.updateRegion();\n        }\n    }\n    getPath(basePath, index) {\n        let result = basePath;\n        let frame = (this.start + index).toString();\n        for (let i = this.digits - frame.length; i > 0; i--)\n            result += \"0\";\n        result += frame;\n        return result;\n    }\n    static nextID() {\n        return Sequence._nextID++;\n    }\n}\nexport var SequenceMode;\n(function (SequenceMode) {\n    SequenceMode[SequenceMode[\"hold\"] = 0] = \"hold\";\n    SequenceMode[SequenceMode[\"once\"] = 1] = \"once\";\n    SequenceMode[SequenceMode[\"loop\"] = 2] = \"loop\";\n    SequenceMode[SequenceMode[\"pingpong\"] = 3] = \"pingpong\";\n    SequenceMode[SequenceMode[\"onceReverse\"] = 4] = \"onceReverse\";\n    SequenceMode[SequenceMode[\"loopReverse\"] = 5] = \"loopReverse\";\n    SequenceMode[SequenceMode[\"pingpongReverse\"] = 6] = \"pingpongReverse\";\n})(SequenceMode || (SequenceMode = {}));\nexport const SequenceModeValues = [\n    SequenceMode.hold,\n    SequenceMode.once,\n    SequenceMode.loop,\n    SequenceMode.pingpong,\n    SequenceMode.onceReverse,\n    SequenceMode.loopReverse,\n    SequenceMode.pingpongReverse\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VxdWVuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvU2VxdWVuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSy9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHcEMsTUFBTSxPQUFPLFFBQVE7SUFDWixNQUFNLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUUzQixFQUFFLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3ZCLE9BQU8sQ0FBa0I7SUFDekIsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNWLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDWCwwREFBMEQ7SUFDMUQsVUFBVSxHQUFHLENBQUMsQ0FBQztJQUVmLFlBQWEsS0FBYTtRQUN6QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxDQUFnQixLQUFLLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0MsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ2xDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELEtBQUssQ0FBRSxJQUFVLEVBQUUsVUFBNEI7UUFDOUMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUMvQixJQUFJLEtBQUssSUFBSSxDQUFDLENBQUM7WUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6QyxJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU07WUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ2xFLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakMsSUFBSSxVQUFVLENBQUMsTUFBTSxJQUFJLE1BQU0sRUFBRTtZQUNoQyxVQUFVLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUMzQixVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDMUI7SUFDRixDQUFDO0lBRUQsT0FBTyxDQUFFLFFBQWdCLEVBQUUsS0FBYTtRQUN2QyxJQUFJLE1BQU0sR0FBRyxRQUFRLENBQUM7UUFDdEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzVDLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ2xELE1BQU0sSUFBSSxHQUFHLENBQUM7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDO1FBQ2hCLE9BQU8sTUFBTSxDQUFDO0lBQ2YsQ0FBQztJQUVPLE1BQU0sQ0FBQyxNQUFNO1FBQ3BCLE9BQU8sUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzNCLENBQUM7O0FBR0YsTUFBTSxDQUFOLElBQVksWUFRWDtBQVJELFdBQVksWUFBWTtJQUN2QiwrQ0FBUSxDQUFBO0lBQ1IsK0NBQVEsQ0FBQTtJQUNSLCtDQUFRLENBQUE7SUFDUix1REFBWSxDQUFBO0lBQ1osNkRBQWUsQ0FBQTtJQUNmLDZEQUFlLENBQUE7SUFDZixxRUFBbUIsQ0FBQTtBQUNwQixDQUFDLEVBUlcsWUFBWSxLQUFaLFlBQVksUUFRdkI7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRztJQUNqQyxZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsUUFBUTtJQUNyQixZQUFZLENBQUMsV0FBVztJQUN4QixZQUFZLENBQUMsV0FBVztJQUN4QixZQUFZLENBQUMsZUFBZTtDQUM1QixDQUFDIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment.js\";\nimport { StringSet, Utils, MathUtils } from \"./Utils.js\";\nimport { SequenceMode, SequenceModeValues } from \"./attachments/Sequence.js\";\n/** A simple container for a list of timelines and a name. */\nexport class Animation {\n    /** The animation's name, which is unique across all animations in the skeleton. */\n    name;\n    timelines = [];\n    timelineIds = new StringSet();\n    /** The duration of the animation in seconds, which is the highest time of all keys in the timeline. */\n    duration;\n    constructor(name, timelines, duration) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n        this.setTimelines(timelines);\n        this.duration = duration;\n    }\n    setTimelines(timelines) {\n        if (!timelines)\n            throw new Error(\"timelines cannot be null.\");\n        this.timelines = timelines;\n        this.timelineIds.clear();\n        for (var i = 0; i < timelines.length; i++)\n            this.timelineIds.addAll(timelines[i].getPropertyIds());\n    }\n    hasTimeline(ids) {\n        for (let i = 0; i < ids.length; i++)\n            if (this.timelineIds.contains(ids[i]))\n                return true;\n        return false;\n    }\n    /** Applies all the animation's timelines to the specified skeleton.\n     *\n     * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}.\n     * @param loop If true, the animation repeats after {@link #getDuration()}.\n     * @param events May be null to ignore fired events. */\n    apply(skeleton, lastTime, time, loop, events, alpha, blend, direction) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (loop && this.duration != 0) {\n            time %= this.duration;\n            if (lastTime > 0)\n                lastTime %= this.duration;\n        }\n        let timelines = this.timelines;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            timelines[i].apply(skeleton, lastTime, time, events, alpha, blend, direction);\n    }\n}\n/** Controls how a timeline value is mixed with the setup pose value or current pose value when a timeline's `alpha`\n * < 1.\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixBlend;\n(function (MixBlend) {\n    /** Transitions from the setup value to the timeline value (the current value is not used). Before the first key, the setup\n     * value is set. */\n    MixBlend[MixBlend[\"setup\"] = 0] = \"setup\";\n    /** Transitions from the current value to the timeline value. Before the first key, transitions from the current value to\n     * the setup value. Timelines which perform instant transitions, such as {@link DrawOrderTimeline} or\n     * {@link AttachmentTimeline}, use the setup value before the first key.\n     *\n     * `first` is intended for the first animations applied, not for animations layered on top of those. */\n    MixBlend[MixBlend[\"first\"] = 1] = \"first\";\n    /** Transitions from the current value to the timeline value. No change is made before the first key (the current value is\n     * kept until the first key).\n     *\n     * `replace` is intended for animations layered on top of others, not for the first animations applied. */\n    MixBlend[MixBlend[\"replace\"] = 2] = \"replace\";\n    /** Transitions from the current value to the current value plus the timeline value. No change is made before the first key\n     * (the current value is kept until the first key).\n     *\n     * `add` is intended for animations layered on top of others, not for the first animations applied. Properties\n     * keyed by additive animations must be set manually or by another animation before applying the additive animations, else\n     * the property values will increase continually. */\n    MixBlend[MixBlend[\"add\"] = 3] = \"add\";\n})(MixBlend || (MixBlend = {}));\n/** Indicates whether a timeline's `alpha` is mixing out over time toward 0 (the setup or current pose value) or\n * mixing in toward 1 (the timeline's value).\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixDirection;\n(function (MixDirection) {\n    MixDirection[MixDirection[\"mixIn\"] = 0] = \"mixIn\";\n    MixDirection[MixDirection[\"mixOut\"] = 1] = \"mixOut\";\n})(MixDirection || (MixDirection = {}));\nconst Property = {\n    rotate: 0,\n    x: 1,\n    y: 2,\n    scaleX: 3,\n    scaleY: 4,\n    shearX: 5,\n    shearY: 6,\n    rgb: 7,\n    alpha: 8,\n    rgb2: 9,\n    attachment: 10,\n    deform: 11,\n    event: 12,\n    drawOrder: 13,\n    ikConstraint: 14,\n    transformConstraint: 15,\n    pathConstraintPosition: 16,\n    pathConstraintSpacing: 17,\n    pathConstraintMix: 18,\n    sequence: 19\n};\n/** The interface for all timelines. */\nexport class Timeline {\n    propertyIds;\n    frames;\n    constructor(frameCount, propertyIds) {\n        this.propertyIds = propertyIds;\n        this.frames = Utils.newFloatArray(frameCount * this.getFrameEntries());\n    }\n    getPropertyIds() {\n        return this.propertyIds;\n    }\n    getFrameEntries() {\n        return 1;\n    }\n    getFrameCount() {\n        return this.frames.length / this.getFrameEntries();\n    }\n    getDuration() {\n        return this.frames[this.frames.length - this.getFrameEntries()];\n    }\n    static search1(frames, time) {\n        let n = frames.length;\n        for (let i = 1; i < n; i++)\n            if (frames[i] > time)\n                return i - 1;\n        return n - 1;\n    }\n    static search(frames, time, step) {\n        let n = frames.length;\n        for (let i = step; i < n; i += step)\n            if (frames[i] > time)\n                return i - step;\n        return n - step;\n    }\n}\n/** The base class for timelines that use interpolation between key frame values. */\nexport class CurveTimeline extends Timeline {\n    curves; // type, x, y, ...\n    constructor(frameCount, bezierCount, propertyIds) {\n        super(frameCount, propertyIds);\n        this.curves = Utils.newFloatArray(frameCount + bezierCount * 18 /*BEZIER_SIZE*/);\n        this.curves[frameCount - 1] = 1 /*STEPPED*/;\n    }\n    /** Sets the specified key frame to linear interpolation. */\n    setLinear(frame) {\n        this.curves[frame] = 0 /*LINEAR*/;\n    }\n    /** Sets the specified key frame to stepped interpolation. */\n    setStepped(frame) {\n        this.curves[frame] = 1 /*STEPPED*/;\n    }\n    /** Shrinks the storage for Bezier curves, for use when <code>bezierCount</code> (specified in the constructor) was larger\n     * than the actual number of Bezier curves. */\n    shrink(bezierCount) {\n        let size = this.getFrameCount() + bezierCount * 18 /*BEZIER_SIZE*/;\n        if (this.curves.length > size) {\n            let newCurves = Utils.newFloatArray(size);\n            Utils.arrayCopy(this.curves, 0, newCurves, 0, size);\n            this.curves = newCurves;\n        }\n    }\n    /** Stores the segments for the specified Bezier curve. For timelines that modify multiple values, there may be more than\n     * one curve per frame.\n     * @param bezier The ordinal of this Bezier curve for this timeline, between 0 and <code>bezierCount - 1</code> (specified\n     *           in the constructor), inclusive.\n     * @param frame Between 0 and <code>frameCount - 1</code>, inclusive.\n     * @param value The index of the value for this frame that this curve is used for.\n     * @param time1 The time for the first key.\n     * @param value1 The value for the first key.\n     * @param cx1 The time for the first Bezier handle.\n     * @param cy1 The value for the first Bezier handle.\n     * @param cx2 The time of the second Bezier handle.\n     * @param cy2 The value for the second Bezier handle.\n     * @param time2 The time for the second key.\n     * @param value2 The value for the second key. */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = (value1 - cy1 * 2 + cy2) * 0.03;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = ((cy1 - cy2) * 3 - value1 + value2) * 0.006;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = (cy1 - value1) * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = value1 + dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    /** Returns the Bezier interpolated value for the specified time.\n     * @param frameIndex The index into {@link #getFrames()} for the values of the frame before <code>time</code>.\n     * @param valueOffset The offset from <code>frameIndex</code> to the value this curve is used for.\n     * @param i The index of the Bezier segments. See {@link #getCurveType(int)}. */\n    getBezierValue(time, frameIndex, valueOffset, i) {\n        let curves = this.curves;\n        if (curves[i] > time) {\n            let x = this.frames[frameIndex], y = this.frames[frameIndex + valueOffset];\n            return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        frameIndex += this.getFrameEntries();\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (time - x) / (this.frames[frameIndex] - x) * (this.frames[frameIndex + valueOffset] - y);\n    }\n}\nexport class CurveTimeline1 extends CurveTimeline {\n    constructor(frameCount, bezierCount, propertyId) {\n        super(frameCount, bezierCount, [propertyId]);\n    }\n    getFrameEntries() {\n        return 2 /*ENTRIES*/;\n    }\n    /** Sets the time and value for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value) {\n        frame <<= 1;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE*/] = value;\n    }\n    /** Returns the interpolated value for the specified time. */\n    getCurveValue(time) {\n        let frames = this.frames;\n        let i = frames.length - 2;\n        for (let ii = 2; ii <= i; ii += 2) {\n            if (frames[ii] > time) {\n                i = ii - 2;\n                break;\n            }\n        }\n        let curveType = this.curves[i >> 1];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i], value = frames[i + 1 /*VALUE*/];\n                return value + (time - before) / (frames[i + 2 /*ENTRIES*/] - before) * (frames[i + 2 /*ENTRIES*/ + 1 /*VALUE*/] - value);\n            case 1 /*STEPPED*/:\n                return frames[i + 1 /*VALUE*/];\n        }\n        return this.getBezierValue(time, i, 1 /*VALUE*/, curveType - 2 /*BEZIER*/);\n    }\n}\n/** The base class for a {@link CurveTimeline} which sets two properties. */\nexport class CurveTimeline2 extends CurveTimeline {\n    /** @param bezierCount The maximum number of Bezier curves. See {@link #shrink(int)}.\n     * @param propertyIds Unique identifiers for the properties the timeline modifies. */\n    constructor(frameCount, bezierCount, propertyId1, propertyId2) {\n        super(frameCount, bezierCount, [propertyId1, propertyId2]);\n    }\n    getFrameEntries() {\n        return 3 /*ENTRIES*/;\n    }\n    /** Sets the time and values for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value1, value2) {\n        frame *= 3 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE1*/] = value1;\n        this.frames[frame + 2 /*VALUE2*/] = value2;\n    }\n}\n/** Changes a bone's local {@link Bone#rotation}. */\nexport class RotateTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.rotate + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.rotation = bone.data.rotation;\n                    return;\n                case MixBlend.first:\n                    bone.rotation += (bone.data.rotation - bone.rotation) * alpha;\n            }\n            return;\n        }\n        let r = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.rotation = bone.data.rotation + r * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                r += bone.data.rotation - bone.rotation;\n            case MixBlend.add:\n                bone.rotation += r * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x} and {@link Bone#y}. */\nexport class TranslateTimeline extends CurveTimeline2 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex, Property.y + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.x = bone.data.x;\n                    bone.y = bone.data.y;\n                    return;\n                case MixBlend.first:\n                    bone.x += (bone.data.x - bone.x) * alpha;\n                    bone.y += (bone.data.y - bone.y) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.x = bone.data.x + x * alpha;\n                bone.y = bone.data.y + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.x += (bone.data.x + x - bone.x) * alpha;\n                bone.y += (bone.data.y + y - bone.y) * alpha;\n                break;\n            case MixBlend.add:\n                bone.x += x * alpha;\n                bone.y += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateXTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.x = bone.data.x;\n                    return;\n                case MixBlend.first:\n                    bone.x += (bone.data.x - bone.x) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.x = bone.data.x + x * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.x += (bone.data.x + x - bone.x) * alpha;\n                break;\n            case MixBlend.add:\n                bone.x += x * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateYTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.y + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.y = bone.data.y;\n                    return;\n                case MixBlend.first:\n                    bone.y += (bone.data.y - bone.y) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.y = bone.data.y + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.y += (bone.data.y + y - bone.y) * alpha;\n                break;\n            case MixBlend.add:\n                bone.y += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleTimeline extends CurveTimeline2 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleX = bone.data.scaleX;\n                    bone.scaleY = bone.data.scaleY;\n                    return;\n                case MixBlend.first:\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n            }\n            return;\n        }\n        let x, y;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        x *= bone.data.scaleX;\n        y *= bone.data.scaleY;\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                bone.scaleX += x - bone.data.scaleX;\n                bone.scaleY += y - bone.data.scaleY;\n            }\n            else {\n                bone.scaleX = x;\n                bone.scaleY = y;\n            }\n        }\n        else {\n            let bx = 0, by = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = bone.data.scaleX;\n                        by = bone.data.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = bone.scaleX;\n                        by = bone.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = Math.abs(bone.data.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.data.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = Math.abs(bone.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleXTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleX = bone.data.scaleX;\n                    return;\n                case MixBlend.first:\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time) * bone.data.scaleX;\n        if (alpha == 1) {\n            if (blend == MixBlend.add)\n                bone.scaleX += x - bone.data.scaleX;\n            else\n                bone.scaleX = x;\n        }\n        else {\n            // Mixing out uses sign of setup or current pose, else use sign of key.\n            let bx = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = bone.data.scaleX;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = bone.scaleX;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = Math.abs(bone.data.scaleX) * MathUtils.signum(x);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = Math.abs(bone.scaleX) * MathUtils.signum(x);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleYTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleY = bone.data.scaleY;\n                    return;\n                case MixBlend.first:\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time) * bone.data.scaleY;\n        if (alpha == 1) {\n            if (blend == MixBlend.add)\n                bone.scaleY += y - bone.data.scaleY;\n            else\n                bone.scaleY = y;\n        }\n        else {\n            // Mixing out uses sign of setup or current pose, else use sign of key.\n            let by = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        by = bone.data.scaleY;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        by = bone.scaleY;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        by = Math.abs(bone.data.scaleY) * MathUtils.signum(y);\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        by = Math.abs(bone.scaleY) * MathUtils.signum(y);\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearTimeline extends CurveTimeline2 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearX = bone.data.shearX;\n                    bone.shearY = bone.data.shearY;\n                    return;\n                case MixBlend.first:\n                    bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n                    bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearX = bone.data.shearX + x * alpha;\n                bone.shearY = bone.data.shearY + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n                bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearX += x * alpha;\n                bone.shearY += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearXTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearX = bone.data.shearX;\n                    return;\n                case MixBlend.first:\n                    bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearX = bone.data.shearX + x * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearX += x * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearYTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearY = bone.data.shearY;\n                    return;\n                case MixBlend.first:\n                    bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearY = bone.data.shearY + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearY += y * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBATimeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 5 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b, a) {\n        frame *= 5 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.setFromColor(setup);\n                    return;\n                case MixBlend.first:\n                    color.add((setup.r - color.r) * alpha, (setup.g - color.g) * alpha, (setup.b - color.b) * alpha, (setup.a - color.a) * alpha);\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0;\n        let i = Timeline.search(frames, time, 5 /*ENTRIES*/);\n        let curveType = this.curves[i / 5 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                let t = (time - before) / (frames[i + 5 /*ENTRIES*/] - before);\n                r += (frames[i + 5 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 5 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 5 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 5 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1)\n            color.set(r, g, b, a);\n        else {\n            if (blend == MixBlend.setup)\n                color.setFromColor(slot.data.color);\n            color.add((r - color.r) * alpha, (g - color.g) * alpha, (b - color.b) * alpha, (a - color.a) * alpha);\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBTimeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b) {\n        frame <<= 2;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.r = setup.r;\n                    color.g = setup.g;\n                    color.b = setup.b;\n                    return;\n                case MixBlend.first:\n                    color.r += (setup.r - color.r) * alpha;\n                    color.g += (setup.g - color.g) * alpha;\n                    color.b += (setup.b - color.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                r += (frames[i + 4 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 4 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 4 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            color.r = r;\n            color.g = g;\n            color.b = b;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setup = slot.data.color;\n                color.r = setup.r;\n                color.g = setup.g;\n                color.b = setup.b;\n            }\n            color.r += (r - color.r) * alpha;\n            color.g += (g - color.g) * alpha;\n            color.b += (b - color.b) * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class AlphaTimeline extends CurveTimeline1 {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, Property.alpha + \"|\" + slotIndex);\n        this.slotIndex = slotIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let color = slot.color;\n        if (time < this.frames[0]) { // Time is before first frame.\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.a = setup.a;\n                    return;\n                case MixBlend.first:\n                    color.a += (setup.a - color.a) * alpha;\n            }\n            return;\n        }\n        let a = this.getCurveValue(time);\n        if (alpha == 1)\n            color.a = a;\n        else {\n            if (blend == MixBlend.setup)\n                color.a = slot.data.color.a;\n            color.a += (a - color.a) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGBA2Timeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 8 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, a, r2, g2, b2) {\n        frame <<= 3;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n        this.frames[frame + 5 /*R2*/] = r2;\n        this.frames[frame + 6 /*G2*/] = g2;\n        this.frames[frame + 7 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.setFromColor(setupLight);\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.add((setupLight.r - light.r) * alpha, (setupLight.g - light.g) * alpha, (setupLight.b - light.b) * alpha, (setupLight.a - light.a) * alpha);\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 8 /*ENTRIES*/);\n        let curveType = this.curves[i >> 3];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                let t = (time - before) / (frames[i + 8 /*ENTRIES*/] - before);\n                r += (frames[i + 8 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 8 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 8 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 8 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                r2 += (frames[i + 8 /*ENTRIES*/ + 5 /*R2*/] - r2) * t;\n                g2 += (frames[i + 8 /*ENTRIES*/ + 6 /*G2*/] - g2) * t;\n                b2 += (frames[i + 8 /*ENTRIES*/ + 7 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 5 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 6 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 7 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 6 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.set(r, g, b, a);\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                light.setFromColor(slot.data.color);\n                let setupDark = slot.data.darkColor;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.add((r - light.r) * alpha, (g - light.g) * alpha, (b - light.b) * alpha, (a - light.a) * alpha);\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGB2Timeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, r2, g2, b2) {\n        frame *= 7 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*R2*/] = r2;\n        this.frames[frame + 5 /*G2*/] = g2;\n        this.frames[frame + 6 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.r = setupLight.r;\n                    light.g = setupLight.g;\n                    light.b = setupLight.b;\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.r += (setupLight.r - light.r) * alpha;\n                    light.g += (setupLight.g - light.g) * alpha;\n                    light.b += (setupLight.b - light.b) * alpha;\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                r += (frames[i + 7 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 7 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 7 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                r2 += (frames[i + 7 /*ENTRIES*/ + 4 /*R2*/] - r2) * t;\n                g2 += (frames[i + 7 /*ENTRIES*/ + 5 /*G2*/] - g2) * t;\n                b2 += (frames[i + 7 /*ENTRIES*/ + 6 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 4 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 5 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 6 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.r = r;\n            light.g = g;\n            light.b = b;\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n                light.r = setupLight.r;\n                light.g = setupLight.g;\n                light.b = setupLight.b;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.r += (r - light.r) * alpha;\n            light.g += (g - light.g) * alpha;\n            light.b += (b - light.b) * alpha;\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#attachment}. */\nexport class AttachmentTimeline extends Timeline {\n    slotIndex = 0;\n    /** The attachment name for each key frame. May contain null values to clear the attachment. */\n    attachmentNames;\n    constructor(frameCount, slotIndex) {\n        super(frameCount, [\n            Property.attachment + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n        this.attachmentNames = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the attachment name for the specified key frame. */\n    setFrame(frame, time, attachmentName) {\n        this.frames[frame] = time;\n        this.attachmentNames[frame] = attachmentName;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        this.setAttachment(skeleton, slot, this.attachmentNames[Timeline.search1(this.frames, time)]);\n    }\n    setAttachment(skeleton, slot, attachmentName) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(this.slotIndex, attachmentName));\n    }\n}\n/** Changes a slot's {@link Slot#deform} to deform a {@link VertexAttachment}. */\nexport class DeformTimeline extends CurveTimeline {\n    slotIndex = 0;\n    /** The attachment that will be deformed. */\n    attachment;\n    /** The vertices for each key frame. */\n    vertices;\n    constructor(frameCount, bezierCount, slotIndex, attachment) {\n        super(frameCount, bezierCount, [\n            Property.deform + \"|\" + slotIndex + \"|\" + attachment.id\n        ]);\n        this.slotIndex = slotIndex;\n        this.attachment = attachment;\n        this.vertices = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the vertices for the specified key frame.\n     * @param vertices Vertex positions for an unweighted VertexAttachment, or deform offsets if it has weights. */\n    setFrame(frame, time, vertices) {\n        this.frames[frame] = time;\n        this.vertices[frame] = vertices;\n    }\n    /** @param value1 Ignored (0 is used for a deform timeline).\n     * @param value2 Ignored (1 is used for a deform timeline). */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = cy2 * 0.03 - cy1 * 0.06;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = (cy1 - cy2 + 0.33333333) * 0.018;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = cy1 * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    getCurvePercent(time, frame) {\n        let curves = this.curves;\n        let i = curves[frame];\n        switch (i) {\n            case 0 /*LINEAR*/:\n                let x = this.frames[frame];\n                return (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n            case 1 /*STEPPED*/:\n                return 0;\n        }\n        i -= 2 /*BEZIER*/;\n        if (curves[i] > time) {\n            let x = this.frames[frame];\n            return curves[i + 1] * (time - x) / (curves[i] - x);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (1 - y) * (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let slotAttachment = slot.getAttachment();\n        if (!slotAttachment)\n            return;\n        if (!(slotAttachment instanceof VertexAttachment) || slotAttachment.timelineAttachment != this.attachment)\n            return;\n        let deform = slot.deform;\n        if (deform.length == 0)\n            blend = MixBlend.setup;\n        let vertices = this.vertices;\n        let vertexCount = vertices[0].length;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    deform.length = 0;\n                    return;\n                case MixBlend.first:\n                    if (alpha == 1) {\n                        deform.length = 0;\n                        return;\n                    }\n                    deform.length = vertexCount;\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] += (setupVertices[i] - deform[i]) * alpha;\n                    }\n                    else {\n                        // Weighted deform offsets.\n                        alpha = 1 - alpha;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] *= alpha;\n                    }\n            }\n            return;\n        }\n        deform.length = vertexCount;\n        if (time >= frames[frames.length - 1]) { // Time is after last frame.\n            let lastVertices = vertices[frames.length - 1];\n            if (alpha == 1) {\n                if (blend == MixBlend.add) {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i] - setupVertices[i];\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i];\n                    }\n                }\n                else\n                    Utils.arrayCopy(lastVertices, 0, deform, 0, vertexCount);\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup: {\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++) {\n                                let setup = setupVertices[i];\n                                deform[i] = setup + (lastVertices[i] - setup) * alpha;\n                            }\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] = lastVertices[i] * alpha;\n                        }\n                        break;\n                    }\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += (lastVertices[i] - deform[i]) * alpha;\n                        break;\n                    case MixBlend.add:\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += (lastVertices[i] - setupVertices[i]) * alpha;\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += lastVertices[i] * alpha;\n                        }\n                }\n            }\n            return;\n        }\n        // Interpolate between the previous frame and the current frame.\n        let frame = Timeline.search1(frames, time);\n        let percent = this.getCurvePercent(time, frame);\n        let prevVertices = vertices[frame];\n        let nextVertices = vertices[frame + 1];\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                let vertexAttachment = slotAttachment;\n                if (!vertexAttachment.bones) {\n                    // Unweighted vertex positions, with alpha.\n                    let setupVertices = vertexAttachment.vertices;\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent - setupVertices[i];\n                    }\n                }\n                else {\n                    // Weighted deform offsets, with alpha.\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent;\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < vertexCount; i++) {\n                    let prev = prevVertices[i];\n                    deform[i] = prev + (nextVertices[i] - prev) * percent;\n                }\n            }\n        }\n        else {\n            switch (blend) {\n                case MixBlend.setup: {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i], setup = setupVertices[i];\n                            deform[i] = setup + (prev + (nextVertices[i] - prev) * percent - setup) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] = (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n                    break;\n                }\n                case MixBlend.first:\n                case MixBlend.replace:\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += (prev + (nextVertices[i] - prev) * percent - deform[i]) * alpha;\n                    }\n                    break;\n                case MixBlend.add:\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent - setupVertices[i]) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n            }\n        }\n    }\n}\n/** Fires an {@link Event} when specific animation times are reached. */\nexport class EventTimeline extends Timeline {\n    static propertyIds = [\"\" + Property.event];\n    /** The event for each key frame. */\n    events;\n    constructor(frameCount) {\n        super(frameCount, EventTimeline.propertyIds);\n        this.events = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the event for the specified key frame. */\n    setFrame(frame, event) {\n        this.frames[frame] = event.time;\n        this.events[frame] = event;\n    }\n    /** Fires events for frames > `lastTime` and <= `time`. */\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (!firedEvents)\n            return;\n        let frames = this.frames;\n        let frameCount = this.frames.length;\n        if (lastTime > time) { // Fire events after last time for looped animations.\n            this.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha, blend, direction);\n            lastTime = -1;\n        }\n        else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\n            return;\n        if (time < frames[0])\n            return; // Time is before first frame.\n        let i = 0;\n        if (lastTime < frames[0])\n            i = 0;\n        else {\n            i = Timeline.search1(frames, lastTime) + 1;\n            let frameTime = frames[i];\n            while (i > 0) { // Fire multiple events with the same frame.\n                if (frames[i - 1] != frameTime)\n                    break;\n                i--;\n            }\n        }\n        for (; i < frameCount && time >= frames[i]; i++)\n            firedEvents.push(this.events[i]);\n    }\n}\n/** Changes a skeleton's {@link Skeleton#drawOrder}. */\nexport class DrawOrderTimeline extends Timeline {\n    static propertyIds = [\"\" + Property.drawOrder];\n    /** The draw order for each key frame. See {@link #setFrame(int, float, int[])}. */\n    drawOrders;\n    constructor(frameCount) {\n        super(frameCount, DrawOrderTimeline.propertyIds);\n        this.drawOrders = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the draw order for the specified key frame.\n     * @param drawOrder For each slot in {@link Skeleton#slots}, the index of the new draw order. May be null to use setup pose\n     *           draw order. */\n    setFrame(frame, time, drawOrder) {\n        this.frames[frame] = time;\n        this.drawOrders[frame] = drawOrder;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        let idx = Timeline.search1(this.frames, time);\n        let drawOrderToSetupIndex = this.drawOrders[idx];\n        if (!drawOrderToSetupIndex)\n            Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n        else {\n            let drawOrder = skeleton.drawOrder;\n            let slots = skeleton.slots;\n            for (let i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\n                drawOrder[i] = slots[drawOrderToSetupIndex[i]];\n        }\n    }\n}\n/** Changes an IK constraint's {@link IkConstraint#mix}, {@link IkConstraint#softness},\n * {@link IkConstraint#bendDirection}, {@link IkConstraint#stretch}, and {@link IkConstraint#compress}. */\nexport class IkConstraintTimeline extends CurveTimeline {\n    /** The index of the IK constraint slot in {@link Skeleton#ikConstraints} that will be changed. */\n    ikConstraintIndex = 0;\n    constructor(frameCount, bezierCount, ikConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.ikConstraint + \"|\" + ikConstraintIndex\n        ]);\n        this.ikConstraintIndex = ikConstraintIndex;\n    }\n    getFrameEntries() {\n        return 6 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, mix, softness, bend direction, compress, and stretch for the specified key frame. */\n    setFrame(frame, time, mix, softness, bendDirection, compress, stretch) {\n        frame *= 6 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*MIX*/] = mix;\n        this.frames[frame + 2 /*SOFTNESS*/] = softness;\n        this.frames[frame + 3 /*BEND_DIRECTION*/] = bendDirection;\n        this.frames[frame + 4 /*COMPRESS*/] = compress ? 1 : 0;\n        this.frames[frame + 5 /*STRETCH*/] = stretch ? 1 : 0;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.ikConstraints[this.ikConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mix = constraint.data.mix;\n                    constraint.softness = constraint.data.softness;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n                    return;\n                case MixBlend.first:\n                    constraint.mix += (constraint.data.mix - constraint.mix) * alpha;\n                    constraint.softness += (constraint.data.softness - constraint.softness) * alpha;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n            }\n            return;\n        }\n        let mix = 0, softness = 0;\n        let i = Timeline.search(frames, time, 6 /*ENTRIES*/);\n        let curveType = this.curves[i / 6 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                let t = (time - before) / (frames[i + 6 /*ENTRIES*/] - before);\n                mix += (frames[i + 6 /*ENTRIES*/ + 1 /*MIX*/] - mix) * t;\n                softness += (frames[i + 6 /*ENTRIES*/ + 2 /*SOFTNESS*/] - softness) * t;\n                break;\n            case 1 /*STEPPED*/:\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                break;\n            default:\n                mix = this.getBezierValue(time, i, 1 /*MIX*/, curveType - 2 /*BEZIER*/);\n                softness = this.getBezierValue(time, i, 2 /*SOFTNESS*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            constraint.mix = constraint.data.mix + (mix - constraint.data.mix) * alpha;\n            constraint.softness = constraint.data.softness + (softness - constraint.data.softness) * alpha;\n            if (direction == MixDirection.mixOut) {\n                constraint.bendDirection = constraint.data.bendDirection;\n                constraint.compress = constraint.data.compress;\n                constraint.stretch = constraint.data.stretch;\n            }\n            else {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n        else {\n            constraint.mix += (mix - constraint.mix) * alpha;\n            constraint.softness += (softness - constraint.softness) * alpha;\n            if (direction == MixDirection.mixIn) {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n    }\n}\n/** Changes a transform constraint's {@link TransformConstraint#rotateMix}, {@link TransformConstraint#translateMix},\n * {@link TransformConstraint#scaleMix}, and {@link TransformConstraint#shearMix}. */\nexport class TransformConstraintTimeline extends CurveTimeline {\n    /** The index of the transform constraint slot in {@link Skeleton#transformConstraints} that will be changed. */\n    transformConstraintIndex = 0;\n    constructor(frameCount, bezierCount, transformConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.transformConstraint + \"|\" + transformConstraintIndex\n        ]);\n        this.transformConstraintIndex = transformConstraintIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** The time in seconds, rotate mix, translate mix, scale mix, and shear mix for the specified key frame. */\n    setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY) {\n        let frames = this.frames;\n        frame *= 7 /*ENTRIES*/;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n        frames[frame + 4 /*SCALEX*/] = mixScaleX;\n        frames[frame + 5 /*SCALEY*/] = mixScaleY;\n        frames[frame + 6 /*SHEARY*/] = mixShearY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.transformConstraints[this.transformConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            let data = constraint.data;\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = data.mixRotate;\n                    constraint.mixX = data.mixX;\n                    constraint.mixY = data.mixY;\n                    constraint.mixScaleX = data.mixScaleX;\n                    constraint.mixScaleY = data.mixScaleY;\n                    constraint.mixShearY = data.mixShearY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (data.mixY - constraint.mixY) * alpha;\n                    constraint.mixScaleX += (data.mixScaleX - constraint.mixScaleX) * alpha;\n                    constraint.mixScaleY += (data.mixScaleY - constraint.mixScaleY) * alpha;\n                    constraint.mixShearY += (data.mixShearY - constraint.mixShearY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y, scaleX, scaleY, shearY;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                rotate += (frames[i + 7 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 7 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 7 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                scaleX += (frames[i + 7 /*ENTRIES*/ + 4 /*SCALEX*/] - scaleX) * t;\n                scaleY += (frames[i + 7 /*ENTRIES*/ + 5 /*SCALEY*/] - scaleY) * t;\n                shearY += (frames[i + 7 /*ENTRIES*/ + 6 /*SHEARY*/] - shearY) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                scaleX = this.getBezierValue(time, i, 4 /*SCALEX*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                scaleY = this.getBezierValue(time, i, 5 /*SCALEY*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                shearY = this.getBezierValue(time, i, 6 /*SHEARY*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n            constraint.mixScaleX = data.mixScaleX + (scaleX - data.mixScaleX) * alpha;\n            constraint.mixScaleY = data.mixScaleY + (scaleY - data.mixScaleY) * alpha;\n            constraint.mixShearY = data.mixShearY + (shearY - data.mixShearY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n            constraint.mixScaleX += (scaleX - constraint.mixScaleX) * alpha;\n            constraint.mixScaleY += (scaleY - constraint.mixScaleY) * alpha;\n            constraint.mixShearY += (shearY - constraint.mixShearY) * alpha;\n        }\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#position}. */\nexport class PathConstraintPositionTimeline extends CurveTimeline1 {\n    /** The index of the path constraint slot in {@link Skeleton#pathConstraints} that will be changed. */\n    pathConstraintIndex = 0;\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintPosition + \"|\" + pathConstraintIndex);\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.position = constraint.data.position;\n                    return;\n                case MixBlend.first:\n                    constraint.position += (constraint.data.position - constraint.position) * alpha;\n            }\n            return;\n        }\n        let position = this.getCurveValue(time);\n        if (blend == MixBlend.setup)\n            constraint.position = constraint.data.position + (position - constraint.data.position) * alpha;\n        else\n            constraint.position += (position - constraint.position) * alpha;\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#spacing}. */\nexport class PathConstraintSpacingTimeline extends CurveTimeline1 {\n    /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n    pathConstraintIndex = 0;\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintSpacing + \"|\" + pathConstraintIndex);\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.spacing = constraint.data.spacing;\n                    return;\n                case MixBlend.first:\n                    constraint.spacing += (constraint.data.spacing - constraint.spacing) * alpha;\n            }\n            return;\n        }\n        let spacing = this.getCurveValue(time);\n        if (blend == MixBlend.setup)\n            constraint.spacing = constraint.data.spacing + (spacing - constraint.data.spacing) * alpha;\n        else\n            constraint.spacing += (spacing - constraint.spacing) * alpha;\n    }\n}\n/** Changes a transform constraint's {@link PathConstraint#getMixRotate()}, {@link PathConstraint#getMixX()}, and\n * {@link PathConstraint#getMixY()}. */\nexport class PathConstraintMixTimeline extends CurveTimeline {\n    /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n    pathConstraintIndex = 0;\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.pathConstraintMix + \"|\" + pathConstraintIndex\n        ]);\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    setFrame(frame, time, mixRotate, mixX, mixY) {\n        let frames = this.frames;\n        frame <<= 2;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = constraint.data.mixRotate;\n                    constraint.mixX = constraint.data.mixX;\n                    constraint.mixY = constraint.data.mixY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (constraint.data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (constraint.data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (constraint.data.mixY - constraint.mixY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                rotate += (frames[i + 4 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 4 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 4 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#getSequenceIndex()} for an attachment's {@link Sequence}. */\nexport class SequenceTimeline extends Timeline {\n    static ENTRIES = 3;\n    static MODE = 1;\n    static DELAY = 2;\n    slotIndex;\n    attachment;\n    constructor(frameCount, slotIndex, attachment) {\n        super(frameCount, [\n            Property.sequence + \"|\" + slotIndex + \"|\" + attachment.sequence.id\n        ]);\n        this.slotIndex = slotIndex;\n        this.attachment = attachment;\n    }\n    getFrameEntries() {\n        return SequenceTimeline.ENTRIES;\n    }\n    getSlotIndex() {\n        return this.slotIndex;\n    }\n    getAttachment() {\n        return this.attachment;\n    }\n    /** Sets the time, mode, index, and frame time for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time Seconds between frames. */\n    setFrame(frame, time, mode, index, delay) {\n        let frames = this.frames;\n        frame *= SequenceTimeline.ENTRIES;\n        frames[frame] = time;\n        frames[frame + SequenceTimeline.MODE] = mode | (index << 4);\n        frames[frame + SequenceTimeline.DELAY] = delay;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let slotAttachment = slot.attachment;\n        let attachment = this.attachment;\n        if (slotAttachment != attachment) {\n            if (!(slotAttachment instanceof VertexAttachment)\n                || slotAttachment.timelineAttachment != attachment)\n                return;\n        }\n        let frames = this.frames;\n        if (time < frames[0]) { // Time is before first frame.\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                slot.sequenceIndex = -1;\n            return;\n        }\n        let i = Timeline.search(frames, time, SequenceTimeline.ENTRIES);\n        let before = frames[i];\n        let modeAndIndex = frames[i + SequenceTimeline.MODE];\n        let delay = frames[i + SequenceTimeline.DELAY];\n        if (!this.attachment.sequence)\n            return;\n        let index = modeAndIndex >> 4, count = this.attachment.sequence.regions.length;\n        let mode = SequenceModeValues[modeAndIndex & 0xf];\n        if (mode != SequenceMode.hold) {\n            index += (((time - before) / delay + 0.00001) | 0);\n            switch (mode) {\n                case SequenceMode.once:\n                    index = Math.min(count - 1, index);\n                    break;\n                case SequenceMode.loop:\n                    index %= count;\n                    break;\n                case SequenceMode.pingpong: {\n                    let n = (count << 1) - 2;\n                    index = n == 0 ? 0 : index % n;\n                    if (index >= count)\n                        index = n - index;\n                    break;\n                }\n                case SequenceMode.onceReverse:\n                    index = Math.max(count - 1 - index, 0);\n                    break;\n                case SequenceMode.loopReverse:\n                    index = count - 1 - (index % count);\n                    break;\n                case SequenceMode.pingpongReverse: {\n                    let n = (count << 1) - 2;\n                    index = n == 0 ? 0 : (index + count - 1) % n;\n                    if (index >= count)\n                        index = n - index;\n                }\n            }\n        }\n        slot.sequenceIndex = index;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, MixBlend, AttachmentTimeline, MixDirection, RotateTimeline, DrawOrderTimeline, Timeline, EventTimeline } from \"./Animation.js\";\nimport { StringSet, Pool, Utils, MathUtils } from \"./Utils.js\";\n/** Applies animations over time, queues animations for later playback, mixes (crossfading) between animations, and applies\n * multiple animations on top of each other (layering).\n *\n * See [Applying Animations](http://esotericsoftware.com/spine-applying-animations/) in the Spine Runtimes Guide. */\nexport class AnimationState {\n    static _emptyAnimation = new Animation(\"<empty>\", [], 0);\n    static emptyAnimation() {\n        return AnimationState._emptyAnimation;\n    }\n    /** The AnimationStateData to look up mix durations. */\n    data;\n    /** The list of tracks that currently have animations, which may contain null entries. */\n    tracks = new Array();\n    /** Multiplier for the delta time when the animation state is updated, causing time for all animations and mixes to play slower\n     * or faster. Defaults to 1.\n     *\n     * See TrackEntry {@link TrackEntry#timeScale} for affecting a single animation. */\n    timeScale = 1;\n    unkeyedState = 0;\n    events = new Array();\n    listeners = new Array();\n    queue = new EventQueue(this);\n    propertyIDs = new StringSet();\n    animationsChanged = false;\n    trackEntryPool = new Pool(() => new TrackEntry());\n    constructor(data) {\n        this.data = data;\n    }\n    /** Increments each track entry {@link TrackEntry#trackTime()}, setting queued animations as current if needed. */\n    update(delta) {\n        delta *= this.timeScale;\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current)\n                continue;\n            current.animationLast = current.nextAnimationLast;\n            current.trackLast = current.nextTrackLast;\n            let currentDelta = delta * current.timeScale;\n            if (current.delay > 0) {\n                current.delay -= currentDelta;\n                if (current.delay > 0)\n                    continue;\n                currentDelta = -current.delay;\n                current.delay = 0;\n            }\n            let next = current.next;\n            if (next) {\n                // When the next entry's delay is passed, change to the next entry, preserving leftover time.\n                let nextTime = current.trackLast - next.delay;\n                if (nextTime >= 0) {\n                    next.delay = 0;\n                    next.trackTime += current.timeScale == 0 ? 0 : (nextTime / current.timeScale + delta) * next.timeScale;\n                    current.trackTime += currentDelta;\n                    this.setCurrent(i, next, true);\n                    while (next.mixingFrom) {\n                        next.mixTime += delta;\n                        next = next.mixingFrom;\n                    }\n                    continue;\n                }\n            }\n            else if (current.trackLast >= current.trackEnd && !current.mixingFrom) {\n                tracks[i] = null;\n                this.queue.end(current);\n                this.clearNext(current);\n                continue;\n            }\n            if (current.mixingFrom && this.updateMixingFrom(current, delta)) {\n                // End mixing from entries once all have completed.\n                let from = current.mixingFrom;\n                current.mixingFrom = null;\n                if (from)\n                    from.mixingTo = null;\n                while (from) {\n                    this.queue.end(from);\n                    from = from.mixingFrom;\n                }\n            }\n            current.trackTime += currentDelta;\n        }\n        this.queue.drain();\n    }\n    /** Returns true when all mixing from entries are complete. */\n    updateMixingFrom(to, delta) {\n        let from = to.mixingFrom;\n        if (!from)\n            return true;\n        let finished = this.updateMixingFrom(from, delta);\n        from.animationLast = from.nextAnimationLast;\n        from.trackLast = from.nextTrackLast;\n        // Require mixTime > 0 to ensure the mixing from entry was applied at least once.\n        if (to.mixTime > 0 && to.mixTime >= to.mixDuration) {\n            // Require totalAlpha == 0 to ensure mixing is complete, unless mixDuration == 0 (the transition is a single frame).\n            if (from.totalAlpha == 0 || to.mixDuration == 0) {\n                to.mixingFrom = from.mixingFrom;\n                if (from.mixingFrom)\n                    from.mixingFrom.mixingTo = to;\n                to.interruptAlpha = from.interruptAlpha;\n                this.queue.end(from);\n            }\n            return finished;\n        }\n        from.trackTime += delta * from.timeScale;\n        to.mixTime += delta;\n        return false;\n    }\n    /** Poses the skeleton using the track entry animations. There are no side effects other than invoking listeners, so the\n     * animation state can be applied to multiple skeletons to pose them identically.\n     * @returns True if any animations were applied. */\n    apply(skeleton) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (this.animationsChanged)\n            this._animationsChanged();\n        let events = this.events;\n        let tracks = this.tracks;\n        let applied = false;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current || current.delay > 0)\n                continue;\n            applied = true;\n            let blend = i == 0 ? MixBlend.first : current.mixBlend;\n            // Apply mixing from entries first.\n            let mix = current.alpha;\n            if (current.mixingFrom)\n                mix *= this.applyMixingFrom(current, skeleton, blend);\n            else if (current.trackTime >= current.trackEnd && !current.next)\n                mix = 0;\n            // Apply current entry.\n            let animationLast = current.animationLast, animationTime = current.getAnimationTime(), applyTime = animationTime;\n            let applyEvents = events;\n            if (current.reverse) {\n                applyTime = current.animation.duration - applyTime;\n                applyEvents = null;\n            }\n            let timelines = current.animation.timelines;\n            let timelineCount = timelines.length;\n            if ((i == 0 && mix == 1) || blend == MixBlend.add) {\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    // Fixes issue #302 on IOS9 where mix, blend sometimes became undefined and caused assets\n                    // to sometimes stop rendering when using color correction, as their RGBA values become NaN.\n                    // (https://github.com/pixijs/pixi-spine/issues/302)\n                    Utils.webkit602BugfixHelper(mix, blend);\n                    var timeline = timelines[ii];\n                    if (timeline instanceof AttachmentTimeline)\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, true);\n                    else\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, blend, MixDirection.mixIn);\n                }\n            }\n            else {\n                let timelineMode = current.timelineMode;\n                let shortestRotation = current.shortestRotation;\n                let firstFrame = !shortestRotation && current.timelinesRotation.length != timelineCount << 1;\n                if (firstFrame)\n                    current.timelinesRotation.length = timelineCount << 1;\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    let timeline = timelines[ii];\n                    let timelineBlend = timelineMode[ii] == SUBSEQUENT ? blend : MixBlend.setup;\n                    if (!shortestRotation && timeline instanceof RotateTimeline) {\n                        this.applyRotateTimeline(timeline, skeleton, applyTime, mix, timelineBlend, current.timelinesRotation, ii << 1, firstFrame);\n                    }\n                    else if (timeline instanceof AttachmentTimeline) {\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, true);\n                    }\n                    else {\n                        // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                        Utils.webkit602BugfixHelper(mix, blend);\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, timelineBlend, MixDirection.mixIn);\n                    }\n                }\n            }\n            this.queueEvents(current, animationTime);\n            events.length = 0;\n            current.nextAnimationLast = animationTime;\n            current.nextTrackLast = current.trackTime;\n        }\n        // Set slots attachments to the setup pose, if needed. This occurs if an animation that is mixing out sets attachments so\n        // subsequent timelines see any deform, but the subsequent timelines don't set an attachment (eg they are also mixing out or\n        // the time is before the first key).\n        var setupState = this.unkeyedState + SETUP;\n        var slots = skeleton.slots;\n        for (var i = 0, n = skeleton.slots.length; i < n; i++) {\n            var slot = slots[i];\n            if (slot.attachmentState == setupState) {\n                var attachmentName = slot.data.attachmentName;\n                slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n            }\n        }\n        this.unkeyedState += 2; // Increasing after each use avoids the need to reset attachmentState for every slot.\n        this.queue.drain();\n        return applied;\n    }\n    applyMixingFrom(to, skeleton, blend) {\n        let from = to.mixingFrom;\n        if (from.mixingFrom)\n            this.applyMixingFrom(from, skeleton, blend);\n        let mix = 0;\n        if (to.mixDuration == 0) { // Single frame mix to undo mixingFrom changes.\n            mix = 1;\n            if (blend == MixBlend.first)\n                blend = MixBlend.setup;\n        }\n        else {\n            mix = to.mixTime / to.mixDuration;\n            if (mix > 1)\n                mix = 1;\n            if (blend != MixBlend.first)\n                blend = from.mixBlend;\n        }\n        let attachments = mix < from.attachmentThreshold, drawOrder = mix < from.drawOrderThreshold;\n        let timelines = from.animation.timelines;\n        let timelineCount = timelines.length;\n        let alphaHold = from.alpha * to.interruptAlpha, alphaMix = alphaHold * (1 - mix);\n        let animationLast = from.animationLast, animationTime = from.getAnimationTime(), applyTime = animationTime;\n        let events = null;\n        if (from.reverse)\n            applyTime = from.animation.duration - applyTime;\n        else if (mix < from.eventThreshold)\n            events = this.events;\n        if (blend == MixBlend.add) {\n            for (let i = 0; i < timelineCount; i++)\n                timelines[i].apply(skeleton, animationLast, applyTime, events, alphaMix, blend, MixDirection.mixOut);\n        }\n        else {\n            let timelineMode = from.timelineMode;\n            let timelineHoldMix = from.timelineHoldMix;\n            let shortestRotation = from.shortestRotation;\n            let firstFrame = !shortestRotation && from.timelinesRotation.length != timelineCount << 1;\n            if (firstFrame)\n                from.timelinesRotation.length = timelineCount << 1;\n            from.totalAlpha = 0;\n            for (let i = 0; i < timelineCount; i++) {\n                let timeline = timelines[i];\n                let direction = MixDirection.mixOut;\n                let timelineBlend;\n                let alpha = 0;\n                switch (timelineMode[i]) {\n                    case SUBSEQUENT:\n                        if (!drawOrder && timeline instanceof DrawOrderTimeline)\n                            continue;\n                        timelineBlend = blend;\n                        alpha = alphaMix;\n                        break;\n                    case FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaMix;\n                        break;\n                    case HOLD_SUBSEQUENT:\n                        timelineBlend = blend;\n                        alpha = alphaHold;\n                        break;\n                    case HOLD_FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaHold;\n                        break;\n                    default:\n                        timelineBlend = MixBlend.setup;\n                        let holdMix = timelineHoldMix[i];\n                        alpha = alphaHold * Math.max(0, 1 - holdMix.mixTime / holdMix.mixDuration);\n                        break;\n                }\n                from.totalAlpha += alpha;\n                if (!shortestRotation && timeline instanceof RotateTimeline)\n                    this.applyRotateTimeline(timeline, skeleton, applyTime, alpha, timelineBlend, from.timelinesRotation, i << 1, firstFrame);\n                else if (timeline instanceof AttachmentTimeline)\n                    this.applyAttachmentTimeline(timeline, skeleton, applyTime, timelineBlend, attachments);\n                else {\n                    // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                    Utils.webkit602BugfixHelper(alpha, blend);\n                    if (drawOrder && timeline instanceof DrawOrderTimeline && timelineBlend == MixBlend.setup)\n                        direction = MixDirection.mixIn;\n                    timeline.apply(skeleton, animationLast, applyTime, events, alpha, timelineBlend, direction);\n                }\n            }\n        }\n        if (to.mixDuration > 0)\n            this.queueEvents(from, animationTime);\n        this.events.length = 0;\n        from.nextAnimationLast = animationTime;\n        from.nextTrackLast = from.trackTime;\n        return mix;\n    }\n    applyAttachmentTimeline(timeline, skeleton, time, blend, attachments) {\n        var slot = skeleton.slots[timeline.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (time < timeline.frames[0]) { // Time is before first frame.\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName, attachments);\n        }\n        else\n            this.setAttachment(skeleton, slot, timeline.attachmentNames[Timeline.search1(timeline.frames, time)], attachments);\n        // If an attachment wasn't set (ie before the first frame or attachments is false), set the setup attachment later.\n        if (slot.attachmentState <= this.unkeyedState)\n            slot.attachmentState = this.unkeyedState + SETUP;\n    }\n    setAttachment(skeleton, slot, attachmentName, attachments) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n        if (attachments)\n            slot.attachmentState = this.unkeyedState + CURRENT;\n    }\n    applyRotateTimeline(timeline, skeleton, time, alpha, blend, timelinesRotation, i, firstFrame) {\n        if (firstFrame)\n            timelinesRotation[i] = 0;\n        if (alpha == 1) {\n            timeline.apply(skeleton, 0, time, null, 1, blend, MixDirection.mixIn);\n            return;\n        }\n        let bone = skeleton.bones[timeline.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = timeline.frames;\n        let r1 = 0, r2 = 0;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.rotation = bone.data.rotation;\n                default:\n                    return;\n                case MixBlend.first:\n                    r1 = bone.rotation;\n                    r2 = bone.data.rotation;\n            }\n        }\n        else {\n            r1 = blend == MixBlend.setup ? bone.data.rotation : bone.rotation;\n            r2 = bone.data.rotation + timeline.getCurveValue(time);\n        }\n        // Mix between rotations using the direction of the shortest route on the first frame while detecting crosses.\n        let total = 0, diff = r2 - r1;\n        diff -= (16384 - ((16384.499999999996 - diff / 360) | 0)) * 360;\n        if (diff == 0) {\n            total = timelinesRotation[i];\n        }\n        else {\n            let lastTotal = 0, lastDiff = 0;\n            if (firstFrame) {\n                lastTotal = 0;\n                lastDiff = diff;\n            }\n            else {\n                lastTotal = timelinesRotation[i]; // Angle and direction of mix, including loops.\n                lastDiff = timelinesRotation[i + 1]; // Difference between bones.\n            }\n            let current = diff > 0, dir = lastTotal >= 0;\n            // Detect cross at 0 (not 180).\n            if (MathUtils.signum(lastDiff) != MathUtils.signum(diff) && Math.abs(lastDiff) <= 90) {\n                // A cross after a 360 rotation is a loop.\n                if (Math.abs(lastTotal) > 180)\n                    lastTotal += 360 * MathUtils.signum(lastTotal);\n                dir = current;\n            }\n            total = diff + lastTotal - lastTotal % 360; // Store loops as part of lastTotal.\n            if (dir != current)\n                total += 360 * MathUtils.signum(lastTotal);\n            timelinesRotation[i] = total;\n        }\n        timelinesRotation[i + 1] = diff;\n        bone.rotation = r1 + total * alpha;\n    }\n    queueEvents(entry, animationTime) {\n        let animationStart = entry.animationStart, animationEnd = entry.animationEnd;\n        let duration = animationEnd - animationStart;\n        let trackLastWrapped = entry.trackLast % duration;\n        // Queue events before complete.\n        let events = this.events;\n        let i = 0, n = events.length;\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < trackLastWrapped)\n                break;\n            if (event.time > animationEnd)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n        // Queue complete if completed a loop iteration or the animation.\n        let complete = false;\n        if (entry.loop)\n            complete = duration == 0 || trackLastWrapped > entry.trackTime % duration;\n        else\n            complete = animationTime >= animationEnd && entry.animationLast < animationEnd;\n        if (complete)\n            this.queue.complete(entry);\n        // Queue events after complete.\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < animationStart)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n    }\n    /** Removes all animations from all tracks, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTracks() {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++)\n            this.clearTrack(i);\n        this.tracks.length = 0;\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    /** Removes all animations from the track, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTrack(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return;\n        let current = this.tracks[trackIndex];\n        if (!current)\n            return;\n        this.queue.end(current);\n        this.clearNext(current);\n        let entry = current;\n        while (true) {\n            let from = entry.mixingFrom;\n            if (!from)\n                break;\n            this.queue.end(from);\n            entry.mixingFrom = null;\n            entry.mixingTo = null;\n            entry = from;\n        }\n        this.tracks[current.trackIndex] = null;\n        this.queue.drain();\n    }\n    setCurrent(index, current, interrupt) {\n        let from = this.expandToIndex(index);\n        this.tracks[index] = current;\n        current.previous = null;\n        if (from) {\n            if (interrupt)\n                this.queue.interrupt(from);\n            current.mixingFrom = from;\n            from.mixingTo = current;\n            current.mixTime = 0;\n            // Store the interrupted mix percentage.\n            if (from.mixingFrom && from.mixDuration > 0)\n                current.interruptAlpha *= Math.min(1, from.mixTime / from.mixDuration);\n            from.timelinesRotation.length = 0; // Reset rotation for mixing out, in case entry was mixed in.\n        }\n        this.queue.start(current);\n    }\n    /** Sets an animation by name.\n      *\n      * See {@link #setAnimationWith()}. */\n    setAnimation(trackIndex, animationName, loop = false) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.setAnimationWith(trackIndex, animation, loop);\n    }\n    /** Sets the current animation for a track, discarding any queued animations. If the formerly current track entry was never\n     * applied to a skeleton, it is replaced (not mixed from).\n     * @param loop If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n     *           duration. In either case {@link TrackEntry#trackEnd} determines when the track is cleared.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    setAnimationWith(trackIndex, animation, loop = false) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let interrupt = true;\n        let current = this.expandToIndex(trackIndex);\n        if (current) {\n            if (current.nextTrackLast == -1) {\n                // Don't mix from an entry that was never applied.\n                this.tracks[trackIndex] = current.mixingFrom;\n                this.queue.interrupt(current);\n                this.queue.end(current);\n                this.clearNext(current);\n                current = current.mixingFrom;\n                interrupt = false;\n            }\n            else\n                this.clearNext(current);\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, current);\n        this.setCurrent(trackIndex, entry, interrupt);\n        this.queue.drain();\n        return entry;\n    }\n    /** Queues an animation by name.\n     *\n     * See {@link #addAnimationWith()}. */\n    addAnimation(trackIndex, animationName, loop = false, delay = 0) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.addAnimationWith(trackIndex, animation, loop, delay);\n    }\n    /** Adds an animation to be played after the current or last queued animation for a track. If the track is empty, it is\n     * equivalent to calling {@link #setAnimationWith()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration (from the {@link AnimationStateData}) plus the specified `delay` (ie the mix\n     *           ends at (`delay` = 0) or before (`delay` < 0) the previous track entry duration). If the\n     *           previous entry is looping, its next loop completion is used instead of its duration.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addAnimationWith(trackIndex, animation, loop = false, delay = 0) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let last = this.expandToIndex(trackIndex);\n        if (last) {\n            while (last.next)\n                last = last.next;\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, last);\n        if (!last) {\n            this.setCurrent(trackIndex, entry, true);\n            this.queue.drain();\n        }\n        else {\n            last.next = entry;\n            entry.previous = last;\n            if (delay <= 0)\n                delay += last.getTrackComplete() - entry.mixDuration;\n        }\n        entry.delay = delay;\n        return entry;\n    }\n    /** Sets an empty animation for a track, discarding any queued animations, and sets the track entry's\n     * {@link TrackEntry#mixduration}. An empty animation has no timelines and serves as a placeholder for mixing in or out.\n     *\n     * Mixing out is done by setting an empty animation with a mix duration using either {@link #setEmptyAnimation()},\n     * {@link #setEmptyAnimations()}, or {@link #addEmptyAnimation()}. Mixing to an empty animation causes\n     * the previous animation to be applied less and less over the mix duration. Properties keyed in the previous animation\n     * transition to the value from lower tracks or to the setup pose value if no lower tracks key the property. A mix duration of\n     * 0 still mixes out over one frame.\n     *\n     * Mixing in is done by first setting an empty animation, then adding an animation using\n     * {@link #addAnimation()} and on the returned track entry, set the\n     * {@link TrackEntry#setMixDuration()}. Mixing from an empty animation causes the new animation to be applied more and\n     * more over the mix duration. Properties keyed in the new animation transition from the value from lower tracks or from the\n     * setup pose value if no lower tracks key the property to the value keyed in the new animation. */\n    setEmptyAnimation(trackIndex, mixDuration = 0) {\n        let entry = this.setAnimationWith(trackIndex, AnimationState.emptyAnimation(), false);\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Adds an empty animation to be played after the current or last queued animation for a track, and sets the track entry's\n     * {@link TrackEntry#mixDuration}. If the track is empty, it is equivalent to calling\n     * {@link #setEmptyAnimation()}.\n     *\n     * See {@link #setEmptyAnimation()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration plus the specified `delay` (ie the mix ends at (`delay` = 0) or\n     *           before (`delay` < 0) the previous track entry duration). If the previous entry is looping, its next\n     *           loop completion is used instead of its duration.\n     * @return A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addEmptyAnimation(trackIndex, mixDuration = 0, delay = 0) {\n        let entry = this.addAnimationWith(trackIndex, AnimationState.emptyAnimation(), false, delay);\n        if (delay <= 0)\n            entry.delay += entry.mixDuration - mixDuration;\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Sets an empty animation for every track, discarding any queued animations, and mixes to it over the specified mix\n      * duration. */\n    setEmptyAnimations(mixDuration = 0) {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++) {\n            let current = this.tracks[i];\n            if (current)\n                this.setEmptyAnimation(current.trackIndex, mixDuration);\n        }\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    expandToIndex(index) {\n        if (index < this.tracks.length)\n            return this.tracks[index];\n        Utils.ensureArrayCapacity(this.tracks, index + 1, null);\n        this.tracks.length = index + 1;\n        return null;\n    }\n    /** @param last May be null. */\n    trackEntry(trackIndex, animation, loop, last) {\n        let entry = this.trackEntryPool.obtain();\n        entry.reset();\n        entry.trackIndex = trackIndex;\n        entry.animation = animation;\n        entry.loop = loop;\n        entry.holdPrevious = false;\n        entry.reverse = false;\n        entry.shortestRotation = false;\n        entry.eventThreshold = 0;\n        entry.attachmentThreshold = 0;\n        entry.drawOrderThreshold = 0;\n        entry.animationStart = 0;\n        entry.animationEnd = animation.duration;\n        entry.animationLast = -1;\n        entry.nextAnimationLast = -1;\n        entry.delay = 0;\n        entry.trackTime = 0;\n        entry.trackLast = -1;\n        entry.nextTrackLast = -1;\n        entry.trackEnd = Number.MAX_VALUE;\n        entry.timeScale = 1;\n        entry.alpha = 1;\n        entry.mixTime = 0;\n        entry.mixDuration = !last ? 0 : this.data.getMix(last.animation, animation);\n        entry.interruptAlpha = 1;\n        entry.totalAlpha = 0;\n        entry.mixBlend = MixBlend.replace;\n        return entry;\n    }\n    /** Removes the {@link TrackEntry#getNext() next entry} and all entries after it for the specified entry. */\n    clearNext(entry) {\n        let next = entry.next;\n        while (next) {\n            this.queue.dispose(next);\n            next = next.next;\n        }\n        entry.next = null;\n    }\n    _animationsChanged() {\n        this.animationsChanged = false;\n        this.propertyIDs.clear();\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let entry = tracks[i];\n            if (!entry)\n                continue;\n            while (entry.mixingFrom)\n                entry = entry.mixingFrom;\n            do {\n                if (!entry.mixingTo || entry.mixBlend != MixBlend.add)\n                    this.computeHold(entry);\n                entry = entry.mixingTo;\n            } while (entry);\n        }\n    }\n    computeHold(entry) {\n        let to = entry.mixingTo;\n        let timelines = entry.animation.timelines;\n        let timelinesCount = entry.animation.timelines.length;\n        let timelineMode = entry.timelineMode;\n        timelineMode.length = timelinesCount;\n        let timelineHoldMix = entry.timelineHoldMix;\n        timelineHoldMix.length = 0;\n        let propertyIDs = this.propertyIDs;\n        if (to && to.holdPrevious) {\n            for (let i = 0; i < timelinesCount; i++)\n                timelineMode[i] = propertyIDs.addAll(timelines[i].getPropertyIds()) ? HOLD_FIRST : HOLD_SUBSEQUENT;\n            return;\n        }\n        outer: for (let i = 0; i < timelinesCount; i++) {\n            let timeline = timelines[i];\n            let ids = timeline.getPropertyIds();\n            if (!propertyIDs.addAll(ids))\n                timelineMode[i] = SUBSEQUENT;\n            else if (!to || timeline instanceof AttachmentTimeline || timeline instanceof DrawOrderTimeline\n                || timeline instanceof EventTimeline || !to.animation.hasTimeline(ids)) {\n                timelineMode[i] = FIRST;\n            }\n            else {\n                for (let next = to.mixingTo; next; next = next.mixingTo) {\n                    if (next.animation.hasTimeline(ids))\n                        continue;\n                    if (entry.mixDuration > 0) {\n                        timelineMode[i] = HOLD_MIX;\n                        timelineHoldMix[i] = next;\n                        continue outer;\n                    }\n                    break;\n                }\n                timelineMode[i] = HOLD_FIRST;\n            }\n        }\n    }\n    /** Returns the track entry for the animation currently playing on the track, or null if no animation is currently playing. */\n    getCurrent(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return null;\n        return this.tracks[trackIndex];\n    }\n    /** Adds a listener to receive events for all track entries. */\n    addListener(listener) {\n        if (!listener)\n            throw new Error(\"listener cannot be null.\");\n        this.listeners.push(listener);\n    }\n    /** Removes the listener added with {@link #addListener()}. */\n    removeListener(listener) {\n        let index = this.listeners.indexOf(listener);\n        if (index >= 0)\n            this.listeners.splice(index, 1);\n    }\n    /** Removes all listeners added with {@link #addListener()}. */\n    clearListeners() {\n        this.listeners.length = 0;\n    }\n    /** Discards all listener notifications that have not yet been delivered. This can be useful to call from an\n     * {@link AnimationStateListener} when it is known that further notifications that may have been already queued for delivery\n     * are not wanted because new animations are being set. */\n    clearListenerNotifications() {\n        this.queue.clear();\n    }\n}\n/** Stores settings and other state for the playback of an animation on an {@link AnimationState} track.\n *\n * References to a track entry must not be kept after the {@link AnimationStateListener#dispose()} event occurs. */\nexport class TrackEntry {\n    /** The animation to apply for this track entry. */\n    animation = null;\n    previous = null;\n    /** The animation queued to start after this animation, or null. `next` makes up a linked list. */\n    next = null;\n    /** The track entry for the previous animation when mixing from the previous animation to this animation, or null if no\n     * mixing is currently occuring. When mixing from multiple animations, `mixingFrom` makes up a linked list. */\n    mixingFrom = null;\n    /** The track entry for the next animation when mixing from this animation to the next animation, or null if no mixing is\n     * currently occuring. When mixing to multiple animations, `mixingTo` makes up a linked list. */\n    mixingTo = null;\n    /** The listener for events generated by this track entry, or null.\n     *\n     * A track entry returned from {@link AnimationState#setAnimation()} is already the current animation\n     * for the track, so the track entry listener {@link AnimationStateListener#start()} will not be called. */\n    listener = null;\n    /** The index of the track where this track entry is either current or queued.\n     *\n     * See {@link AnimationState#getCurrent()}. */\n    trackIndex = 0;\n    /** If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n     * duration. */\n    loop = false;\n    /** If true, when mixing from the previous animation to this animation, the previous animation is applied as normal instead\n     * of being mixed out.\n     *\n     * When mixing between animations that key the same property, if a lower track also keys that property then the value will\n     * briefly dip toward the lower track value during the mix. This happens because the first animation mixes from 100% to 0%\n     * while the second animation mixes from 0% to 100%. Setting `holdPrevious` to true applies the first animation\n     * at 100% during the mix so the lower track value is overwritten. Such dipping does not occur on the lowest track which\n     * keys the property, only when a higher track also keys the property.\n     *\n     * Snapping will occur if `holdPrevious` is true and this animation does not key all the same properties as the\n     * previous animation. */\n    holdPrevious = false;\n    reverse = false;\n    shortestRotation = false;\n    /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\n     * `eventThreshold`, event timelines are applied while this animation is being mixed out. Defaults to 0, so event\n     * timelines are not applied while this animation is being mixed out. */\n    eventThreshold = 0;\n    /** When the mix percentage ({@link #mixtime} / {@link #mixDuration}) is less than the\n     * `attachmentThreshold`, attachment timelines are applied while this animation is being mixed out. Defaults to\n     * 0, so attachment timelines are not applied while this animation is being mixed out. */\n    attachmentThreshold = 0;\n    /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\n     * `drawOrderThreshold`, draw order timelines are applied while this animation is being mixed out. Defaults to 0,\n     * so draw order timelines are not applied while this animation is being mixed out. */\n    drawOrderThreshold = 0;\n    /** Seconds when this animation starts, both initially and after looping. Defaults to 0.\n     *\n     * When changing the `animationStart` time, it often makes sense to set {@link #animationLast} to the same\n     * value to prevent timeline keys before the start time from triggering. */\n    animationStart = 0;\n    /** Seconds for the last frame of this animation. Non-looping animations won't play past this time. Looping animations will\n     * loop back to {@link #animationStart} at this time. Defaults to the animation {@link Animation#duration}. */\n    animationEnd = 0;\n    /** The time in seconds this animation was last applied. Some timelines use this for one-time triggers. Eg, when this\n     * animation is applied, event timelines will fire all events between the `animationLast` time (exclusive) and\n     * `animationTime` (inclusive). Defaults to -1 to ensure triggers on frame 0 happen the first time this animation\n     * is applied. */\n    animationLast = 0;\n    nextAnimationLast = 0;\n    /** Seconds to postpone playing the animation. When this track entry is the current track entry, `delay`\n     * postpones incrementing the {@link #trackTime}. When this track entry is queued, `delay` is the time from\n     * the start of the previous animation to when this track entry will become the current track entry (ie when the previous\n     * track entry {@link TrackEntry#trackTime} >= this track entry's `delay`).\n     *\n     * {@link #timeScale} affects the delay. */\n    delay = 0;\n    /** Current time in seconds this track entry has been the current track entry. The track time determines\n     * {@link #animationTime}. The track time can be set to start the animation at a time other than 0, without affecting\n     * looping. */\n    trackTime = 0;\n    trackLast = 0;\n    nextTrackLast = 0;\n    /** The track time in seconds when this animation will be removed from the track. Defaults to the highest possible float\n     * value, meaning the animation will be applied until a new animation is set or the track is cleared. If the track end time\n     * is reached, no other animations are queued for playback, and mixing from any previous animations is complete, then the\n     * properties keyed by the animation are set to the setup pose and the track is cleared.\n     *\n     * It may be desired to use {@link AnimationState#addEmptyAnimation()} rather than have the animation\n     * abruptly cease being applied. */\n    trackEnd = 0;\n    /** Multiplier for the delta time when this track entry is updated, causing time for this animation to pass slower or\n     * faster. Defaults to 1.\n     *\n     * {@link #mixTime} is not affected by track entry time scale, so {@link #mixDuration} may need to be adjusted to\n     * match the animation speed.\n     *\n     * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n     * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, assuming time scale to be 1. If\n     * the time scale is not 1, the delay may need to be adjusted.\n     *\n     * See AnimationState {@link AnimationState#timeScale} for affecting all animations. */\n    timeScale = 0;\n    /** Values < 1 mix this animation with the skeleton's current pose (usually the pose resulting from lower tracks). Defaults\n     * to 1, which overwrites the skeleton's current pose with this animation.\n     *\n     * Typically track 0 is used to completely pose the skeleton, then alpha is used on higher tracks. It doesn't make sense to\n     * use alpha on track 0 if the skeleton pose is from the last frame render. */\n    alpha = 0;\n    /** Seconds from 0 to the {@link #getMixDuration()} when mixing from the previous animation to this animation. May be\n     * slightly more than `mixDuration` when the mix is complete. */\n    mixTime = 0;\n    /** Seconds for mixing from the previous animation to this animation. Defaults to the value provided by AnimationStateData\n     * {@link AnimationStateData#getMix()} based on the animation before this animation (if any).\n     *\n     * A mix duration of 0 still mixes out over one frame to provide the track entry being mixed out a chance to revert the\n     * properties it was animating.\n     *\n     * The `mixDuration` can be set manually rather than use the value from\n     * {@link AnimationStateData#getMix()}. In that case, the `mixDuration` can be set for a new\n     * track entry only before {@link AnimationState#update(float)} is first called.\n     *\n     * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n     * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, not a mix duration set\n     * afterward. */\n    mixDuration = 0;\n    interruptAlpha = 0;\n    totalAlpha = 0;\n    /** Controls how properties keyed in the animation are mixed with lower tracks. Defaults to {@link MixBlend#replace}, which\n     * replaces the values from the lower tracks with the animation values. {@link MixBlend#add} adds the animation values to\n     * the values from the lower tracks.\n     *\n     * The `mixBlend` can be set for a new track entry only before {@link AnimationState#apply()} is first\n     * called. */\n    mixBlend = MixBlend.replace;\n    timelineMode = new Array();\n    timelineHoldMix = new Array();\n    timelinesRotation = new Array();\n    reset() {\n        this.next = null;\n        this.previous = null;\n        this.mixingFrom = null;\n        this.mixingTo = null;\n        this.animation = null;\n        this.listener = null;\n        this.timelineMode.length = 0;\n        this.timelineHoldMix.length = 0;\n        this.timelinesRotation.length = 0;\n    }\n    /** Uses {@link #trackTime} to compute the `animationTime`, which is between {@link #animationStart}\n     * and {@link #animationEnd}. When the `trackTime` is 0, the `animationTime` is equal to the\n     * `animationStart` time. */\n    getAnimationTime() {\n        if (this.loop) {\n            let duration = this.animationEnd - this.animationStart;\n            if (duration == 0)\n                return this.animationStart;\n            return (this.trackTime % duration) + this.animationStart;\n        }\n        return Math.min(this.trackTime + this.animationStart, this.animationEnd);\n    }\n    setAnimationLast(animationLast) {\n        this.animationLast = animationLast;\n        this.nextAnimationLast = animationLast;\n    }\n    /** Returns true if at least one loop has been completed.\n     *\n     * See {@link AnimationStateListener#complete()}. */\n    isComplete() {\n        return this.trackTime >= this.animationEnd - this.animationStart;\n    }\n    /** Resets the rotation directions for mixing this entry's rotate timelines. This can be useful to avoid bones rotating the\n     * long way around when using {@link #alpha} and starting animations on other tracks.\n     *\n     * Mixing with {@link MixBlend#replace} involves finding a rotation between two others, which has two possible solutions:\n     * the short way or the long way around. The two rotations likely change over time, so which direction is the short or long\n     * way also changes. If the short way was always chosen, bones would flip to the other side when that direction became the\n     * long way. TrackEntry chooses the short way the first time it is applied and remembers that direction. */\n    resetRotationDirections() {\n        this.timelinesRotation.length = 0;\n    }\n    getTrackComplete() {\n        let duration = this.animationEnd - this.animationStart;\n        if (duration != 0) {\n            if (this.loop)\n                return duration * (1 + ((this.trackTime / duration) | 0)); // Completion of next loop.\n            if (this.trackTime < duration)\n                return duration; // Before duration.\n        }\n        return this.trackTime; // Next update.\n    }\n}\nexport class EventQueue {\n    objects = [];\n    drainDisabled = false;\n    animState;\n    constructor(animState) {\n        this.animState = animState;\n    }\n    start(entry) {\n        this.objects.push(EventType.start);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    interrupt(entry) {\n        this.objects.push(EventType.interrupt);\n        this.objects.push(entry);\n    }\n    end(entry) {\n        this.objects.push(EventType.end);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    dispose(entry) {\n        this.objects.push(EventType.dispose);\n        this.objects.push(entry);\n    }\n    complete(entry) {\n        this.objects.push(EventType.complete);\n        this.objects.push(entry);\n    }\n    event(entry, event) {\n        this.objects.push(EventType.event);\n        this.objects.push(entry);\n        this.objects.push(event);\n    }\n    drain() {\n        if (this.drainDisabled)\n            return;\n        this.drainDisabled = true;\n        let objects = this.objects;\n        let listeners = this.animState.listeners;\n        for (let i = 0; i < objects.length; i += 2) {\n            let type = objects[i];\n            let entry = objects[i + 1];\n            switch (type) {\n                case EventType.start:\n                    if (entry.listener && entry.listener.start)\n                        entry.listener.start(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.start)\n                            listener.start(entry);\n                    }\n                    break;\n                case EventType.interrupt:\n                    if (entry.listener && entry.listener.interrupt)\n                        entry.listener.interrupt(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.interrupt)\n                            listener.interrupt(entry);\n                    }\n                    break;\n                case EventType.end:\n                    if (entry.listener && entry.listener.end)\n                        entry.listener.end(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.end)\n                            listener.end(entry);\n                    }\n                // Fall through.\n                case EventType.dispose:\n                    if (entry.listener && entry.listener.dispose)\n                        entry.listener.dispose(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.dispose)\n                            listener.dispose(entry);\n                    }\n                    this.animState.trackEntryPool.free(entry);\n                    break;\n                case EventType.complete:\n                    if (entry.listener && entry.listener.complete)\n                        entry.listener.complete(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.complete)\n                            listener.complete(entry);\n                    }\n                    break;\n                case EventType.event:\n                    let event = objects[i++ + 2];\n                    if (entry.listener && entry.listener.event)\n                        entry.listener.event(entry, event);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.event)\n                            listener.event(entry, event);\n                    }\n                    break;\n            }\n        }\n        this.clear();\n        this.drainDisabled = false;\n    }\n    clear() {\n        this.objects.length = 0;\n    }\n}\nexport var EventType;\n(function (EventType) {\n    EventType[EventType[\"start\"] = 0] = \"start\";\n    EventType[EventType[\"interrupt\"] = 1] = \"interrupt\";\n    EventType[EventType[\"end\"] = 2] = \"end\";\n    EventType[EventType[\"dispose\"] = 3] = \"dispose\";\n    EventType[EventType[\"complete\"] = 4] = \"complete\";\n    EventType[EventType[\"event\"] = 5] = \"event\";\n})(EventType || (EventType = {}));\nexport class AnimationStateAdapter {\n    start(entry) {\n    }\n    interrupt(entry) {\n    }\n    end(entry) {\n    }\n    dispose(entry) {\n    }\n    complete(entry) {\n    }\n    event(entry, event) {\n    }\n}\n/** 1. A previously applied timeline has set this property.\n *\n * Result: Mix from the current pose to the timeline pose. */\nexport const SUBSEQUENT = 0;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry applied after this one does not have a timeline to set this property.\n *\n * Result: Mix from the setup pose to the timeline pose. */\nexport const FIRST = 1;\n/** 1) A previously applied timeline has set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the current pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading\n * animations that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_SUBSEQUENT = 2;\n/** 1) This is the first timeline to set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the setup pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading animations\n * that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_FIRST = 3;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry to be applied does have a timeline to set this property.\n * 3. The next track entry after that one does have a timeline to set this property.\n * 4. timelineHoldMix stores the first subsequent track entry that does not have a timeline to set this property.\n *\n * Result: The same as HOLD except the mix percentage from the timelineHoldMix track entry is used. This handles when more than\n * 2 track entries in a row have a timeline that sets the same property.\n *\n * Eg, A -> B -> C -> D where A, B, and C have a timeline setting same property, but D does not. When A is applied, to avoid\n * \"dipping\" A is not mixed out, however D (the first entry that doesn't set the property) mixing in is used to mix out A\n * (which affects B and C). Without using D to mix out, A would be applied fully until mixing completes, then snap into\n * place. */\nexport const HOLD_MIX = 4;\nexport const SETUP = 1;\nexport const CURRENT = 2;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores mix (crossfade) durations to be applied when {@link AnimationState} animations are changed. */\nexport class AnimationStateData {\n    /** The SkeletonData to look up animations when they are specified by name. */\n    skeletonData;\n    animationToMixTime = {};\n    /** The mix duration to use when no mix duration has been defined between two animations. */\n    defaultMix = 0;\n    constructor(skeletonData) {\n        if (!skeletonData)\n            throw new Error(\"skeletonData cannot be null.\");\n        this.skeletonData = skeletonData;\n    }\n    /** Sets a mix duration by animation name.\n     *\n     * See {@link #setMixWith()}. */\n    setMix(fromName, toName, duration) {\n        let from = this.skeletonData.findAnimation(fromName);\n        if (!from)\n            throw new Error(\"Animation not found: \" + fromName);\n        let to = this.skeletonData.findAnimation(toName);\n        if (!to)\n            throw new Error(\"Animation not found: \" + toName);\n        this.setMixWith(from, to, duration);\n    }\n    /** Sets the mix duration when changing from the specified animation to the other.\n     *\n     * See {@link TrackEntry#mixDuration}. */\n    setMixWith(from, to, duration) {\n        if (!from)\n            throw new Error(\"from cannot be null.\");\n        if (!to)\n            throw new Error(\"to cannot be null.\");\n        let key = from.name + \".\" + to.name;\n        this.animationToMixTime[key] = duration;\n    }\n    /** Returns the mix duration to use when changing from the specified animation to the other, or the {@link #defaultMix} if\n      * no mix duration has been set. */\n    getMix(from, to) {\n        let key = from.name + \".\" + to.name;\n        let value = this.animationToMixTime[key];\n        return value === undefined ? this.defaultMix : value;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5pbWF0aW9uU3RhdGVEYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuaW1hdGlvblN0YXRlRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFPL0UseUdBQXlHO0FBQ3pHLE1BQU0sT0FBTyxrQkFBa0I7SUFDOUIsOEVBQThFO0lBQzlFLFlBQVksQ0FBZTtJQUUzQixrQkFBa0IsR0FBc0IsRUFBRSxDQUFDO0lBRTNDLDRGQUE0RjtJQUM1RixVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBRWYsWUFBYSxZQUEwQjtRQUN0QyxJQUFJLENBQUMsWUFBWTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUNsQyxDQUFDO0lBRUQ7O29DQUVnQztJQUNoQyxNQUFNLENBQUUsUUFBZ0IsRUFBRSxNQUFjLEVBQUUsUUFBZ0I7UUFDekQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixHQUFHLFFBQVEsQ0FBQyxDQUFDO1FBQy9ELElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxFQUFFO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVEOzs2Q0FFeUM7SUFDekMsVUFBVSxDQUFFLElBQWUsRUFBRSxFQUFhLEVBQUUsUUFBZ0I7UUFDM0QsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDL0MsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDO0lBQ3pDLENBQUM7SUFFRDt3Q0FDb0M7SUFDcEMsTUFBTSxDQUFFLElBQWUsRUFBRSxFQUFhO1FBQ3JDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDcEMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment with vertices that make up a polygon. Can be used for hit detection, creating physics bodies, spawning particle\n * effects, and more.\n *\n * See {@link SkeletonBounds} and [Bounding Boxes](http://esotericsoftware.com/spine-bounding-boxes) in the Spine User\n * Guide. */\nexport class BoundingBoxAttachment extends VertexAttachment {\n    color = new Color(1, 1, 1, 1);\n    constructor(name) {\n        super(name);\n    }\n    copy() {\n        let copy = new BoundingBoxAttachment(this.name);\n        this.copyTo(copy);\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm91bmRpbmdCb3hBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0JvdW5kaW5nQm94QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQztBQUUvRDs7OztZQUlZO0FBQ1osTUFBTSxPQUFPLHFCQUFzQixTQUFRLGdCQUFnQjtJQUMxRCxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFOUIsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCxJQUFJO1FBQ0gsSUFBSSxJQUFJLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment with vertices that make up a polygon used for clipping the rendering of other attachments. */\nexport class ClippingAttachment extends VertexAttachment {\n    /** Clipping is performed between the clipping polygon's slot and the end slot. Returns null if clipping is done until the end of\n     * the skeleton's rendering. */\n    endSlot = null;\n    // Nonessential.\n    /** The color of the clipping polygon as it was in Spine. Available only when nonessential data was exported. Clipping polygons\n     * are not usually rendered at runtime. */\n    color = new Color(0.2275, 0.2275, 0.8078, 1); // ce3a3aff\n    constructor(name) {\n        super(name);\n    }\n    copy() {\n        let copy = new ClippingAttachment(this.name);\n        this.copyTo(copy);\n        copy.endSlot = this.endSlot;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpcHBpbmdBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0NsaXBwaW5nQXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQztBQUUvRCwrR0FBK0c7QUFDL0csTUFBTSxPQUFPLGtCQUFtQixTQUFRLGdCQUFnQjtJQUN2RDttQ0FDK0I7SUFDL0IsT0FBTyxHQUFvQixJQUFJLENBQUM7SUFFaEMsZ0JBQWdCO0lBQ2hCOzhDQUMwQztJQUMxQyxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXO0lBRXpELFlBQWEsSUFBWTtRQUN4QixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class Texture {\n    _image;\n    constructor(image) {\n        this._image = image;\n    }\n    getImage() {\n        return this._image;\n    }\n}\nexport var TextureFilter;\n(function (TextureFilter) {\n    TextureFilter[TextureFilter[\"Nearest\"] = 9728] = \"Nearest\";\n    TextureFilter[TextureFilter[\"Linear\"] = 9729] = \"Linear\";\n    TextureFilter[TextureFilter[\"MipMap\"] = 9987] = \"MipMap\";\n    TextureFilter[TextureFilter[\"MipMapNearestNearest\"] = 9984] = \"MipMapNearestNearest\";\n    TextureFilter[TextureFilter[\"MipMapLinearNearest\"] = 9985] = \"MipMapLinearNearest\";\n    TextureFilter[TextureFilter[\"MipMapNearestLinear\"] = 9986] = \"MipMapNearestLinear\";\n    TextureFilter[TextureFilter[\"MipMapLinearLinear\"] = 9987] = \"MipMapLinearLinear\"; // WebGLRenderingContext.LINEAR_MIPMAP_LINEAR\n})(TextureFilter || (TextureFilter = {}));\nexport var TextureWrap;\n(function (TextureWrap) {\n    TextureWrap[TextureWrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\n    TextureWrap[TextureWrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\n    TextureWrap[TextureWrap[\"Repeat\"] = 10497] = \"Repeat\"; // WebGLRenderingContext.REPEAT\n})(TextureWrap || (TextureWrap = {}));\nexport class TextureRegion {\n    texture;\n    u = 0;\n    v = 0;\n    u2 = 0;\n    v2 = 0;\n    width = 0;\n    height = 0;\n    degrees = 0;\n    offsetX = 0;\n    offsetY = 0;\n    originalWidth = 0;\n    originalHeight = 0;\n}\nexport class FakeTexture extends Texture {\n    setFilters(minFilter, magFilter) { }\n    setWraps(uWrap, vWrap) { }\n    dispose() { }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9UZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxNQUFNLE9BQWdCLE9BQU87SUFDbEIsTUFBTSxDQUFpQztJQUVqRCxZQUFhLEtBQXFDO1FBQ2pELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxRQUFRO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3BCLENBQUM7Q0FLRDtBQUVELE1BQU0sQ0FBTixJQUFZLGFBUVg7QUFSRCxXQUFZLGFBQWE7SUFDeEIsMERBQWMsQ0FBQTtJQUNkLHdEQUFhLENBQUE7SUFDYix3REFBYSxDQUFBO0lBQ2Isb0ZBQTJCLENBQUE7SUFDM0Isa0ZBQTBCLENBQUE7SUFDMUIsa0ZBQTBCLENBQUE7SUFDMUIsZ0ZBQXlCLENBQUEsQ0FBQyw2Q0FBNkM7QUFDeEUsQ0FBQyxFQVJXLGFBQWEsS0FBYixhQUFhLFFBUXhCO0FBRUQsTUFBTSxDQUFOLElBQVksV0FJWDtBQUpELFdBQVksV0FBVztJQUN0QixxRUFBc0IsQ0FBQTtJQUN0QiwrREFBbUIsQ0FBQTtJQUNuQixxREFBYyxDQUFBLENBQUMsK0JBQStCO0FBQy9DLENBQUMsRUFKVyxXQUFXLEtBQVgsV0FBVyxRQUl0QjtBQUVELE1BQU0sT0FBTyxhQUFhO0lBQ3pCLE9BQU8sQ0FBTTtJQUNiLENBQUMsR0FBRyxDQUFDLENBQUM7SUFBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2IsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDZixLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUN0QixPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ1osT0FBTyxHQUFHLENBQUMsQ0FBQztJQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDekIsYUFBYSxHQUFHLENBQUMsQ0FBQztJQUFDLGNBQWMsR0FBRyxDQUFDLENBQUM7Q0FDdEM7QUFFRCxNQUFNLE9BQU8sV0FBWSxTQUFRLE9BQU87SUFDdkMsVUFBVSxDQUFFLFNBQXdCLEVBQUUsU0FBd0IsSUFBSSxDQUFDO0lBQ25FLFFBQVEsQ0FBRSxLQUFrQixFQUFFLEtBQWtCLElBQUksQ0FBQztJQUNyRCxPQUFPLEtBQU0sQ0FBQztDQUNkIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils.js\";\n/** Stores the setup pose for a {@link Bone}. */\nexport class BoneData {\n    /** The index of the bone in {@link Skeleton#getBones()}. */\n    index = 0;\n    /** The name of the bone, which is unique across all bones in the skeleton. */\n    name;\n    /** @returns May be null. */\n    parent = null;\n    /** The bone's length. */\n    length = 0;\n    /** The local x translation. */\n    x = 0;\n    /** The local y translation. */\n    y = 0;\n    /** The local rotation. */\n    rotation = 0;\n    /** The local scaleX. */\n    scaleX = 1;\n    /** The local scaleY. */\n    scaleY = 1;\n    /** The local shearX. */\n    shearX = 0;\n    /** The local shearX. */\n    shearY = 0;\n    /** The transform mode for how parent world transforms affect this bone. */\n    transformMode = TransformMode.Normal;\n    /** When true, {@link Skeleton#updateWorldTransform()} only updates this bone if the {@link Skeleton#skin} contains this\n      * bone.\n      * @see Skin#bones */\n    skinRequired = false;\n    /** The color of the bone as it was in Spine. Available only when nonessential data was exported. Bones are not usually\n     * rendered at runtime. */\n    color = new Color();\n    constructor(index, name, parent) {\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.parent = parent;\n    }\n}\n/** Determines how a bone inherits world transforms from parent bones. */\nexport var TransformMode;\n(function (TransformMode) {\n    TransformMode[TransformMode[\"Normal\"] = 0] = \"Normal\";\n    TransformMode[TransformMode[\"OnlyTranslation\"] = 1] = \"OnlyTranslation\";\n    TransformMode[TransformMode[\"NoRotationOrReflection\"] = 2] = \"NoRotationOrReflection\";\n    TransformMode[TransformMode[\"NoScale\"] = 3] = \"NoScale\";\n    TransformMode[TransformMode[\"NoScaleOrReflection\"] = 4] = \"NoScaleOrReflection\";\n})(TransformMode || (TransformMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm9uZURhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQm9uZURhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFbkMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBQ3BCLDREQUE0RDtJQUM1RCxLQUFLLEdBQVcsQ0FBQyxDQUFDO0lBRWxCLDhFQUE4RTtJQUM5RSxJQUFJLENBQVM7SUFFYiw0QkFBNEI7SUFDNUIsTUFBTSxHQUFvQixJQUFJLENBQUM7SUFFL0IseUJBQXlCO0lBQ3pCLE1BQU0sR0FBVyxDQUFDLENBQUM7SUFFbkIsK0JBQStCO0lBQy9CLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFTiwrQkFBK0I7SUFDL0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVOLDBCQUEwQjtJQUMxQixRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBRWIsd0JBQXdCO0lBQ3hCLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFFWCx3QkFBd0I7SUFDeEIsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUVYLHdCQUF3QjtJQUN4QixNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBRVgsd0JBQXdCO0lBQ3hCLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFFWCwyRUFBMkU7SUFDM0UsYUFBYSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7SUFFckM7OzBCQUVzQjtJQUN0QixZQUFZLEdBQUcsS0FBSyxDQUFDO0lBRXJCOzhCQUMwQjtJQUMxQixLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUVwQixZQUFhLEtBQWEsRUFBRSxJQUFZLEVBQUUsTUFBdUI7UUFDaEUsSUFBSSxLQUFLLEdBQUcsQ0FBQztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN0QixDQUFDO0NBQ0Q7QUFFRCx5RUFBeUU7QUFDekUsTUFBTSxDQUFOLElBQVksYUFBK0Y7QUFBM0csV0FBWSxhQUFhO0lBQUcscURBQU0sQ0FBQTtJQUFFLHVFQUFlLENBQUE7SUFBRSxxRkFBc0IsQ0FBQTtJQUFFLHVEQUFPLENBQUE7SUFBRSwrRUFBbUIsQ0FBQTtBQUFDLENBQUMsRUFBL0YsYUFBYSxLQUFiLGFBQWEsUUFBa0YifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData.js\";\n/** Stores the setup pose for a {@link PathConstraint}.\n *\n * See [path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraintData extends ConstraintData {\n    /** The bones that will be modified by this path constraint. */\n    bones = new Array();\n    /** The slot whose path attachment will be used to constrained the bones. */\n    _target = null;\n    set target(slotData) { this._target = slotData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"SlotData not set.\");\n        else\n            return this._target;\n    }\n    /** The mode for positioning the first bone on the path. */\n    positionMode = PositionMode.Fixed;\n    /** The mode for positioning the bones after the first bone on the path. */\n    spacingMode = SpacingMode.Fixed;\n    /** The mode for adjusting the rotation of the bones. */\n    rotateMode = RotateMode.Chain;\n    /** An offset added to the constrained bone rotation. */\n    offsetRotation = 0;\n    /** The position along the path. */\n    position = 0;\n    /** The spacing between bones. */\n    spacing = 0;\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    constructor(name) {\n        super(name, 0, false);\n    }\n}\n/** Controls how the first bone is positioned along the path.\n *\n * See [position](http://esotericsoftware.com/spine-path-constraints#Position) in the Spine User Guide. */\nexport var PositionMode;\n(function (PositionMode) {\n    PositionMode[PositionMode[\"Fixed\"] = 0] = \"Fixed\";\n    PositionMode[PositionMode[\"Percent\"] = 1] = \"Percent\";\n})(PositionMode || (PositionMode = {}));\n/** Controls how bones after the first bone are positioned along the path.\n *\n * See [spacing](http://esotericsoftware.com/spine-path-constraints#Spacing) in the Spine User Guide. */\nexport var SpacingMode;\n(function (SpacingMode) {\n    SpacingMode[SpacingMode[\"Length\"] = 0] = \"Length\";\n    SpacingMode[SpacingMode[\"Fixed\"] = 1] = \"Fixed\";\n    SpacingMode[SpacingMode[\"Percent\"] = 2] = \"Percent\";\n    SpacingMode[SpacingMode[\"Proportional\"] = 3] = \"Proportional\";\n})(SpacingMode || (SpacingMode = {}));\n/** Controls how bones are rotated, translated, and scaled to match the path.\n *\n * See [rotate mix](http://esotericsoftware.com/spine-path-constraints#Rotate-mix) in the Spine User Guide. */\nexport var RotateMode;\n(function (RotateMode) {\n    RotateMode[RotateMode[\"Tangent\"] = 0] = \"Tangent\";\n    RotateMode[RotateMode[\"Chain\"] = 1] = \"Chain\";\n    RotateMode[RotateMode[\"ChainScale\"] = 2] = \"ChainScale\";\n})(RotateMode || (RotateMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aENvbnN0cmFpbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1BhdGhDb25zdHJhaW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSXJEOzt5R0FFeUc7QUFDekcsTUFBTSxPQUFPLGtCQUFtQixTQUFRLGNBQWM7SUFFckQsK0RBQStEO0lBQy9ELEtBQUssR0FBRyxJQUFJLEtBQUssRUFBWSxDQUFDO0lBRTlCLDRFQUE0RTtJQUNwRSxPQUFPLEdBQW9CLElBQUksQ0FBQztJQUN4QyxJQUFXLE1BQU0sQ0FBRSxRQUFrQixJQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNuRSxJQUFXLE1BQU07UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBOztZQUNsRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDMUIsQ0FBQztJQUVELDJEQUEyRDtJQUMzRCxZQUFZLEdBQWlCLFlBQVksQ0FBQyxLQUFLLENBQUM7SUFFaEQsMkVBQTJFO0lBQzNFLFdBQVcsR0FBZ0IsV0FBVyxDQUFDLEtBQUssQ0FBQztJQUU3Qyx3REFBd0Q7SUFDeEQsVUFBVSxHQUFlLFVBQVUsQ0FBQyxLQUFLLENBQUM7SUFFMUMsd0RBQXdEO0lBQ3hELGNBQWMsR0FBVyxDQUFDLENBQUM7SUFFM0IsbUNBQW1DO0lBQ25DLFFBQVEsR0FBVyxDQUFDLENBQUM7SUFFckIsaUNBQWlDO0lBQ2pDLE9BQU8sR0FBVyxDQUFDLENBQUM7SUFFcEIsU0FBUyxHQUFHLENBQUMsQ0FBQztJQUNkLElBQUksR0FBRyxDQUFDLENBQUM7SUFDVCxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBRVQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Q0FDRDtBQUVEOzswR0FFMEc7QUFDMUcsTUFBTSxDQUFOLElBQVksWUFBK0I7QUFBM0MsV0FBWSxZQUFZO0lBQUcsaURBQUssQ0FBQTtJQUFFLHFEQUFPLENBQUE7QUFBQyxDQUFDLEVBQS9CLFlBQVksS0FBWixZQUFZLFFBQW1CO0FBRTNDOzt3R0FFd0c7QUFDeEcsTUFBTSxDQUFOLElBQVksV0FBb0Q7QUFBaEUsV0FBWSxXQUFXO0lBQUcsaURBQU0sQ0FBQTtJQUFFLCtDQUFLLENBQUE7SUFBRSxtREFBTyxDQUFBO0lBQUUsNkRBQVksQ0FBQTtBQUFDLENBQUMsRUFBcEQsV0FBVyxLQUFYLFdBQVcsUUFBeUM7QUFFaEU7OzhHQUU4RztBQUM5RyxNQUFNLENBQU4sSUFBWSxVQUF5QztBQUFyRCxXQUFZLFVBQVU7SUFBRyxpREFBTyxDQUFBO0lBQUUsNkNBQUssQ0FBQTtJQUFFLHVEQUFVLENBQUE7QUFBQyxDQUFDLEVBQXpDLFVBQVUsS0FBVixVQUFVLFFBQStCIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils.js\";\n/** Stores the setup pose for a {@link Slot}. */\nexport class SlotData {\n    /** The index of the slot in {@link Skeleton#getSlots()}. */\n    index = 0;\n    /** The name of the slot, which is unique across all slots in the skeleton. */\n    name;\n    /** The bone this slot belongs to. */\n    boneData;\n    /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\n     * color tinting. */\n    color = new Color(1, 1, 1, 1);\n    /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n     * color's alpha is not used. */\n    darkColor = null;\n    /** The name of the attachment that is visible for this slot in the setup pose, or null if no attachment is visible. */\n    attachmentName = null;\n    /** The blend mode for drawing the slot's attachment. */\n    blendMode = BlendMode.Normal;\n    constructor(index, name, boneData) {\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        if (!boneData)\n            throw new Error(\"boneData cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.boneData = boneData;\n    }\n}\n/** Determines how images are blended with existing pixels when drawn. */\nexport var BlendMode;\n(function (BlendMode) {\n    BlendMode[BlendMode[\"Normal\"] = 0] = \"Normal\";\n    BlendMode[BlendMode[\"Additive\"] = 1] = \"Additive\";\n    BlendMode[BlendMode[\"Multiply\"] = 2] = \"Multiply\";\n    BlendMode[BlendMode[\"Screen\"] = 3] = \"Screen\";\n})(BlendMode || (BlendMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2xvdERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRy9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFbkMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBQ3BCLDREQUE0RDtJQUM1RCxLQUFLLEdBQVcsQ0FBQyxDQUFDO0lBRWxCLDhFQUE4RTtJQUM5RSxJQUFJLENBQVM7SUFFYixxQ0FBcUM7SUFDckMsUUFBUSxDQUFXO0lBRW5CO3dCQUNvQjtJQUNwQixLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFOUI7b0NBQ2dDO0lBQ2hDLFNBQVMsR0FBaUIsSUFBSSxDQUFDO0lBRS9CLHVIQUF1SDtJQUN2SCxjQUFjLEdBQWtCLElBQUksQ0FBQztJQUVyQyx3REFBd0Q7SUFDeEQsU0FBUyxHQUFjLFNBQVMsQ0FBQyxNQUFNLENBQUM7SUFFeEMsWUFBYSxLQUFhLEVBQUUsSUFBWSxFQUFFLFFBQWtCO1FBQzNELElBQUksS0FBSyxHQUFHLENBQUM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLFFBQVE7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDMUIsQ0FBQztDQUNEO0FBRUQseUVBQXlFO0FBQ3pFLE1BQU0sQ0FBTixJQUFZLFNBQWdEO0FBQTVELFdBQVksU0FBUztJQUFHLDZDQUFNLENBQUE7SUFBRSxpREFBUSxDQUFBO0lBQUUsaURBQVEsQ0FBQTtJQUFFLDZDQUFNLENBQUE7QUFBQyxDQUFDLEVBQWhELFNBQVMsS0FBVCxTQUFTLFFBQXVDIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, AttachmentTimeline, RGBATimeline, RGBTimeline, RGBA2Timeline, RGB2Timeline, AlphaTimeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline, SequenceTimeline } from \"./Animation.js\";\nimport { Sequence, SequenceModeValues } from \"./attachments/Sequence.js\";\nimport { BoneData } from \"./BoneData.js\";\nimport { Event } from \"./Event.js\";\nimport { EventData } from \"./EventData.js\";\nimport { IkConstraintData } from \"./IkConstraintData.js\";\nimport { PathConstraintData, PositionMode, SpacingMode } from \"./PathConstraintData.js\";\nimport { SkeletonData } from \"./SkeletonData.js\";\nimport { Skin } from \"./Skin.js\";\nimport { SlotData } from \"./SlotData.js\";\nimport { TransformConstraintData } from \"./TransformConstraintData.js\";\nimport { Color, Utils } from \"./Utils.js\";\n/** Loads skeleton data in the Spine binary format.\n *\n * See [Spine binary format](http://esotericsoftware.com/spine-binary-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonBinary {\n    /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n     * runtime than were used in Spine.\n     *\n     * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n    scale = 1;\n    attachmentLoader;\n    linkedMeshes = new Array();\n    constructor(attachmentLoader) {\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(binary) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        skeletonData.name = \"\"; // BOZO\n        let input = new BinaryInput(binary);\n        let lowHash = input.readInt32();\n        let highHash = input.readInt32();\n        skeletonData.hash = highHash == 0 && lowHash == 0 ? null : highHash.toString(16) + lowHash.toString(16);\n        skeletonData.version = input.readString();\n        skeletonData.x = input.readFloat();\n        skeletonData.y = input.readFloat();\n        skeletonData.width = input.readFloat();\n        skeletonData.height = input.readFloat();\n        let nonessential = input.readBoolean();\n        if (nonessential) {\n            skeletonData.fps = input.readFloat();\n            skeletonData.imagesPath = input.readString();\n            skeletonData.audioPath = input.readString();\n        }\n        let n = 0;\n        // Strings.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let str = input.readString();\n            if (!str)\n                throw new Error(\"String in string table must not be null.\");\n            input.strings.push(str);\n        }\n        // Bones.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Bone name must not be null.\");\n            let parent = i == 0 ? null : skeletonData.bones[input.readInt(true)];\n            let data = new BoneData(i, name, parent);\n            data.rotation = input.readFloat();\n            data.x = input.readFloat() * scale;\n            data.y = input.readFloat() * scale;\n            data.scaleX = input.readFloat();\n            data.scaleY = input.readFloat();\n            data.shearX = input.readFloat();\n            data.shearY = input.readFloat();\n            data.length = input.readFloat() * scale;\n            data.transformMode = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            if (nonessential)\n                Color.rgba8888ToColor(data.color, input.readInt32());\n            skeletonData.bones.push(data);\n        }\n        // Slots.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let slotName = input.readString();\n            if (!slotName)\n                throw new Error(\"Slot name must not be null.\");\n            let boneData = skeletonData.bones[input.readInt(true)];\n            let data = new SlotData(i, slotName, boneData);\n            Color.rgba8888ToColor(data.color, input.readInt32());\n            let darkColor = input.readInt32();\n            if (darkColor != -1)\n                Color.rgb888ToColor(data.darkColor = new Color(), darkColor);\n            data.attachmentName = input.readStringRef();\n            data.blendMode = input.readInt(true);\n            skeletonData.slots.push(data);\n        }\n        // IK constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"IK constraint data name must not be null.\");\n            let data = new IkConstraintData(name);\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            data.mix = input.readFloat();\n            data.softness = input.readFloat() * scale;\n            data.bendDirection = input.readByte();\n            data.compress = input.readBoolean();\n            data.stretch = input.readBoolean();\n            data.uniform = input.readBoolean();\n            skeletonData.ikConstraints.push(data);\n        }\n        // Transform constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Transform constraint data name must not be null.\");\n            let data = new TransformConstraintData(name);\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            data.local = input.readBoolean();\n            data.relative = input.readBoolean();\n            data.offsetRotation = input.readFloat();\n            data.offsetX = input.readFloat() * scale;\n            data.offsetY = input.readFloat() * scale;\n            data.offsetScaleX = input.readFloat();\n            data.offsetScaleY = input.readFloat();\n            data.offsetShearY = input.readFloat();\n            data.mixRotate = input.readFloat();\n            data.mixX = input.readFloat();\n            data.mixY = input.readFloat();\n            data.mixScaleX = input.readFloat();\n            data.mixScaleY = input.readFloat();\n            data.mixShearY = input.readFloat();\n            skeletonData.transformConstraints.push(data);\n        }\n        // Path constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Path constraint data name must not be null.\");\n            let data = new PathConstraintData(name);\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.slots[input.readInt(true)];\n            data.positionMode = input.readInt(true);\n            data.spacingMode = input.readInt(true);\n            data.rotateMode = input.readInt(true);\n            data.offsetRotation = input.readFloat();\n            data.position = input.readFloat();\n            if (data.positionMode == PositionMode.Fixed)\n                data.position *= scale;\n            data.spacing = input.readFloat();\n            if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                data.spacing *= scale;\n            data.mixRotate = input.readFloat();\n            data.mixX = input.readFloat();\n            data.mixY = input.readFloat();\n            skeletonData.pathConstraints.push(data);\n        }\n        // Default skin.\n        let defaultSkin = this.readSkin(input, skeletonData, true, nonessential);\n        if (defaultSkin) {\n            skeletonData.defaultSkin = defaultSkin;\n            skeletonData.skins.push(defaultSkin);\n        }\n        // Skins.\n        {\n            let i = skeletonData.skins.length;\n            Utils.setArraySize(skeletonData.skins, n = i + input.readInt(true));\n            for (; i < n; i++) {\n                let skin = this.readSkin(input, skeletonData, false, nonessential);\n                if (!skin)\n                    throw new Error(\"readSkin() should not have returned null.\");\n                skeletonData.skins[i] = skin;\n            }\n        }\n        // Linked meshes.\n        n = this.linkedMeshes.length;\n        for (let i = 0; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n            if (!skin)\n                throw new Error(\"Not skin found for linked mesh.\");\n            if (!linkedMesh.parent)\n                throw new Error(\"Linked mesh parent must not be null\");\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            if (!parent)\n                throw new Error(`Parent mesh not found: ${linkedMesh.parent}`);\n            linkedMesh.mesh.timelineAttachment = linkedMesh.inheritTimeline ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            if (linkedMesh.mesh.region != null)\n                linkedMesh.mesh.updateRegion();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let eventName = input.readStringRef();\n            if (!eventName)\n                throw new Error;\n            let data = new EventData(eventName);\n            data.intValue = input.readInt(false);\n            data.floatValue = input.readFloat();\n            data.stringValue = input.readString();\n            data.audioPath = input.readString();\n            if (data.audioPath) {\n                data.volume = input.readFloat();\n                data.balance = input.readFloat();\n            }\n            skeletonData.events.push(data);\n        }\n        // Animations.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let animationName = input.readString();\n            if (!animationName)\n                throw new Error(\"Animatio name must not be null.\");\n            skeletonData.animations.push(this.readAnimation(input, animationName, skeletonData));\n        }\n        return skeletonData;\n    }\n    readSkin(input, skeletonData, defaultSkin, nonessential) {\n        let skin = null;\n        let slotCount = 0;\n        if (defaultSkin) {\n            slotCount = input.readInt(true);\n            if (slotCount == 0)\n                return null;\n            skin = new Skin(\"default\");\n        }\n        else {\n            let skinName = input.readStringRef();\n            if (!skinName)\n                throw new Error(\"Skin name must not be null.\");\n            skin = new Skin(skinName);\n            skin.bones.length = input.readInt(true);\n            for (let i = 0, n = skin.bones.length; i < n; i++)\n                skin.bones[i] = skeletonData.bones[input.readInt(true)];\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.ikConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.transformConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.pathConstraints[input.readInt(true)]);\n            slotCount = input.readInt(true);\n        }\n        for (let i = 0; i < slotCount; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let name = input.readStringRef();\n                if (!name)\n                    throw new Error(\"Attachment name must not be null\");\n                let attachment = this.readAttachment(input, skeletonData, skin, slotIndex, name, nonessential);\n                if (attachment)\n                    skin.setAttachment(slotIndex, name, attachment);\n            }\n        }\n        return skin;\n    }\n    readAttachment(input, skeletonData, skin, slotIndex, attachmentName, nonessential) {\n        let scale = this.scale;\n        let name = input.readStringRef();\n        if (!name)\n            name = attachmentName;\n        switch (input.readByte()) {\n            case AttachmentType.Region: {\n                let path = input.readStringRef();\n                let rotation = input.readFloat();\n                let x = input.readFloat();\n                let y = input.readFloat();\n                let scaleX = input.readFloat();\n                let scaleY = input.readFloat();\n                let width = input.readFloat();\n                let height = input.readFloat();\n                let color = input.readInt32();\n                let sequence = this.readSequence(input);\n                if (!path)\n                    path = name;\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path, sequence);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = x * scale;\n                region.y = y * scale;\n                region.scaleX = scaleX;\n                region.scaleY = scaleY;\n                region.rotation = rotation;\n                region.width = width * scale;\n                region.height = height * scale;\n                Color.rgba8888ToColor(region.color, color);\n                region.sequence = sequence;\n                if (sequence == null)\n                    region.updateRegion();\n                return region;\n            }\n            case AttachmentType.BoundingBox: {\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let color = nonessential ? input.readInt32() : 0;\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                box.worldVerticesLength = vertexCount << 1;\n                box.vertices = vertices.vertices;\n                box.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(box.color, color);\n                return box;\n            }\n            case AttachmentType.Mesh: {\n                let path = input.readStringRef();\n                let color = input.readInt32();\n                let vertexCount = input.readInt(true);\n                let uvs = this.readFloatArray(input, vertexCount << 1, 1);\n                let triangles = this.readShortArray(input);\n                let vertices = this.readVertices(input, vertexCount);\n                let hullLength = input.readInt(true);\n                let sequence = this.readSequence(input);\n                let edges = [];\n                let width = 0, height = 0;\n                if (nonessential) {\n                    edges = this.readShortArray(input);\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                if (!path)\n                    path = name;\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                mesh.bones = vertices.bones;\n                mesh.vertices = vertices.vertices;\n                mesh.worldVerticesLength = vertexCount << 1;\n                mesh.triangles = triangles;\n                mesh.regionUVs = uvs;\n                if (sequence == null)\n                    mesh.updateRegion();\n                mesh.hullLength = hullLength << 1;\n                mesh.sequence = sequence;\n                if (nonessential) {\n                    mesh.edges = edges;\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                return mesh;\n            }\n            case AttachmentType.LinkedMesh: {\n                let path = input.readStringRef();\n                let color = input.readInt32();\n                let skinName = input.readStringRef();\n                let parent = input.readStringRef();\n                let inheritTimelines = input.readBoolean();\n                let sequence = this.readSequence(input);\n                let width = 0, height = 0;\n                if (nonessential) {\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                if (!path)\n                    path = name;\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                mesh.sequence = sequence;\n                if (nonessential) {\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                this.linkedMeshes.push(new LinkedMesh(mesh, skinName, slotIndex, parent, inheritTimelines));\n                return mesh;\n            }\n            case AttachmentType.Path: {\n                let closed = input.readBoolean();\n                let constantSpeed = input.readBoolean();\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let lengths = Utils.newArray(vertexCount / 3, 0);\n                for (let i = 0, n = lengths.length; i < n; i++)\n                    lengths[i] = input.readFloat() * scale;\n                let color = nonessential ? input.readInt32() : 0;\n                let path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = closed;\n                path.constantSpeed = constantSpeed;\n                path.worldVerticesLength = vertexCount << 1;\n                path.vertices = vertices.vertices;\n                path.bones = vertices.bones;\n                path.lengths = lengths;\n                if (nonessential)\n                    Color.rgba8888ToColor(path.color, color);\n                return path;\n            }\n            case AttachmentType.Point: {\n                let rotation = input.readFloat();\n                let x = input.readFloat();\n                let y = input.readFloat();\n                let color = nonessential ? input.readInt32() : 0;\n                let point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = x * scale;\n                point.y = y * scale;\n                point.rotation = rotation;\n                if (nonessential)\n                    Color.rgba8888ToColor(point.color, color);\n                return point;\n            }\n            case AttachmentType.Clipping: {\n                let endSlotIndex = input.readInt(true);\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let color = nonessential ? input.readInt32() : 0;\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                clip.endSlot = skeletonData.slots[endSlotIndex];\n                clip.worldVerticesLength = vertexCount << 1;\n                clip.vertices = vertices.vertices;\n                clip.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(clip.color, color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readSequence(input) {\n        if (!input.readBoolean())\n            return null;\n        let sequence = new Sequence(input.readInt(true));\n        sequence.start = input.readInt(true);\n        sequence.digits = input.readInt(true);\n        sequence.setupIndex = input.readInt(true);\n        return sequence;\n    }\n    readVertices(input, vertexCount) {\n        let scale = this.scale;\n        let verticesLength = vertexCount << 1;\n        let vertices = new Vertices();\n        if (!input.readBoolean()) {\n            vertices.vertices = this.readFloatArray(input, verticesLength, scale);\n            return vertices;\n        }\n        let weights = new Array();\n        let bonesArray = new Array();\n        for (let i = 0; i < vertexCount; i++) {\n            let boneCount = input.readInt(true);\n            bonesArray.push(boneCount);\n            for (let ii = 0; ii < boneCount; ii++) {\n                bonesArray.push(input.readInt(true));\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat());\n            }\n        }\n        vertices.vertices = Utils.toFloatArray(weights);\n        vertices.bones = bonesArray;\n        return vertices;\n    }\n    readFloatArray(input, n, scale) {\n        let array = new Array(n);\n        if (scale == 1) {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat();\n        }\n        else {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat() * scale;\n        }\n        return array;\n    }\n    readShortArray(input) {\n        let n = input.readInt(true);\n        let array = new Array(n);\n        for (let i = 0; i < n; i++)\n            array[i] = input.readShort();\n        return array;\n    }\n    readAnimation(input, name, skeletonData) {\n        input.readInt(true); // Number of timelines.\n        let timelines = new Array();\n        let scale = this.scale;\n        let tempColor1 = new Color();\n        let tempColor2 = new Color();\n        // Slot timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let timelineType = input.readByte();\n                let frameCount = input.readInt(true);\n                let frameLast = frameCount - 1;\n                switch (timelineType) {\n                    case SLOT_ATTACHMENT: {\n                        let timeline = new AttachmentTimeline(frameCount, slotIndex);\n                        for (let frame = 0; frame < frameCount; frame++)\n                            timeline.setFrame(frame, input.readFloat(), input.readStringRef());\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBATimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            let a2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBTimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBA2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let na = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, na, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 6, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            a = na;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGB2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_ALPHA: {\n                        let timeline = new AlphaTimeline(frameCount, input.readInt(true), slotIndex);\n                        let time = input.readFloat(), a = input.readUnsignedByte() / 255;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let a2 = input.readUnsignedByte() / 255;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let boneIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let type = input.readByte(), frameCount = input.readInt(true), bezierCount = input.readInt(true);\n                switch (type) {\n                    case BONE_ROTATE:\n                        timelines.push(readTimeline1(input, new RotateTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_TRANSLATE:\n                        timelines.push(readTimeline2(input, new TranslateTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEX:\n                        timelines.push(readTimeline1(input, new TranslateXTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEY:\n                        timelines.push(readTimeline1(input, new TranslateYTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_SCALE:\n                        timelines.push(readTimeline2(input, new ScaleTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEX:\n                        timelines.push(readTimeline1(input, new ScaleXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEY:\n                        timelines.push(readTimeline1(input, new ScaleYTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEAR:\n                        timelines.push(readTimeline2(input, new ShearTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARX:\n                        timelines.push(readTimeline1(input, new ShearXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARY:\n                        timelines.push(readTimeline1(input, new ShearYTimeline(frameCount, bezierCount, boneIndex), 1));\n                }\n            }\n        }\n        // IK constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new IkConstraintTimeline(frameCount, input.readInt(true), index);\n            let time = input.readFloat(), mix = input.readFloat(), softness = input.readFloat() * scale;\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mix, softness, input.readByte(), input.readBoolean(), input.readBoolean());\n                if (frame == frameLast)\n                    break;\n                let time2 = input.readFloat(), mix2 = input.readFloat(), softness2 = input.readFloat() * scale;\n                switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                        timeline.setStepped(frame);\n                        break;\n                    case CURVE_BEZIER:\n                        setBezier(input, timeline, bezier++, frame, 0, time, time2, mix, mix2, 1);\n                        setBezier(input, timeline, bezier++, frame, 1, time, time2, softness, softness2, scale);\n                }\n                time = time2;\n                mix = mix2;\n                softness = softness2;\n            }\n            timelines.push(timeline);\n        }\n        // Transform constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new TransformConstraintTimeline(frameCount, input.readInt(true), index);\n            let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat(), mixScaleX = input.readFloat(), mixScaleY = input.readFloat(), mixShearY = input.readFloat();\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                if (frame == frameLast)\n                    break;\n                let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat(), mixScaleX2 = input.readFloat(), mixScaleY2 = input.readFloat(), mixShearY2 = input.readFloat();\n                switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                        timeline.setStepped(frame);\n                        break;\n                    case CURVE_BEZIER:\n                        setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                }\n                time = time2;\n                mixRotate = mixRotate2;\n                mixX = mixX2;\n                mixY = mixY2;\n                mixScaleX = mixScaleX2;\n                mixScaleY = mixScaleY2;\n                mixShearY = mixShearY2;\n            }\n            timelines.push(timeline);\n        }\n        // Path constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true);\n            let data = skeletonData.pathConstraints[index];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                switch (input.readByte()) {\n                    case PATH_POSITION:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintPositionTimeline(input.readInt(true), input.readInt(true), index), data.positionMode == PositionMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_SPACING:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintSpacingTimeline(input.readInt(true), input.readInt(true), index), data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_MIX:\n                        let timeline = new PathConstraintMixTimeline(input.readInt(true), input.readInt(true), index);\n                        let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat();\n                        for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat();\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                        }\n                        timelines.push(timeline);\n                }\n            }\n        }\n        // Deform timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let skin = skeletonData.skins[input.readInt(true)];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let slotIndex = input.readInt(true);\n                for (let iii = 0, nnn = input.readInt(true); iii < nnn; iii++) {\n                    let attachmentName = input.readStringRef();\n                    if (!attachmentName)\n                        throw new Error(\"attachmentName must not be null.\");\n                    let attachment = skin.getAttachment(slotIndex, attachmentName);\n                    let timelineType = input.readByte();\n                    let frameCount = input.readInt(true);\n                    let frameLast = frameCount - 1;\n                    switch (timelineType) {\n                        case ATTACHMENT_DEFORM: {\n                            let vertexAttachment = attachment;\n                            let weighted = vertexAttachment.bones;\n                            let vertices = vertexAttachment.vertices;\n                            let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                            let bezierCount = input.readInt(true);\n                            let timeline = new DeformTimeline(frameCount, bezierCount, slotIndex, vertexAttachment);\n                            let time = input.readFloat();\n                            for (let frame = 0, bezier = 0;; frame++) {\n                                let deform;\n                                let end = input.readInt(true);\n                                if (end == 0)\n                                    deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                                else {\n                                    deform = Utils.newFloatArray(deformLength);\n                                    let start = input.readInt(true);\n                                    end += start;\n                                    if (scale == 1) {\n                                        for (let v = start; v < end; v++)\n                                            deform[v] = input.readFloat();\n                                    }\n                                    else {\n                                        for (let v = start; v < end; v++)\n                                            deform[v] = input.readFloat() * scale;\n                                    }\n                                    if (!weighted) {\n                                        for (let v = 0, vn = deform.length; v < vn; v++)\n                                            deform[v] += vertices[v];\n                                    }\n                                }\n                                timeline.setFrame(frame, time, deform);\n                                if (frame == frameLast)\n                                    break;\n                                let time2 = input.readFloat();\n                                switch (input.readByte()) {\n                                    case CURVE_STEPPED:\n                                        timeline.setStepped(frame);\n                                        break;\n                                    case CURVE_BEZIER:\n                                        setBezier(input, timeline, bezier++, frame, 0, time, time2, 0, 1, 1);\n                                }\n                                time = time2;\n                            }\n                            timelines.push(timeline);\n                            break;\n                        }\n                        case ATTACHMENT_SEQUENCE: {\n                            let timeline = new SequenceTimeline(frameCount, slotIndex, attachment);\n                            for (let frame = 0; frame < frameCount; frame++) {\n                                let time = input.readFloat();\n                                let modeAndIndex = input.readInt32();\n                                timeline.setFrame(frame, time, SequenceModeValues[modeAndIndex & 0xf], modeAndIndex >> 4, input.readFloat());\n                            }\n                            timelines.push(timeline);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        // Draw order timeline.\n        let drawOrderCount = input.readInt(true);\n        if (drawOrderCount > 0) {\n            let timeline = new DrawOrderTimeline(drawOrderCount);\n            let slotCount = skeletonData.slots.length;\n            for (let i = 0; i < drawOrderCount; i++) {\n                let time = input.readFloat();\n                let offsetCount = input.readInt(true);\n                let drawOrder = Utils.newArray(slotCount, 0);\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    drawOrder[ii] = -1;\n                let unchanged = Utils.newArray(slotCount - offsetCount, 0);\n                let originalIndex = 0, unchangedIndex = 0;\n                for (let ii = 0; ii < offsetCount; ii++) {\n                    let slotIndex = input.readInt(true);\n                    // Collect unchanged items.\n                    while (originalIndex != slotIndex)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Set changed items.\n                    drawOrder[originalIndex + input.readInt(true)] = originalIndex++;\n                }\n                // Collect remaining unchanged items.\n                while (originalIndex < slotCount)\n                    unchanged[unchangedIndex++] = originalIndex++;\n                // Fill in unchanged items.\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    if (drawOrder[ii] == -1)\n                        drawOrder[ii] = unchanged[--unchangedIndex];\n                timeline.setFrame(i, time, drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timeline.\n        let eventCount = input.readInt(true);\n        if (eventCount > 0) {\n            let timeline = new EventTimeline(eventCount);\n            for (let i = 0; i < eventCount; i++) {\n                let time = input.readFloat();\n                let eventData = skeletonData.events[input.readInt(true)];\n                let event = new Event(time, eventData);\n                event.intValue = input.readInt(false);\n                event.floatValue = input.readFloat();\n                event.stringValue = input.readBoolean() ? input.readString() : eventData.stringValue;\n                if (event.data.audioPath) {\n                    event.volume = input.readFloat();\n                    event.balance = input.readFloat();\n                }\n                timeline.setFrame(i, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        return new Animation(name, timelines, duration);\n    }\n}\nexport class BinaryInput {\n    strings;\n    index;\n    buffer;\n    constructor(data, strings = new Array(), index = 0, buffer = new DataView(data.buffer)) {\n        this.strings = strings;\n        this.index = index;\n        this.buffer = buffer;\n    }\n    readByte() {\n        return this.buffer.getInt8(this.index++);\n    }\n    readUnsignedByte() {\n        return this.buffer.getUint8(this.index++);\n    }\n    readShort() {\n        let value = this.buffer.getInt16(this.index);\n        this.index += 2;\n        return value;\n    }\n    readInt32() {\n        let value = this.buffer.getInt32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readInt(optimizePositive) {\n        let b = this.readByte();\n        let result = b & 0x7F;\n        if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7F) << 7;\n            if ((b & 0x80) != 0) {\n                b = this.readByte();\n                result |= (b & 0x7F) << 14;\n                if ((b & 0x80) != 0) {\n                    b = this.readByte();\n                    result |= (b & 0x7F) << 21;\n                    if ((b & 0x80) != 0) {\n                        b = this.readByte();\n                        result |= (b & 0x7F) << 28;\n                    }\n                }\n            }\n        }\n        return optimizePositive ? result : ((result >>> 1) ^ -(result & 1));\n    }\n    readStringRef() {\n        let index = this.readInt(true);\n        return index == 0 ? null : this.strings[index - 1];\n    }\n    readString() {\n        let byteCount = this.readInt(true);\n        switch (byteCount) {\n            case 0:\n                return null;\n            case 1:\n                return \"\";\n        }\n        byteCount--;\n        let chars = \"\";\n        let charCount = 0;\n        for (let i = 0; i < byteCount;) {\n            let b = this.readUnsignedByte();\n            switch (b >> 4) {\n                case 12:\n                case 13:\n                    chars += String.fromCharCode(((b & 0x1F) << 6 | this.readByte() & 0x3F));\n                    i += 2;\n                    break;\n                case 14:\n                    chars += String.fromCharCode(((b & 0x0F) << 12 | (this.readByte() & 0x3F) << 6 | this.readByte() & 0x3F));\n                    i += 3;\n                    break;\n                default:\n                    chars += String.fromCharCode(b);\n                    i++;\n            }\n        }\n        return chars;\n    }\n    readFloat() {\n        let value = this.buffer.getFloat32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readBoolean() {\n        return this.readByte() != 0;\n    }\n}\nclass LinkedMesh {\n    parent;\n    skin;\n    slotIndex;\n    mesh;\n    inheritTimeline;\n    constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skin = skin;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritTimeline = inheritDeform;\n    }\n}\nclass Vertices {\n    bones;\n    vertices;\n    constructor(bones = null, vertices = null) {\n        this.bones = bones;\n        this.vertices = vertices;\n    }\n}\nvar AttachmentType;\n(function (AttachmentType) {\n    AttachmentType[AttachmentType[\"Region\"] = 0] = \"Region\";\n    AttachmentType[AttachmentType[\"BoundingBox\"] = 1] = \"BoundingBox\";\n    AttachmentType[AttachmentType[\"Mesh\"] = 2] = \"Mesh\";\n    AttachmentType[AttachmentType[\"LinkedMesh\"] = 3] = \"LinkedMesh\";\n    AttachmentType[AttachmentType[\"Path\"] = 4] = \"Path\";\n    AttachmentType[AttachmentType[\"Point\"] = 5] = \"Point\";\n    AttachmentType[AttachmentType[\"Clipping\"] = 6] = \"Clipping\";\n})(AttachmentType || (AttachmentType = {}));\nfunction readTimeline1(input, timeline, scale) {\n    let time = input.readFloat(), value = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), value2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value, value2, scale);\n        }\n        time = time2;\n        value = value2;\n    }\n    return timeline;\n}\nfunction readTimeline2(input, timeline, scale) {\n    let time = input.readFloat(), value1 = input.readFloat() * scale, value2 = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), nvalue1 = input.readFloat() * scale, nvalue2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value1, nvalue1, scale);\n                setBezier(input, timeline, bezier++, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n    }\n    return timeline;\n}\nfunction setBezier(input, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    timeline.setBezier(bezier, frame, value, time1, value1, input.readFloat(), input.readFloat() * scale, input.readFloat(), input.readFloat() * scale, time2, value2);\n}\nconst BONE_ROTATE = 0;\nconst BONE_TRANSLATE = 1;\nconst BONE_TRANSLATEX = 2;\nconst BONE_TRANSLATEY = 3;\nconst BONE_SCALE = 4;\nconst BONE_SCALEX = 5;\nconst BONE_SCALEY = 6;\nconst BONE_SHEAR = 7;\nconst BONE_SHEARX = 8;\nconst BONE_SHEARY = 9;\nconst SLOT_ATTACHMENT = 0;\nconst SLOT_RGBA = 1;\nconst SLOT_RGB = 2;\nconst SLOT_RGBA2 = 3;\nconst SLOT_RGB2 = 4;\nconst SLOT_ALPHA = 5;\nconst ATTACHMENT_DEFORM = 0;\nconst ATTACHMENT_SEQUENCE = 1;\nconst PATH_POSITION = 0;\nconst PATH_SPACING = 1;\nconst PATH_MIX = 2;\nconst CURVE_LINEAR = 0;\nconst CURVE_STEPPED = 1;\nconst CURVE_BEZIER = 2;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureFilter, TextureWrap, TextureRegion } from \"./Texture.js\";\nimport { Utils } from \"./Utils.js\";\nexport class TextureAtlas {\n    pages = new Array();\n    regions = new Array();\n    constructor(atlasText) {\n        let reader = new TextureAtlasReader(atlasText);\n        let entry = new Array(4);\n        let pageFields = {};\n        pageFields[\"size\"] = (page) => {\n            page.width = parseInt(entry[1]);\n            page.height = parseInt(entry[2]);\n        };\n        pageFields[\"format\"] = () => {\n            // page.format = Format[tuple[0]]; we don't need format in WebGL\n        };\n        pageFields[\"filter\"] = (page) => {\n            page.minFilter = Utils.enumValue(TextureFilter, entry[1]);\n            page.magFilter = Utils.enumValue(TextureFilter, entry[2]);\n        };\n        pageFields[\"repeat\"] = (page) => {\n            if (entry[1].indexOf('x') != -1)\n                page.uWrap = TextureWrap.Repeat;\n            if (entry[1].indexOf('y') != -1)\n                page.vWrap = TextureWrap.Repeat;\n        };\n        pageFields[\"pma\"] = (page) => {\n            page.pma = entry[1] == \"true\";\n        };\n        var regionFields = {};\n        regionFields[\"xy\"] = (region) => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n        };\n        regionFields[\"size\"] = (region) => {\n            region.width = parseInt(entry[1]);\n            region.height = parseInt(entry[2]);\n        };\n        regionFields[\"bounds\"] = (region) => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n            region.width = parseInt(entry[3]);\n            region.height = parseInt(entry[4]);\n        };\n        regionFields[\"offset\"] = (region) => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n        };\n        regionFields[\"orig\"] = (region) => {\n            region.originalWidth = parseInt(entry[1]);\n            region.originalHeight = parseInt(entry[2]);\n        };\n        regionFields[\"offsets\"] = (region) => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n            region.originalWidth = parseInt(entry[3]);\n            region.originalHeight = parseInt(entry[4]);\n        };\n        regionFields[\"rotate\"] = (region) => {\n            let value = entry[1];\n            if (value == \"true\")\n                region.degrees = 90;\n            else if (value != \"false\")\n                region.degrees = parseInt(value);\n        };\n        regionFields[\"index\"] = (region) => {\n            region.index = parseInt(entry[1]);\n        };\n        let line = reader.readLine();\n        // Ignore empty lines before first entry.\n        while (line && line.trim().length == 0)\n            line = reader.readLine();\n        // Header entries.\n        while (true) {\n            if (!line || line.trim().length == 0)\n                break;\n            if (reader.readEntry(entry, line) == 0)\n                break; // Silently ignore all header fields.\n            line = reader.readLine();\n        }\n        // Page and region entries.\n        let page = null;\n        let names = null;\n        let values = null;\n        while (true) {\n            if (line === null)\n                break;\n            if (line.trim().length == 0) {\n                page = null;\n                line = reader.readLine();\n            }\n            else if (!page) {\n                page = new TextureAtlasPage(line.trim());\n                while (true) {\n                    if (reader.readEntry(entry, line = reader.readLine()) == 0)\n                        break;\n                    let field = pageFields[entry[0]];\n                    if (field)\n                        field(page);\n                }\n                this.pages.push(page);\n            }\n            else {\n                let region = new TextureAtlasRegion(page, line);\n                while (true) {\n                    let count = reader.readEntry(entry, line = reader.readLine());\n                    if (count == 0)\n                        break;\n                    let field = regionFields[entry[0]];\n                    if (field)\n                        field(region);\n                    else {\n                        if (!names)\n                            names = [];\n                        if (!values)\n                            values = [];\n                        names.push(entry[0]);\n                        let entryValues = [];\n                        for (let i = 0; i < count; i++)\n                            entryValues.push(parseInt(entry[i + 1]));\n                        values.push(entryValues);\n                    }\n                }\n                if (region.originalWidth == 0 && region.originalHeight == 0) {\n                    region.originalWidth = region.width;\n                    region.originalHeight = region.height;\n                }\n                if (names && names.length > 0 && values && values.length > 0) {\n                    region.names = names;\n                    region.values = values;\n                    names = null;\n                    values = null;\n                }\n                region.u = region.x / page.width;\n                region.v = region.y / page.height;\n                if (region.degrees == 90) {\n                    region.u2 = (region.x + region.height) / page.width;\n                    region.v2 = (region.y + region.width) / page.height;\n                }\n                else {\n                    region.u2 = (region.x + region.width) / page.width;\n                    region.v2 = (region.y + region.height) / page.height;\n                }\n                this.regions.push(region);\n            }\n        }\n    }\n    findRegion(name) {\n        for (let i = 0; i < this.regions.length; i++) {\n            if (this.regions[i].name == name) {\n                return this.regions[i];\n            }\n        }\n        return null;\n    }\n    setTextures(assetManager, pathPrefix = \"\") {\n        for (let page of this.pages)\n            page.setTexture(assetManager.get(pathPrefix + page.name));\n    }\n    dispose() {\n        for (let i = 0; i < this.pages.length; i++) {\n            this.pages[i].texture?.dispose();\n        }\n    }\n}\nclass TextureAtlasReader {\n    lines;\n    index = 0;\n    constructor(text) {\n        this.lines = text.split(/\\r\\n|\\r|\\n/);\n    }\n    readLine() {\n        if (this.index >= this.lines.length)\n            return null;\n        return this.lines[this.index++];\n    }\n    readEntry(entry, line) {\n        if (!line)\n            return 0;\n        line = line.trim();\n        if (line.length == 0)\n            return 0;\n        let colon = line.indexOf(':');\n        if (colon == -1)\n            return 0;\n        entry[0] = line.substr(0, colon).trim();\n        for (let i = 1, lastMatch = colon + 1;; i++) {\n            let comma = line.indexOf(',', lastMatch);\n            if (comma == -1) {\n                entry[i] = line.substr(lastMatch).trim();\n                return i;\n            }\n            entry[i] = line.substr(lastMatch, comma - lastMatch).trim();\n            lastMatch = comma + 1;\n            if (i == 4)\n                return 4;\n        }\n    }\n}\nexport class TextureAtlasPage {\n    name;\n    minFilter = TextureFilter.Nearest;\n    magFilter = TextureFilter.Nearest;\n    uWrap = TextureWrap.ClampToEdge;\n    vWrap = TextureWrap.ClampToEdge;\n    texture = null;\n    width = 0;\n    height = 0;\n    pma = false;\n    regions = new Array();\n    constructor(name) {\n        this.name = name;\n    }\n    setTexture(texture) {\n        this.texture = texture;\n        texture.setFilters(this.minFilter, this.magFilter);\n        texture.setWraps(this.uWrap, this.vWrap);\n        for (let region of this.regions)\n            region.texture = texture;\n    }\n}\nexport class TextureAtlasRegion extends TextureRegion {\n    page;\n    name;\n    x = 0;\n    y = 0;\n    offsetX = 0;\n    offsetY = 0;\n    originalWidth = 0;\n    originalHeight = 0;\n    index = 0;\n    degrees = 0;\n    names = null;\n    values = null;\n    constructor(page, name) {\n        super();\n        this.page = page;\n        this.name = name;\n        page.regions.push(this);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlasRegion } from \"../TextureAtlas.js\";\nimport { Color, Utils } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment that displays a textured mesh. A mesh has hull vertices and internal vertices within the hull. Holes are not\n * supported. Each vertex has UVs (texture coordinates) and triangles are used to map an image on to the mesh.\n *\n * See [Mesh attachments](http://esotericsoftware.com/spine-meshes) in the Spine User Guide. */\nexport class MeshAttachment extends VertexAttachment {\n    region = null;\n    /** The name of the texture region for this attachment. */\n    path;\n    /** The UV pair for each vertex, normalized within the texture region. */\n    regionUVs = [];\n    /** The UV pair for each vertex, normalized within the entire texture.\n     *\n     * See {@link #updateUVs}. */\n    uvs = [];\n    /** Triplets of vertex indices which describe the mesh's triangulation. */\n    triangles = [];\n    /** The color to tint the mesh. */\n    color = new Color(1, 1, 1, 1);\n    /** The width of the mesh's image. Available only when nonessential data was exported. */\n    width = 0;\n    /** The height of the mesh's image. Available only when nonessential data was exported. */\n    height = 0;\n    /** The number of entries at the beginning of {@link #vertices} that make up the mesh hull. */\n    hullLength = 0;\n    /** Vertex index pairs describing edges for controling triangulation. Mesh triangles will never cross edges. Only available if\n     * nonessential data was exported. Triangulation is not performed at runtime. */\n    edges = [];\n    parentMesh = null;\n    sequence = null;\n    tempColor = new Color(0, 0, 0, 0);\n    constructor(name, path) {\n        super(name);\n        this.path = path;\n    }\n    /** Calculates {@link #uvs} using the {@link #regionUVs} and region. Must be called if the region, the region's properties, or\n     * the {@link #regionUVs} are changed. */\n    updateRegion() {\n        if (!this.region)\n            throw new Error(\"Region not set.\");\n        let regionUVs = this.regionUVs;\n        if (!this.uvs || this.uvs.length != regionUVs.length)\n            this.uvs = Utils.newFloatArray(regionUVs.length);\n        let uvs = this.uvs;\n        let n = this.uvs.length;\n        let u = this.region.u, v = this.region.v, width = 0, height = 0;\n        if (this.region instanceof TextureAtlasRegion) {\n            let region = this.region, image = region.page.texture.getImage();\n            let textureWidth = image.width, textureHeight = image.height;\n            switch (region.degrees) {\n                case 90:\n                    u -= (region.originalHeight - region.offsetY - region.height) / textureWidth;\n                    v -= (region.originalWidth - region.offsetX - region.width) / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + regionUVs[i + 1] * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i]) * height;\n                    }\n                    return;\n                case 180:\n                    u -= (region.originalWidth - region.offsetX - region.width) / textureWidth;\n                    v -= region.offsetY / textureHeight;\n                    width = region.originalWidth / textureWidth;\n                    height = region.originalHeight / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i]) * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i + 1]) * height;\n                    }\n                    return;\n                case 270:\n                    u -= region.offsetY / textureWidth;\n                    v -= region.offsetX / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i + 1]) * width;\n                        uvs[i + 1] = v + regionUVs[i] * height;\n                    }\n                    return;\n            }\n            u -= region.offsetX / textureWidth;\n            v -= (region.originalHeight - region.offsetY - region.height) / textureHeight;\n            width = region.originalWidth / textureWidth;\n            height = region.originalHeight / textureHeight;\n        }\n        else if (!this.region) {\n            u = v = 0;\n            width = height = 1;\n        }\n        else {\n            width = this.region.u2 - u;\n            height = this.region.v2 - v;\n        }\n        for (let i = 0; i < n; i += 2) {\n            uvs[i] = u + regionUVs[i] * width;\n            uvs[i + 1] = v + regionUVs[i + 1] * height;\n        }\n    }\n    /** The parent mesh if this is a linked mesh, else null. A linked mesh shares the {@link #bones}, {@link #vertices},\n     * {@link #regionUVs}, {@link #triangles}, {@link #hullLength}, {@link #edges}, {@link #width}, and {@link #height} with the\n     * parent mesh, but may have a different {@link #name} or {@link #path} (and therefore a different texture). */\n    getParentMesh() {\n        return this.parentMesh;\n    }\n    /** @param parentMesh May be null. */\n    setParentMesh(parentMesh) {\n        this.parentMesh = parentMesh;\n        if (parentMesh) {\n            this.bones = parentMesh.bones;\n            this.vertices = parentMesh.vertices;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n            this.regionUVs = parentMesh.regionUVs;\n            this.triangles = parentMesh.triangles;\n            this.hullLength = parentMesh.hullLength;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n        }\n    }\n    copy() {\n        if (this.parentMesh)\n            return this.newLinkedMesh();\n        let copy = new MeshAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.color.setFromColor(this.color);\n        this.copyTo(copy);\n        copy.regionUVs = new Array(this.regionUVs.length);\n        Utils.arrayCopy(this.regionUVs, 0, copy.regionUVs, 0, this.regionUVs.length);\n        copy.uvs = new Array(this.uvs.length);\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, this.uvs.length);\n        copy.triangles = new Array(this.triangles.length);\n        Utils.arrayCopy(this.triangles, 0, copy.triangles, 0, this.triangles.length);\n        copy.hullLength = this.hullLength;\n        copy.sequence = this.sequence != null ? this.sequence.copy() : null;\n        // Nonessential.\n        if (this.edges) {\n            copy.edges = new Array(this.edges.length);\n            Utils.arrayCopy(this.edges, 0, copy.edges, 0, this.edges.length);\n        }\n        copy.width = this.width;\n        copy.height = this.height;\n        return copy;\n    }\n    computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n        if (this.sequence != null)\n            this.sequence.apply(slot, this);\n        super.computeWorldVertices(slot, start, count, worldVertices, offset, stride);\n    }\n    /** Returns a new mesh with the {@link #parentMesh} set to this mesh's parent mesh, if any, else to this mesh. **/\n    newLinkedMesh() {\n        let copy = new MeshAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.color.setFromColor(this.color);\n        copy.timelineAttachment = this.timelineAttachment;\n        copy.setParentMesh(this.parentMesh ? this.parentMesh : this);\n        if (copy.region != null)\n            copy.updateRegion();\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Utils } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment whose vertices make up a composite Bezier curve.\n *\n * See {@link PathConstraint} and [Paths](http://esotericsoftware.com/spine-paths) in the Spine User Guide. */\nexport class PathAttachment extends VertexAttachment {\n    /** The lengths along the path in the setup pose from the start of the path to the end of each Bezier curve. */\n    lengths = [];\n    /** If true, the start and end knots are connected. */\n    closed = false;\n    /** If true, additional calculations are performed to make calculating positions along the path more accurate. If false, fewer\n     * calculations are performed but calculating positions along the path is less accurate. */\n    constantSpeed = false;\n    /** The color of the path as it was in Spine. Available only when nonessential data was exported. Paths are not usually\n     * rendered at runtime. */\n    color = new Color(1, 1, 1, 1);\n    constructor(name) {\n        super(name);\n    }\n    copy() {\n        let copy = new PathAttachment(this.name);\n        this.copyTo(copy);\n        copy.lengths = new Array(this.lengths.length);\n        Utils.arrayCopy(this.lengths, 0, copy.lengths, 0, this.lengths.length);\n        copy.closed = closed;\n        copy.constantSpeed = this.constantSpeed;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aEF0dGFjaG1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvUGF0aEF0dGFjaG1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBYyxNQUFNLGlCQUFpQixDQUFDO0FBRS9EOzs4R0FFOEc7QUFDOUcsTUFBTSxPQUFPLGNBQWUsU0FBUSxnQkFBZ0I7SUFFbkQsK0dBQStHO0lBQy9HLE9BQU8sR0FBa0IsRUFBRSxDQUFDO0lBRTVCLHNEQUFzRDtJQUN0RCxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBRWY7K0ZBQzJGO0lBQzNGLGFBQWEsR0FBRyxLQUFLLENBQUM7SUFFdEI7OEJBQzBCO0lBQzFCLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUU5QixZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxDQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment which is a single point and a rotation. This can be used to spawn projectiles, particles, etc. A bone can be\n * used in similar ways, but a PointAttachment is slightly less expensive to compute and can be hidden, shown, and placed in a\n * skin.\n *\n * See [Point Attachments](http://esotericsoftware.com/spine-point-attachments) in the Spine User Guide. */\nexport class PointAttachment extends VertexAttachment {\n    x = 0;\n    y = 0;\n    rotation = 0;\n    /** The color of the point attachment as it was in Spine. Available only when nonessential data was exported. Point attachments\n     * are not usually rendered at runtime. */\n    color = new Color(0.38, 0.94, 0, 1);\n    constructor(name) {\n        super(name);\n    }\n    computeWorldPosition(bone, point) {\n        point.x = this.x * bone.a + this.y * bone.b + bone.worldX;\n        point.y = this.x * bone.c + this.y * bone.d + bone.worldY;\n        return point;\n    }\n    computeWorldRotation(bone) {\n        let cos = MathUtils.cosDeg(this.rotation), sin = MathUtils.sinDeg(this.rotation);\n        let x = cos * bone.a + sin * bone.b;\n        let y = cos * bone.c + sin * bone.d;\n        return Math.atan2(y, x) * MathUtils.radDeg;\n    }\n    copy() {\n        let copy = new PointAttachment(this.name);\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.rotation = this.rotation;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9pbnRBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL1BvaW50QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBVyxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFjLE1BQU0saUJBQWlCLENBQUM7QUFFL0Q7Ozs7MkdBSTJHO0FBQzNHLE1BQU0sT0FBTyxlQUFnQixTQUFRLGdCQUFnQjtJQUNwRCxDQUFDLEdBQVcsQ0FBQyxDQUFDO0lBQ2QsQ0FBQyxHQUFXLENBQUMsQ0FBQztJQUNkLFFBQVEsR0FBVyxDQUFDLENBQUM7SUFFckI7OENBQzBDO0lBQzFDLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUVwQyxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELG9CQUFvQixDQUFFLElBQVUsRUFBRSxLQUFjO1FBQy9DLEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFELEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFELE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztJQUVELG9CQUFvQixDQUFFLElBQVU7UUFDL0IsSUFBSSxHQUFHLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pGLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQztJQUM1QyxDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDaEIsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM5QixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Utils } from \"../Utils.js\";\nimport { Attachment } from \"./Attachment.js\";\n/** An attachment that displays a textured quadrilateral.\n *\n * See [Region attachments](http://esotericsoftware.com/spine-regions) in the Spine User Guide. */\nexport class RegionAttachment extends Attachment {\n    /** The local x translation. */\n    x = 0;\n    /** The local y translation. */\n    y = 0;\n    /** The local scaleX. */\n    scaleX = 1;\n    /** The local scaleY. */\n    scaleY = 1;\n    /** The local rotation. */\n    rotation = 0;\n    /** The width of the region attachment in Spine. */\n    width = 0;\n    /** The height of the region attachment in Spine. */\n    height = 0;\n    /** The color to tint the region attachment. */\n    color = new Color(1, 1, 1, 1);\n    /** The name of the texture region for this attachment. */\n    path;\n    region = null;\n    sequence = null;\n    /** For each of the 4 vertices, a pair of <code>x,y</code> values that is the local position of the vertex.\n     *\n     * See {@link #updateOffset()}. */\n    offset = Utils.newFloatArray(8);\n    uvs = Utils.newFloatArray(8);\n    tempColor = new Color(1, 1, 1, 1);\n    constructor(name, path) {\n        super(name);\n        this.path = path;\n    }\n    /** Calculates the {@link #offset} using the region settings. Must be called after changing region settings. */\n    updateRegion() {\n        if (!this.region)\n            throw new Error(\"Region not set.\");\n        let region = this.region;\n        let uvs = this.uvs;\n        if (region == null) {\n            uvs[0] = 0;\n            uvs[1] = 0;\n            uvs[2] = 0;\n            uvs[3] = 1;\n            uvs[4] = 1;\n            uvs[5] = 1;\n            uvs[6] = 1;\n            uvs[7] = 0;\n            return;\n        }\n        let regionScaleX = this.width / this.region.originalWidth * this.scaleX;\n        let regionScaleY = this.height / this.region.originalHeight * this.scaleY;\n        let localX = -this.width / 2 * this.scaleX + this.region.offsetX * regionScaleX;\n        let localY = -this.height / 2 * this.scaleY + this.region.offsetY * regionScaleY;\n        let localX2 = localX + this.region.width * regionScaleX;\n        let localY2 = localY + this.region.height * regionScaleY;\n        let radians = this.rotation * Math.PI / 180;\n        let cos = Math.cos(radians);\n        let sin = Math.sin(radians);\n        let x = this.x, y = this.y;\n        let localXCos = localX * cos + x;\n        let localXSin = localX * sin;\n        let localYCos = localY * cos + y;\n        let localYSin = localY * sin;\n        let localX2Cos = localX2 * cos + x;\n        let localX2Sin = localX2 * sin;\n        let localY2Cos = localY2 * cos + y;\n        let localY2Sin = localY2 * sin;\n        let offset = this.offset;\n        offset[0] = localXCos - localYSin;\n        offset[1] = localYCos + localXSin;\n        offset[2] = localXCos - localY2Sin;\n        offset[3] = localY2Cos + localXSin;\n        offset[4] = localX2Cos - localY2Sin;\n        offset[5] = localY2Cos + localX2Sin;\n        offset[6] = localX2Cos - localYSin;\n        offset[7] = localYCos + localX2Sin;\n        if (region.degrees == 90) {\n            uvs[0] = region.u2;\n            uvs[1] = region.v2;\n            uvs[2] = region.u;\n            uvs[3] = region.v2;\n            uvs[4] = region.u;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v;\n        }\n        else {\n            uvs[0] = region.u;\n            uvs[1] = region.v2;\n            uvs[2] = region.u;\n            uvs[3] = region.v;\n            uvs[4] = region.u2;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v2;\n        }\n    }\n    /** Transforms the attachment's four vertices to world coordinates. If the attachment has a {@link #sequence}, the region may\n     * be changed.\n     * <p>\n     * See <a href=\"http://esotericsoftware.com/spine-runtime-skeletons#World-transforms\">World transforms</a> in the Spine\n     * Runtimes Guide.\n     * @param worldVertices The output world vertices. Must have a length >= <code>offset</code> + 8.\n     * @param offset The <code>worldVertices</code> index to begin writing values.\n     * @param stride The number of <code>worldVertices</code> entries between the value pairs written. */\n    computeWorldVertices(slot, worldVertices, offset, stride) {\n        if (this.sequence != null)\n            this.sequence.apply(slot, this);\n        let bone = slot.bone;\n        let vertexOffset = this.offset;\n        let x = bone.worldX, y = bone.worldY;\n        let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n        let offsetX = 0, offsetY = 0;\n        offsetX = vertexOffset[0];\n        offsetY = vertexOffset[1];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // br\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[2];\n        offsetY = vertexOffset[3];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // bl\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[4];\n        offsetY = vertexOffset[5];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ul\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[6];\n        offsetY = vertexOffset[7];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ur\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n    }\n    copy() {\n        let copy = new RegionAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.scaleX = this.scaleX;\n        copy.scaleY = this.scaleY;\n        copy.rotation = this.rotation;\n        copy.width = this.width;\n        copy.height = this.height;\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, 8);\n        Utils.arrayCopy(this.offset, 0, copy.offset, 0, 8);\n        copy.color.setFromColor(this.color);\n        copy.sequence = this.sequence != null ? this.sequence.copy() : null;\n        return copy;\n    }\n    static X1 = 0;\n    static Y1 = 1;\n    static C1R = 2;\n    static C1G = 3;\n    static C1B = 4;\n    static C1A = 5;\n    static U1 = 6;\n    static V1 = 7;\n    static X2 = 8;\n    static Y2 = 9;\n    static C2R = 10;\n    static C2G = 11;\n    static C2B = 12;\n    static C2A = 13;\n    static U2 = 14;\n    static V2 = 15;\n    static X3 = 16;\n    static Y3 = 17;\n    static C3R = 18;\n    static C3G = 19;\n    static C3B = 20;\n    static C3A = 21;\n    static U3 = 22;\n    static V3 = 23;\n    static X4 = 24;\n    static Y4 = 25;\n    static C4R = 26;\n    static C4G = 27;\n    static C4B = 28;\n    static C4A = 29;\n    static U4 = 30;\n    static V4 = 31;\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment.js\";\nimport { ClippingAttachment } from \"./attachments/ClippingAttachment.js\";\nimport { MeshAttachment } from \"./attachments/MeshAttachment.js\";\nimport { PathAttachment } from \"./attachments/PathAttachment.js\";\nimport { PointAttachment } from \"./attachments/PointAttachment.js\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment.js\";\n/** An {@link AttachmentLoader} that configures attachments using texture regions from an {@link TextureAtlas}.\n *\n * See [Loading skeleton data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the\n * Spine Runtimes Guide. */\nexport class AtlasAttachmentLoader {\n    atlas;\n    constructor(atlas) {\n        this.atlas = atlas;\n    }\n    loadSequence(name, basePath, sequence) {\n        let regions = sequence.regions;\n        for (let i = 0, n = regions.length; i < n; i++) {\n            let path = sequence.getPath(basePath, i);\n            let region = this.atlas.findRegion(path);\n            if (region == null)\n                throw new Error(\"Region not found in atlas: \" + path + \" (sequence: \" + name + \")\");\n            regions[i] = region;\n        }\n    }\n    newRegionAttachment(skin, name, path, sequence) {\n        let attachment = new RegionAttachment(name, path);\n        if (sequence != null) {\n            this.loadSequence(name, path, sequence);\n        }\n        else {\n            let region = this.atlas.findRegion(path);\n            if (!region)\n                throw new Error(\"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\");\n            attachment.region = region;\n        }\n        return attachment;\n    }\n    newMeshAttachment(skin, name, path, sequence) {\n        let attachment = new MeshAttachment(name, path);\n        if (sequence != null) {\n            this.loadSequence(name, path, sequence);\n        }\n        else {\n            let region = this.atlas.findRegion(path);\n            if (!region)\n                throw new Error(\"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\");\n            attachment.region = region;\n        }\n        return attachment;\n    }\n    newBoundingBoxAttachment(skin, name) {\n        return new BoundingBoxAttachment(name);\n    }\n    newPathAttachment(skin, name) {\n        return new PathAttachment(name);\n    }\n    newPointAttachment(skin, name) {\n        return new PointAttachment(name);\n    }\n    newClippingAttachment(skin, name) {\n        return new ClippingAttachment(name);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXRsYXNBdHRhY2htZW50TG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0F0bGFzQXR0YWNobWVudExvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDekUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFLckU7OzsyQkFHMkI7QUFDM0IsTUFBTSxPQUFPLHFCQUFxQjtJQUNqQyxLQUFLLENBQWU7SUFFcEIsWUFBYSxLQUFtQjtRQUMvQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRUQsWUFBWSxDQUFFLElBQVksRUFBRSxRQUFnQixFQUFFLFFBQWtCO1FBQy9ELElBQUksT0FBTyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUM7UUFDL0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMvQyxJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN6QyxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLE1BQU0sSUFBSSxJQUFJO2dCQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNkJBQTZCLEdBQUcsSUFBSSxHQUFHLGNBQWMsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDeEcsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQztTQUNwQjtJQUNGLENBQUM7SUFFRCxtQkFBbUIsQ0FBRSxJQUFVLEVBQUUsSUFBWSxFQUFFLElBQVksRUFBRSxRQUFrQjtRQUM5RSxJQUFJLFVBQVUsR0FBRyxJQUFJLGdCQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNsRCxJQUFJLFFBQVEsSUFBSSxJQUFJLEVBQUU7WUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ3hDO2FBQU07WUFDTixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsTUFBTTtnQkFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixHQUFHLElBQUksR0FBRyx1QkFBdUIsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDMUcsVUFBVSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7U0FDM0I7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsaUJBQWlCLENBQUUsSUFBVSxFQUFFLElBQVksRUFBRSxJQUFZLEVBQUUsUUFBa0I7UUFDNUUsSUFBSSxVQUFVLEdBQUcsSUFBSSxjQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksUUFBUSxJQUFJLElBQUksRUFBRTtZQUNyQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDeEM7YUFBTTtZQUNOLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxNQUFNO2dCQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNkJBQTZCLEdBQUcsSUFBSSxHQUFHLHFCQUFxQixHQUFHLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztZQUN4RyxVQUFVLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUMzQjtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFFRCx3QkFBd0IsQ0FBRSxJQUFVLEVBQUUsSUFBWTtRQUNqRCxPQUFPLElBQUkscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELGlCQUFpQixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQzFDLE9BQU8sSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELGtCQUFrQixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQzNDLE9BQU8sSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELHFCQUFxQixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQzlDLE9BQU8sSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TransformMode } from \"./BoneData.js\";\nimport { MathUtils } from \"./Utils.js\";\n/** Stores a bone's current pose.\n *\n * A bone has a local transform which is used to compute its world transform. A bone also has an applied transform, which is a\n * local transform that can be applied to compute the world transform. The local transform and applied transform may differ if a\n * constraint or application code modifies the world transform after it was computed from the local transform. */\nexport class Bone {\n    /** The bone's setup pose data. */\n    data;\n    /** The skeleton this bone belongs to. */\n    skeleton;\n    /** The parent bone, or null if this is the root bone. */\n    parent = null;\n    /** The immediate children of this bone. */\n    children = new Array();\n    /** The local x translation. */\n    x = 0;\n    /** The local y translation. */\n    y = 0;\n    /** The local rotation in degrees, counter clockwise. */\n    rotation = 0;\n    /** The local scaleX. */\n    scaleX = 0;\n    /** The local scaleY. */\n    scaleY = 0;\n    /** The local shearX. */\n    shearX = 0;\n    /** The local shearY. */\n    shearY = 0;\n    /** The applied local x translation. */\n    ax = 0;\n    /** The applied local y translation. */\n    ay = 0;\n    /** The applied local rotation in degrees, counter clockwise. */\n    arotation = 0;\n    /** The applied local scaleX. */\n    ascaleX = 0;\n    /** The applied local scaleY. */\n    ascaleY = 0;\n    /** The applied local shearX. */\n    ashearX = 0;\n    /** The applied local shearY. */\n    ashearY = 0;\n    /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    a = 0;\n    /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    b = 0;\n    /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    c = 0;\n    /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    d = 0;\n    /** The world X position. If changed, {@link #updateAppliedTransform()} should be called. */\n    worldY = 0;\n    /** The world Y position. If changed, {@link #updateAppliedTransform()} should be called. */\n    worldX = 0;\n    sorted = false;\n    active = false;\n    /** @param parent May be null. */\n    constructor(data, skeleton, parent) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.skeleton = skeleton;\n        this.parent = parent;\n        this.setToSetupPose();\n    }\n    /** Returns false when the bone has not been computed because {@link BoneData#skinRequired} is true and the\n      * {@link Skeleton#skin active skin} does not {@link Skin#bones contain} this bone. */\n    isActive() {\n        return this.active;\n    }\n    /** Computes the world transform using the parent bone and this bone's local applied transform. */\n    update() {\n        this.updateWorldTransformWith(this.ax, this.ay, this.arotation, this.ascaleX, this.ascaleY, this.ashearX, this.ashearY);\n    }\n    /** Computes the world transform using the parent bone and this bone's local transform.\n     *\n     * See {@link #updateWorldTransformWith()}. */\n    updateWorldTransform() {\n        this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);\n    }\n    /** Computes the world transform using the parent bone and the specified local transform. The applied transform is set to the\n     * specified local transform. Child bones are not updated.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransformWith(x, y, rotation, scaleX, scaleY, shearX, shearY) {\n        this.ax = x;\n        this.ay = y;\n        this.arotation = rotation;\n        this.ascaleX = scaleX;\n        this.ascaleY = scaleY;\n        this.ashearX = shearX;\n        this.ashearY = shearY;\n        let parent = this.parent;\n        if (!parent) { // Root bone.\n            let skeleton = this.skeleton;\n            let rotationY = rotation + 90 + shearY;\n            let sx = skeleton.scaleX;\n            let sy = skeleton.scaleY;\n            this.a = MathUtils.cosDeg(rotation + shearX) * scaleX * sx;\n            this.b = MathUtils.cosDeg(rotationY) * scaleY * sx;\n            this.c = MathUtils.sinDeg(rotation + shearX) * scaleX * sy;\n            this.d = MathUtils.sinDeg(rotationY) * scaleY * sy;\n            this.worldX = x * sx + skeleton.x;\n            this.worldY = y * sy + skeleton.y;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        this.worldX = pa * x + pb * y + parent.worldX;\n        this.worldY = pc * x + pd * y + parent.worldY;\n        switch (this.data.transformMode) {\n            case TransformMode.Normal: {\n                let rotationY = rotation + 90 + shearY;\n                let la = MathUtils.cosDeg(rotation + shearX) * scaleX;\n                let lb = MathUtils.cosDeg(rotationY) * scaleY;\n                let lc = MathUtils.sinDeg(rotation + shearX) * scaleX;\n                let ld = MathUtils.sinDeg(rotationY) * scaleY;\n                this.a = pa * la + pb * lc;\n                this.b = pa * lb + pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                return;\n            }\n            case TransformMode.OnlyTranslation: {\n                let rotationY = rotation + 90 + shearY;\n                this.a = MathUtils.cosDeg(rotation + shearX) * scaleX;\n                this.b = MathUtils.cosDeg(rotationY) * scaleY;\n                this.c = MathUtils.sinDeg(rotation + shearX) * scaleX;\n                this.d = MathUtils.sinDeg(rotationY) * scaleY;\n                break;\n            }\n            case TransformMode.NoRotationOrReflection: {\n                let s = pa * pa + pc * pc;\n                let prx = 0;\n                if (s > 0.0001) {\n                    s = Math.abs(pa * pd - pb * pc) / s;\n                    pa /= this.skeleton.scaleX;\n                    pc /= this.skeleton.scaleY;\n                    pb = pc * s;\n                    pd = pa * s;\n                    prx = Math.atan2(pc, pa) * MathUtils.radDeg;\n                }\n                else {\n                    pa = 0;\n                    pc = 0;\n                    prx = 90 - Math.atan2(pd, pb) * MathUtils.radDeg;\n                }\n                let rx = rotation + shearX - prx;\n                let ry = rotation + shearY - prx + 90;\n                let la = MathUtils.cosDeg(rx) * scaleX;\n                let lb = MathUtils.cosDeg(ry) * scaleY;\n                let lc = MathUtils.sinDeg(rx) * scaleX;\n                let ld = MathUtils.sinDeg(ry) * scaleY;\n                this.a = pa * la - pb * lc;\n                this.b = pa * lb - pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                break;\n            }\n            case TransformMode.NoScale:\n            case TransformMode.NoScaleOrReflection: {\n                let cos = MathUtils.cosDeg(rotation);\n                let sin = MathUtils.sinDeg(rotation);\n                let za = (pa * cos + pb * sin) / this.skeleton.scaleX;\n                let zc = (pc * cos + pd * sin) / this.skeleton.scaleY;\n                let s = Math.sqrt(za * za + zc * zc);\n                if (s > 0.00001)\n                    s = 1 / s;\n                za *= s;\n                zc *= s;\n                s = Math.sqrt(za * za + zc * zc);\n                if (this.data.transformMode == TransformMode.NoScale\n                    && (pa * pd - pb * pc < 0) != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0))\n                    s = -s;\n                let r = Math.PI / 2 + Math.atan2(zc, za);\n                let zb = Math.cos(r) * s;\n                let zd = Math.sin(r) * s;\n                let la = MathUtils.cosDeg(shearX) * scaleX;\n                let lb = MathUtils.cosDeg(90 + shearY) * scaleY;\n                let lc = MathUtils.sinDeg(shearX) * scaleX;\n                let ld = MathUtils.sinDeg(90 + shearY) * scaleY;\n                this.a = za * la + zb * lc;\n                this.b = za * lb + zb * ld;\n                this.c = zc * la + zd * lc;\n                this.d = zc * lb + zd * ld;\n                break;\n            }\n        }\n        this.a *= this.skeleton.scaleX;\n        this.b *= this.skeleton.scaleX;\n        this.c *= this.skeleton.scaleY;\n        this.d *= this.skeleton.scaleY;\n    }\n    /** Sets this bone's local transform to the setup pose. */\n    setToSetupPose() {\n        let data = this.data;\n        this.x = data.x;\n        this.y = data.y;\n        this.rotation = data.rotation;\n        this.scaleX = data.scaleX;\n        this.scaleY = data.scaleY;\n        this.shearX = data.shearX;\n        this.shearY = data.shearY;\n    }\n    /** The world rotation for the X axis, calculated using {@link #a} and {@link #c}. */\n    getWorldRotationX() {\n        return Math.atan2(this.c, this.a) * MathUtils.radDeg;\n    }\n    /** The world rotation for the Y axis, calculated using {@link #b} and {@link #d}. */\n    getWorldRotationY() {\n        return Math.atan2(this.d, this.b) * MathUtils.radDeg;\n    }\n    /** The magnitude (always positive) of the world scale X, calculated using {@link #a} and {@link #c}. */\n    getWorldScaleX() {\n        return Math.sqrt(this.a * this.a + this.c * this.c);\n    }\n    /** The magnitude (always positive) of the world scale Y, calculated using {@link #b} and {@link #d}. */\n    getWorldScaleY() {\n        return Math.sqrt(this.b * this.b + this.d * this.d);\n    }\n    /** Computes the applied transform values from the world transform.\n     *\n     * If the world transform is modified (by a constraint, {@link #rotateWorld(float)}, etc) then this method should be called so\n     * the applied transform matches the world transform. The applied transform may be needed by other code (eg to apply other\n     * constraints).\n     *\n     * Some information is ambiguous in the world transform, such as -1,-1 scale versus 180 rotation. The applied transform after\n     * calling this method is equivalent to the local transform used to compute the world transform, but may not be identical. */\n    updateAppliedTransform() {\n        let parent = this.parent;\n        if (!parent) {\n            this.ax = this.worldX - this.skeleton.x;\n            this.ay = this.worldY - this.skeleton.y;\n            this.arotation = Math.atan2(this.c, this.a) * MathUtils.radDeg;\n            this.ascaleX = Math.sqrt(this.a * this.a + this.c * this.c);\n            this.ascaleY = Math.sqrt(this.b * this.b + this.d * this.d);\n            this.ashearX = 0;\n            this.ashearY = Math.atan2(this.a * this.b + this.c * this.d, this.a * this.d - this.b * this.c) * MathUtils.radDeg;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        let pid = 1 / (pa * pd - pb * pc);\n        let dx = this.worldX - parent.worldX, dy = this.worldY - parent.worldY;\n        this.ax = (dx * pd * pid - dy * pb * pid);\n        this.ay = (dy * pa * pid - dx * pc * pid);\n        let ia = pid * pd;\n        let id = pid * pa;\n        let ib = pid * pb;\n        let ic = pid * pc;\n        let ra = ia * this.a - ib * this.c;\n        let rb = ia * this.b - ib * this.d;\n        let rc = id * this.c - ic * this.a;\n        let rd = id * this.d - ic * this.b;\n        this.ashearX = 0;\n        this.ascaleX = Math.sqrt(ra * ra + rc * rc);\n        if (this.ascaleX > 0.0001) {\n            let det = ra * rd - rb * rc;\n            this.ascaleY = det / this.ascaleX;\n            this.ashearY = Math.atan2(ra * rb + rc * rd, det) * MathUtils.radDeg;\n            this.arotation = Math.atan2(rc, ra) * MathUtils.radDeg;\n        }\n        else {\n            this.ascaleX = 0;\n            this.ascaleY = Math.sqrt(rb * rb + rd * rd);\n            this.ashearY = 0;\n            this.arotation = 90 - Math.atan2(rd, rb) * MathUtils.radDeg;\n        }\n    }\n    /** Transforms a point from world coordinates to the bone's local coordinates. */\n    worldToLocal(world) {\n        let invDet = 1 / (this.a * this.d - this.b * this.c);\n        let x = world.x - this.worldX, y = world.y - this.worldY;\n        world.x = x * this.d * invDet - y * this.b * invDet;\n        world.y = y * this.a * invDet - x * this.c * invDet;\n        return world;\n    }\n    /** Transforms a point from the bone's local coordinates to world coordinates. */\n    localToWorld(local) {\n        let x = local.x, y = local.y;\n        local.x = x * this.a + y * this.b + this.worldX;\n        local.y = x * this.c + y * this.d + this.worldY;\n        return local;\n    }\n    /** Transforms a world rotation to a local rotation. */\n    worldToLocalRotation(worldRotation) {\n        let sin = MathUtils.sinDeg(worldRotation), cos = MathUtils.cosDeg(worldRotation);\n        return Math.atan2(this.a * sin - this.c * cos, this.d * cos - this.b * sin) * MathUtils.radDeg + this.rotation - this.shearX;\n    }\n    /** Transforms a local rotation to a world rotation. */\n    localToWorldRotation(localRotation) {\n        localRotation -= this.rotation - this.shearX;\n        let sin = MathUtils.sinDeg(localRotation), cos = MathUtils.cosDeg(localRotation);\n        return Math.atan2(cos * this.c + sin * this.d, cos * this.a + sin * this.b) * MathUtils.radDeg;\n    }\n    /** Rotates the world transform the specified amount.\n     * <p>\n     * After changes are made to the world transform, {@link #updateAppliedTransform()} should be called and {@link #update()} will\n     * need to be called on any child bones, recursively. */\n    rotateWorld(degrees) {\n        let a = this.a, b = this.b, c = this.c, d = this.d;\n        let cos = MathUtils.cosDeg(degrees), sin = MathUtils.sinDeg(degrees);\n        this.a = cos * a - sin * c;\n        this.b = cos * b - sin * d;\n        this.c = sin * a + cos * c;\n        this.d = sin * b + cos * d;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TransformMode } from \"./BoneData.js\";\nimport { MathUtils } from \"./Utils.js\";\n/** Stores the current pose for an IK constraint. An IK constraint adjusts the rotation of 1 or 2 constrained bones so the tip of\n * the last bone is as close to the target bone as possible.\n *\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraint {\n    /** The IK constraint's setup pose data. */\n    data;\n    /** The bones that will be modified by this IK constraint. */\n    bones;\n    /** The bone that is the IK target. */\n    target;\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\n    bendDirection = 0;\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n    compress = false;\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\n    stretch = false;\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n    mix = 1;\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n    softness = 0;\n    active = false;\n    constructor(data, skeleton) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.mix = data.mix;\n        this.softness = data.softness;\n        this.bendDirection = data.bendDirection;\n        this.compress = data.compress;\n        this.stretch = data.stretch;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findBone(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find bone ${data.target.name}`);\n        this.target = target;\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        if (this.mix == 0)\n            return;\n        let target = this.target;\n        let bones = this.bones;\n        switch (bones.length) {\n            case 1:\n                this.apply1(bones[0], target.worldX, target.worldY, this.compress, this.stretch, this.data.uniform, this.mix);\n                break;\n            case 2:\n                this.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.stretch, this.data.uniform, this.softness, this.mix);\n                break;\n        }\n    }\n    /** Applies 1 bone IK. The target is specified in the world coordinate system. */\n    apply1(bone, targetX, targetY, compress, stretch, uniform, alpha) {\n        let p = bone.parent;\n        if (!p)\n            throw new Error(\"IK bone must have parent.\");\n        let pa = p.a, pb = p.b, pc = p.c, pd = p.d;\n        let rotationIK = -bone.ashearX - bone.arotation, tx = 0, ty = 0;\n        switch (bone.data.transformMode) {\n            case TransformMode.OnlyTranslation:\n                tx = (targetX - bone.worldX) * MathUtils.signum(bone.skeleton.scaleX);\n                ty = (targetY - bone.worldY) * MathUtils.signum(bone.skeleton.scaleY);\n                break;\n            case TransformMode.NoRotationOrReflection:\n                let s = Math.abs(pa * pd - pb * pc) / Math.max(0.0001, pa * pa + pc * pc);\n                let sa = pa / bone.skeleton.scaleX;\n                let sc = pc / bone.skeleton.scaleY;\n                pb = -sc * s * bone.skeleton.scaleX;\n                pd = sa * s * bone.skeleton.scaleY;\n                rotationIK += Math.atan2(sc, sa) * MathUtils.radDeg;\n            // Fall through\n            default:\n                let x = targetX - p.worldX, y = targetY - p.worldY;\n                let d = pa * pd - pb * pc;\n                if (Math.abs(d) <= 0.0001) {\n                    tx = 0;\n                    ty = 0;\n                }\n                else {\n                    tx = (x * pd - y * pb) / d - bone.ax;\n                    ty = (y * pa - x * pc) / d - bone.ay;\n                }\n        }\n        rotationIK += Math.atan2(ty, tx) * MathUtils.radDeg;\n        if (bone.ascaleX < 0)\n            rotationIK += 180;\n        if (rotationIK > 180)\n            rotationIK -= 360;\n        else if (rotationIK < -180)\n            rotationIK += 360;\n        let sx = bone.ascaleX, sy = bone.ascaleY;\n        if (compress || stretch) {\n            switch (bone.data.transformMode) {\n                case TransformMode.NoScale:\n                case TransformMode.NoScaleOrReflection:\n                    tx = targetX - bone.worldX;\n                    ty = targetY - bone.worldY;\n            }\n            let b = bone.data.length * sx, dd = Math.sqrt(tx * tx + ty * ty);\n            if ((compress && dd < b) || (stretch && dd > b) && b > 0.0001) {\n                let s = (dd / b - 1) * alpha + 1;\n                sx *= s;\n                if (uniform)\n                    sy *= s;\n            }\n        }\n        bone.updateWorldTransformWith(bone.ax, bone.ay, bone.arotation + rotationIK * alpha, sx, sy, bone.ashearX, bone.ashearY);\n    }\n    /** Applies 2 bone IK. The target is specified in the world coordinate system.\n     * @param child A direct descendant of the parent bone. */\n    apply2(parent, child, targetX, targetY, bendDir, stretch, uniform, softness, alpha) {\n        let px = parent.ax, py = parent.ay, psx = parent.ascaleX, psy = parent.ascaleY, sx = psx, sy = psy, csx = child.ascaleX;\n        let os1 = 0, os2 = 0, s2 = 0;\n        if (psx < 0) {\n            psx = -psx;\n            os1 = 180;\n            s2 = -1;\n        }\n        else {\n            os1 = 0;\n            s2 = 1;\n        }\n        if (psy < 0) {\n            psy = -psy;\n            s2 = -s2;\n        }\n        if (csx < 0) {\n            csx = -csx;\n            os2 = 180;\n        }\n        else\n            os2 = 0;\n        let cx = child.ax, cy = 0, cwx = 0, cwy = 0, a = parent.a, b = parent.b, c = parent.c, d = parent.d;\n        let u = Math.abs(psx - psy) <= 0.0001;\n        if (!u || stretch) {\n            cy = 0;\n            cwx = a * cx + parent.worldX;\n            cwy = c * cx + parent.worldY;\n        }\n        else {\n            cy = child.ay;\n            cwx = a * cx + b * cy + parent.worldX;\n            cwy = c * cx + d * cy + parent.worldY;\n        }\n        let pp = parent.parent;\n        if (!pp)\n            throw new Error(\"IK parent must itself have a parent.\");\n        a = pp.a;\n        b = pp.b;\n        c = pp.c;\n        d = pp.d;\n        let id = a * d - b * c, x = cwx - pp.worldX, y = cwy - pp.worldY;\n        id = Math.abs(id) <= 0.0001 ? 0 : 1 / id;\n        let dx = (x * d - y * b) * id - px, dy = (y * a - x * c) * id - py;\n        let l1 = Math.sqrt(dx * dx + dy * dy), l2 = child.data.length * csx, a1, a2;\n        if (l1 < 0.0001) {\n            this.apply1(parent, targetX, targetY, false, stretch, false, alpha);\n            child.updateWorldTransformWith(cx, cy, 0, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n            return;\n        }\n        x = targetX - pp.worldX;\n        y = targetY - pp.worldY;\n        let tx = (x * d - y * b) * id - px, ty = (y * a - x * c) * id - py;\n        let dd = tx * tx + ty * ty;\n        if (softness != 0) {\n            softness *= psx * (csx + 1) * 0.5;\n            let td = Math.sqrt(dd), sd = td - l1 - l2 * psx + softness;\n            if (sd > 0) {\n                let p = Math.min(1, sd / (softness * 2)) - 1;\n                p = (sd - softness * (1 - p * p)) / td;\n                tx -= p * tx;\n                ty -= p * ty;\n                dd = tx * tx + ty * ty;\n            }\n        }\n        outer: if (u) {\n            l2 *= psx;\n            let cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);\n            if (cos < -1) {\n                cos = -1;\n                a2 = Math.PI * bendDir;\n            }\n            else if (cos > 1) {\n                cos = 1;\n                a2 = 0;\n                if (stretch) {\n                    a = (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;\n                    sx *= a;\n                    if (uniform)\n                        sy *= a;\n                }\n            }\n            else\n                a2 = Math.acos(cos) * bendDir;\n            a = l1 + l2 * cos;\n            b = l2 * Math.sin(a2);\n            a1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\n        }\n        else {\n            a = psx * l2;\n            b = psy * l2;\n            let aa = a * a, bb = b * b, ta = Math.atan2(ty, tx);\n            c = bb * l1 * l1 + aa * dd - aa * bb;\n            let c1 = -2 * bb * l1, c2 = bb - aa;\n            d = c1 * c1 - 4 * c2 * c;\n            if (d >= 0) {\n                let q = Math.sqrt(d);\n                if (c1 < 0)\n                    q = -q;\n                q = -(c1 + q) * 0.5;\n                let r0 = q / c2, r1 = c / q;\n                let r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\n                if (r * r <= dd) {\n                    y = Math.sqrt(dd - r * r) * bendDir;\n                    a1 = ta - Math.atan2(y, r);\n                    a2 = Math.atan2(y / psy, (r - l1) / psx);\n                    break outer;\n                }\n            }\n            let minAngle = MathUtils.PI, minX = l1 - a, minDist = minX * minX, minY = 0;\n            let maxAngle = 0, maxX = l1 + a, maxDist = maxX * maxX, maxY = 0;\n            c = -a * l1 / (aa - bb);\n            if (c >= -1 && c <= 1) {\n                c = Math.acos(c);\n                x = a * Math.cos(c) + l1;\n                y = b * Math.sin(c);\n                d = x * x + y * y;\n                if (d < minDist) {\n                    minAngle = c;\n                    minDist = d;\n                    minX = x;\n                    minY = y;\n                }\n                if (d > maxDist) {\n                    maxAngle = c;\n                    maxDist = d;\n                    maxX = x;\n                    maxY = y;\n                }\n            }\n            if (dd <= (minDist + maxDist) * 0.5) {\n                a1 = ta - Math.atan2(minY * bendDir, minX);\n                a2 = minAngle * bendDir;\n            }\n            else {\n                a1 = ta - Math.atan2(maxY * bendDir, maxX);\n                a2 = maxAngle * bendDir;\n            }\n        }\n        let os = Math.atan2(cy, cx) * s2;\n        let rotation = parent.arotation;\n        a1 = (a1 - os) * MathUtils.radDeg + os1 - rotation;\n        if (a1 > 180)\n            a1 -= 360;\n        else if (a1 < -180) //\n            a1 += 360;\n        parent.updateWorldTransformWith(px, py, rotation + a1 * alpha, sx, sy, 0, 0);\n        rotation = child.arotation;\n        a2 = ((a2 + os) * MathUtils.radDeg - child.ashearX) * s2 + os2 - rotation;\n        if (a2 > 180)\n            a2 -= 360;\n        else if (a2 < -180) //\n            a2 += 360;\n        child.updateWorldTransformWith(cx, cy, rotation + a2 * alpha, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** The base class for all constraint datas. */\nexport class ConstraintData {\n    name;\n    order;\n    skinRequired;\n    constructor(name, order, skinRequired) {\n        this.name = name;\n        this.order = order;\n        this.skinRequired = skinRequired;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLCtDQUErQztBQUMvQyxNQUFNLE9BQWdCLGNBQWM7SUFDZjtJQUFxQjtJQUFzQjtJQUEvRCxZQUFvQixJQUFZLEVBQVMsS0FBYSxFQUFTLFlBQXFCO1FBQWhFLFNBQUksR0FBSixJQUFJLENBQVE7UUFBUyxVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQVMsaUJBQVksR0FBWixZQUFZLENBQVM7SUFBSSxDQUFDO0NBQ3pGIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { PathAttachment } from \"./attachments/PathAttachment.js\";\nimport { RotateMode, SpacingMode, PositionMode } from \"./PathConstraintData.js\";\nimport { Utils, MathUtils } from \"./Utils.js\";\n/** Stores the current pose for a path constraint. A path constraint adjusts the rotation, translation, and scale of the\n * constrained bones so they follow a {@link PathAttachment}.\n *\n * See [Path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraint {\n    static NONE = -1;\n    static BEFORE = -2;\n    static AFTER = -3;\n    static epsilon = 0.00001;\n    /** The path constraint's setup pose data. */\n    data;\n    /** The bones that will be modified by this path constraint. */\n    bones;\n    /** The slot whose path attachment will be used to constrained the bones. */\n    target;\n    /** The position along the path. */\n    position = 0;\n    /** The spacing between bones. */\n    spacing = 0;\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    spaces = new Array();\n    positions = new Array();\n    world = new Array();\n    curves = new Array();\n    lengths = new Array();\n    segments = new Array();\n    active = false;\n    constructor(data, skeleton) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0, n = data.bones.length; i < n; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}.`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findSlot(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find target bone ${data.target.name}`);\n        this.target = target;\n        this.position = data.position;\n        this.spacing = data.spacing;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        let attachment = this.target.getAttachment();\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY;\n        if (mixRotate == 0 && mixX == 0 && mixY == 0)\n            return;\n        let data = this.data;\n        let tangents = data.rotateMode == RotateMode.Tangent, scale = data.rotateMode == RotateMode.ChainScale;\n        let bones = this.bones;\n        let boneCount = bones.length, spacesCount = tangents ? boneCount : boneCount + 1;\n        let spaces = Utils.setArraySize(this.spaces, spacesCount), lengths = scale ? this.lengths = Utils.setArraySize(this.lengths, boneCount) : [];\n        let spacing = this.spacing;\n        switch (data.spacingMode) {\n            case SpacingMode.Percent:\n                if (scale) {\n                    for (let i = 0, n = spacesCount - 1; i < n; i++) {\n                        let bone = bones[i];\n                        let setupLength = bone.data.length;\n                        if (setupLength < PathConstraint.epsilon)\n                            lengths[i] = 0;\n                        else {\n                            let x = setupLength * bone.a, y = setupLength * bone.c;\n                            lengths[i] = Math.sqrt(x * x + y * y);\n                        }\n                    }\n                }\n                Utils.arrayFill(spaces, 1, spacesCount, spacing);\n                break;\n            case SpacingMode.Proportional:\n                let sum = 0;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = length;\n                        sum += length;\n                    }\n                }\n                if (sum > 0) {\n                    sum = spacesCount / sum * spacing;\n                    for (let i = 1; i < spacesCount; i++)\n                        spaces[i] *= sum;\n                }\n                break;\n            default:\n                let lengthSpacing = data.spacingMode == SpacingMode.Length;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = (lengthSpacing ? setupLength + spacing : spacing) * length / setupLength;\n                    }\n                }\n        }\n        let positions = this.computeWorldPositions(attachment, spacesCount, tangents);\n        let boneX = positions[0], boneY = positions[1], offsetRotation = data.offsetRotation;\n        let tip = false;\n        if (offsetRotation == 0)\n            tip = data.rotateMode == RotateMode.Chain;\n        else {\n            tip = false;\n            let p = this.target.bone;\n            offsetRotation *= p.a * p.d - p.b * p.c > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        }\n        for (let i = 0, p = 3; i < boneCount; i++, p += 3) {\n            let bone = bones[i];\n            bone.worldX += (boneX - bone.worldX) * mixX;\n            bone.worldY += (boneY - bone.worldY) * mixY;\n            let x = positions[p], y = positions[p + 1], dx = x - boneX, dy = y - boneY;\n            if (scale) {\n                let length = lengths[i];\n                if (length != 0) {\n                    let s = (Math.sqrt(dx * dx + dy * dy) / length - 1) * mixRotate + 1;\n                    bone.a *= s;\n                    bone.c *= s;\n                }\n            }\n            boneX = x;\n            boneY = y;\n            if (mixRotate > 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d, r = 0, cos = 0, sin = 0;\n                if (tangents)\n                    r = positions[p - 1];\n                else if (spaces[i + 1] == 0)\n                    r = positions[p + 2];\n                else\n                    r = Math.atan2(dy, dx);\n                r -= Math.atan2(c, a);\n                if (tip) {\n                    cos = Math.cos(r);\n                    sin = Math.sin(r);\n                    let length = bone.data.length;\n                    boneX += (length * (cos * a - sin * c) - dx) * mixRotate;\n                    boneY += (length * (sin * a + cos * c) - dy) * mixRotate;\n                }\n                else {\n                    r += offsetRotation;\n                }\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                cos = Math.cos(r);\n                sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    computeWorldPositions(path, spacesCount, tangents) {\n        let target = this.target;\n        let position = this.position;\n        let spaces = this.spaces, out = Utils.setArraySize(this.positions, spacesCount * 3 + 2), world = this.world;\n        let closed = path.closed;\n        let verticesLength = path.worldVerticesLength, curveCount = verticesLength / 6, prevCurve = PathConstraint.NONE;\n        if (!path.constantSpeed) {\n            let lengths = path.lengths;\n            curveCount -= closed ? 1 : 2;\n            let pathLength = lengths[curveCount];\n            if (this.data.positionMode == PositionMode.Percent)\n                position *= pathLength;\n            let multiplier;\n            switch (this.data.spacingMode) {\n                case SpacingMode.Percent:\n                    multiplier = pathLength;\n                    break;\n                case SpacingMode.Proportional:\n                    multiplier = pathLength / spacesCount;\n                    break;\n                default:\n                    multiplier = 1;\n            }\n            world = Utils.setArraySize(this.world, 8);\n            for (let i = 0, o = 0, curve = 0; i < spacesCount; i++, o += 3) {\n                let space = spaces[i] * multiplier;\n                position += space;\n                let p = position;\n                if (closed) {\n                    p %= pathLength;\n                    if (p < 0)\n                        p += pathLength;\n                    curve = 0;\n                }\n                else if (p < 0) {\n                    if (prevCurve != PathConstraint.BEFORE) {\n                        prevCurve = PathConstraint.BEFORE;\n                        path.computeWorldVertices(target, 2, 4, world, 0, 2);\n                    }\n                    this.addBeforePosition(p, world, 0, out, o);\n                    continue;\n                }\n                else if (p > pathLength) {\n                    if (prevCurve != PathConstraint.AFTER) {\n                        prevCurve = PathConstraint.AFTER;\n                        path.computeWorldVertices(target, verticesLength - 6, 4, world, 0, 2);\n                    }\n                    this.addAfterPosition(p - pathLength, world, 0, out, o);\n                    continue;\n                }\n                // Determine curve containing position.\n                for (;; curve++) {\n                    let length = lengths[curve];\n                    if (p > length)\n                        continue;\n                    if (curve == 0)\n                        p /= length;\n                    else {\n                        let prev = lengths[curve - 1];\n                        p = (p - prev) / (length - prev);\n                    }\n                    break;\n                }\n                if (curve != prevCurve) {\n                    prevCurve = curve;\n                    if (closed && curve == curveCount) {\n                        path.computeWorldVertices(target, verticesLength - 4, 4, world, 0, 2);\n                        path.computeWorldVertices(target, 0, 4, world, 4, 2);\n                    }\n                    else\n                        path.computeWorldVertices(target, curve * 6 + 2, 8, world, 0, 2);\n                }\n                this.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || (i > 0 && space == 0));\n            }\n            return out;\n        }\n        // World vertices.\n        if (closed) {\n            verticesLength += 2;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength - 4, world, 0, 2);\n            path.computeWorldVertices(target, 0, 2, world, verticesLength - 4, 2);\n            world[verticesLength - 2] = world[0];\n            world[verticesLength - 1] = world[1];\n        }\n        else {\n            curveCount--;\n            verticesLength -= 4;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength, world, 0, 2);\n        }\n        // Curve lengths.\n        let curves = Utils.setArraySize(this.curves, curveCount);\n        let pathLength = 0;\n        let x1 = world[0], y1 = world[1], cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0, x2 = 0, y2 = 0;\n        let tmpx = 0, tmpy = 0, dddfx = 0, dddfy = 0, ddfx = 0, ddfy = 0, dfx = 0, dfy = 0;\n        for (let i = 0, w = 2; i < curveCount; i++, w += 6) {\n            cx1 = world[w];\n            cy1 = world[w + 1];\n            cx2 = world[w + 2];\n            cy2 = world[w + 3];\n            x2 = world[w + 4];\n            y2 = world[w + 5];\n            tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\n            tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\n            dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\n            dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\n            ddfx = tmpx * 2 + dddfx;\n            ddfy = tmpy * 2 + dddfy;\n            dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\n            dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx + dddfx;\n            dfy += ddfy + dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            curves[i] = pathLength;\n            x1 = x2;\n            y1 = y2;\n        }\n        if (this.data.positionMode == PositionMode.Percent)\n            position *= pathLength;\n        let multiplier;\n        switch (this.data.spacingMode) {\n            case SpacingMode.Percent:\n                multiplier = pathLength;\n                break;\n            case SpacingMode.Proportional:\n                multiplier = pathLength / spacesCount;\n                break;\n            default:\n                multiplier = 1;\n        }\n        let segments = this.segments;\n        let curveLength = 0;\n        for (let i = 0, o = 0, curve = 0, segment = 0; i < spacesCount; i++, o += 3) {\n            let space = spaces[i] * multiplier;\n            position += space;\n            let p = position;\n            if (closed) {\n                p %= pathLength;\n                if (p < 0)\n                    p += pathLength;\n                curve = 0;\n            }\n            else if (p < 0) {\n                this.addBeforePosition(p, world, 0, out, o);\n                continue;\n            }\n            else if (p > pathLength) {\n                this.addAfterPosition(p - pathLength, world, verticesLength - 4, out, o);\n                continue;\n            }\n            // Determine curve containing position.\n            for (;; curve++) {\n                let length = curves[curve];\n                if (p > length)\n                    continue;\n                if (curve == 0)\n                    p /= length;\n                else {\n                    let prev = curves[curve - 1];\n                    p = (p - prev) / (length - prev);\n                }\n                break;\n            }\n            // Curve segment lengths.\n            if (curve != prevCurve) {\n                prevCurve = curve;\n                let ii = curve * 6;\n                x1 = world[ii];\n                y1 = world[ii + 1];\n                cx1 = world[ii + 2];\n                cy1 = world[ii + 3];\n                cx2 = world[ii + 4];\n                cy2 = world[ii + 5];\n                x2 = world[ii + 6];\n                y2 = world[ii + 7];\n                tmpx = (x1 - cx1 * 2 + cx2) * 0.03;\n                tmpy = (y1 - cy1 * 2 + cy2) * 0.03;\n                dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\n                dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\n                ddfx = tmpx * 2 + dddfx;\n                ddfy = tmpy * 2 + dddfy;\n                dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\n                dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\n                curveLength = Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[0] = curveLength;\n                for (ii = 1; ii < 8; ii++) {\n                    dfx += ddfx;\n                    dfy += ddfy;\n                    ddfx += dddfx;\n                    ddfy += dddfy;\n                    curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[ii] = curveLength;\n                }\n                dfx += ddfx;\n                dfy += ddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[8] = curveLength;\n                dfx += ddfx + dddfx;\n                dfy += ddfy + dddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[9] = curveLength;\n                segment = 0;\n            }\n            // Weight by segment length.\n            p *= curveLength;\n            for (;; segment++) {\n                let length = segments[segment];\n                if (p > length)\n                    continue;\n                if (segment == 0)\n                    p /= length;\n                else {\n                    let prev = segments[segment - 1];\n                    p = segment + (p - prev) / (length - prev);\n                }\n                break;\n            }\n            this.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents || (i > 0 && space == 0));\n        }\n        return out;\n    }\n    addBeforePosition(p, temp, i, out, o) {\n        let x1 = temp[i], y1 = temp[i + 1], dx = temp[i + 2] - x1, dy = temp[i + 3] - y1, r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addAfterPosition(p, temp, i, out, o) {\n        let x1 = temp[i + 2], y1 = temp[i + 3], dx = x1 - temp[i], dy = y1 - temp[i + 1], r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addCurvePosition(p, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents) {\n        if (p == 0 || isNaN(p)) {\n            out[o] = x1;\n            out[o + 1] = y1;\n            out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            return;\n        }\n        let tt = p * p, ttt = tt * p, u = 1 - p, uu = u * u, uuu = uu * u;\n        let ut = u * p, ut3 = ut * 3, uut3 = u * ut3, utt3 = ut3 * p;\n        let x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt, y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\n        out[o] = x;\n        out[o + 1] = y;\n        if (tangents) {\n            if (p < 0.001)\n                out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            else\n                out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment.js\";\nimport { Color } from \"./Utils.js\";\n/** Stores a slot's current pose. Slots organize attachments for {@link Skeleton#drawOrder} purposes and provide a place to store\n * state for an attachment. State cannot be stored in an attachment itself because attachments are stateless and may be shared\n * across multiple skeletons. */\nexport class Slot {\n    /** The slot's setup pose data. */\n    data;\n    /** The bone this slot belongs to. */\n    bone;\n    /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\n     * color tinting. */\n    color;\n    /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n     * color's alpha is not used. */\n    darkColor = null;\n    attachment = null;\n    attachmentState = 0;\n    /** The index of the texture region to display when the slot's attachment has a {@link Sequence}. -1 represents the\n     * {@link Sequence#getSetupIndex()}. */\n    sequenceIndex = -1;\n    /** Values to deform the slot's attachment. For an unweighted mesh, the entries are local positions for each vertex. For a\n     * weighted mesh, the entries are an offset for each vertex which will be added to the mesh's local vertex positions.\n     *\n     * See {@link VertexAttachment#computeWorldVertices()} and {@link DeformTimeline}. */\n    deform = new Array();\n    constructor(data, bone) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!bone)\n            throw new Error(\"bone cannot be null.\");\n        this.data = data;\n        this.bone = bone;\n        this.color = new Color();\n        this.darkColor = !data.darkColor ? null : new Color();\n        this.setToSetupPose();\n    }\n    /** The skeleton this slot belongs to. */\n    getSkeleton() {\n        return this.bone.skeleton;\n    }\n    /** The current attachment for the slot, or null if the slot has no attachment. */\n    getAttachment() {\n        return this.attachment;\n    }\n    /** Sets the slot's attachment and, if the attachment changed, resets {@link #sequenceIndex} and clears the {@link #deform}.\n     * The deform is not cleared if the old attachment has the same {@link VertexAttachment#getTimelineAttachment()} as the\n     * specified attachment. */\n    setAttachment(attachment) {\n        if (this.attachment == attachment)\n            return;\n        if (!(attachment instanceof VertexAttachment) || !(this.attachment instanceof VertexAttachment)\n            || attachment.timelineAttachment != this.attachment.timelineAttachment) {\n            this.deform.length = 0;\n        }\n        this.attachment = attachment;\n        this.sequenceIndex = -1;\n    }\n    /** Sets this slot to the setup pose. */\n    setToSetupPose() {\n        this.color.setFromColor(this.data.color);\n        if (this.darkColor)\n            this.darkColor.setFromColor(this.data.darkColor);\n        if (!this.data.attachmentName)\n            this.attachment = null;\n        else {\n            this.attachment = null;\n            this.setAttachment(this.bone.skeleton.getAttachment(this.data.index, this.data.attachmentName));\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9TbG90LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQWMsZ0JBQWdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUkzRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRW5DOztnQ0FFZ0M7QUFDaEMsTUFBTSxPQUFPLElBQUk7SUFDaEIsa0NBQWtDO0lBQ2xDLElBQUksQ0FBVztJQUVmLHFDQUFxQztJQUNyQyxJQUFJLENBQU87SUFFWDt3QkFDb0I7SUFDcEIsS0FBSyxDQUFRO0lBRWI7b0NBQ2dDO0lBQ2hDLFNBQVMsR0FBaUIsSUFBSSxDQUFDO0lBRS9CLFVBQVUsR0FBc0IsSUFBSSxDQUFDO0lBRXJDLGVBQWUsR0FBVyxDQUFDLENBQUM7SUFFNUI7MkNBQ3VDO0lBQ3ZDLGFBQWEsR0FBVyxDQUFDLENBQUMsQ0FBQztJQUUzQjs7O3lGQUdxRjtJQUNyRixNQUFNLEdBQUcsSUFBSSxLQUFLLEVBQVUsQ0FBQztJQUU3QixZQUFhLElBQWMsRUFBRSxJQUFVO1FBQ3RDLElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3RELElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQseUNBQXlDO0lBQ3pDLFdBQVc7UUFDVixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFRCxrRkFBa0Y7SUFDbEYsYUFBYTtRQUNaLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN4QixDQUFDO0lBRUQ7OytCQUUyQjtJQUMzQixhQUFhLENBQUUsVUFBNkI7UUFDM0MsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLFVBQVU7WUFBRSxPQUFPO1FBQzFDLElBQUksQ0FBQyxDQUFDLFVBQVUsWUFBWSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxZQUFZLGdCQUFnQixDQUFDO2VBQ3hFLFVBQVcsQ0FBQyxrQkFBa0IsSUFBdUIsSUFBSSxDQUFDLFVBQVcsQ0FBQyxrQkFBa0IsRUFBRTtZQUNoSCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7U0FDdkI7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCx3Q0FBd0M7SUFDeEMsY0FBYztRQUNiLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekMsSUFBSSxJQUFJLENBQUMsU0FBUztZQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBVSxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYztZQUM1QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUNKLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztTQUNoRztJQUNGLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector2, MathUtils } from \"./Utils.js\";\n/** Stores the current pose for a transform constraint. A transform constraint adjusts the world transform of the constrained\n * bones to match that of the target bone.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraint {\n    /** The transform constraint's setup pose data. */\n    data;\n    /** The bones that will be modified by this transform constraint. */\n    bones;\n    /** The target bone whose world transform will be copied to the constrained bones. */\n    target;\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    mixScaleX = 0;\n    mixScaleY = 0;\n    mixShearY = 0;\n    temp = new Vector2();\n    active = false;\n    constructor(data, skeleton) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n        this.mixScaleX = data.mixScaleX;\n        this.mixScaleY = data.mixScaleY;\n        this.mixShearY = data.mixShearY;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}.`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findBone(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find target bone ${data.target.name}.`);\n        this.target = target;\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        if (this.mixRotate == 0 && this.mixX == 0 && this.mixY == 0 && this.mixScaleX == 0 && this.mixScaleY == 0 && this.mixShearY == 0)\n            return;\n        if (this.data.local) {\n            if (this.data.relative)\n                this.applyRelativeLocal();\n            else\n                this.applyAbsoluteLocal();\n        }\n        else {\n            if (this.data.relative)\n                this.applyRelativeWorld();\n            else\n                this.applyAbsoluteWorld();\n        }\n    }\n    applyAbsoluteWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect;\n        let offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) - Math.atan2(c, a) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += (temp.x - bone.worldX) * mixX;\n                bone.worldY += (temp.y - bone.worldY) * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);\n                if (s != 0)\n                    s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = Math.sqrt(bone.b * bone.b + bone.d * bone.d);\n                if (s != 0)\n                    s = (s + (Math.sqrt(tb * tb + td * td) - s + this.data.offsetScaleY) * mixScaleY) / s;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let b = bone.b, d = bone.d;\n                let by = Math.atan2(d, b);\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(bone.c, bone.a));\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r = by + (r + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyRelativeWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect, offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += temp.x * mixX;\n                bone.worldY += temp.y * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta);\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                let b = bone.b, d = bone.d;\n                r = Math.atan2(d, b) + (r - MathUtils.PI / 2 + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyAbsoluteLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation;\n            if (mixRotate != 0) {\n                let r = target.arotation - rotation + this.data.offsetRotation;\n                r -= (16384 - ((16384.499999999996 - r / 360) | 0)) * 360;\n                rotation += r * mixRotate;\n            }\n            let x = bone.ax, y = bone.ay;\n            x += (target.ax - x + this.data.offsetX) * mixX;\n            y += (target.ay - y + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX, scaleY = bone.ascaleY;\n            if (mixScaleX != 0 && scaleX != 0)\n                scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;\n            if (mixScaleY != 0 && scaleY != 0)\n                scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;\n            let shearY = bone.ashearY;\n            if (mixShearY != 0) {\n                let r = target.ashearY - shearY + this.data.offsetShearY;\n                r -= (16384 - ((16384.499999999996 - r / 360) | 0)) * 360;\n                shearY += r * mixShearY;\n            }\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n    applyRelativeLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;\n            let x = bone.ax + (target.ax + this.data.offsetX) * mixX;\n            let y = bone.ay + (target.ay + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX * (((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX) + 1);\n            let scaleY = bone.ascaleY * (((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY) + 1);\n            let shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MeshAttachment } from \"./attachments/MeshAttachment.js\";\nimport { PathAttachment } from \"./attachments/PathAttachment.js\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment.js\";\nimport { Bone } from \"./Bone.js\";\nimport { IkConstraint } from \"./IkConstraint.js\";\nimport { PathConstraint } from \"./PathConstraint.js\";\nimport { Slot } from \"./Slot.js\";\nimport { TransformConstraint } from \"./TransformConstraint.js\";\nimport { Color, Utils, MathUtils, Vector2 } from \"./Utils.js\";\n/** Stores the current pose for a skeleton.\n *\n * See [Instance objects](http://esotericsoftware.com/spine-runtime-architecture#Instance-objects) in the Spine Runtimes Guide. */\nexport class Skeleton {\n    static yDown = false;\n    ;\n    /** The skeleton's setup pose data. */\n    data;\n    /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n    bones;\n    /** The skeleton's slots. */\n    slots;\n    /** The skeleton's slots in the order they should be drawn. The returned array may be modified to change the draw order. */\n    drawOrder;\n    /** The skeleton's IK constraints. */\n    ikConstraints;\n    /** The skeleton's transform constraints. */\n    transformConstraints;\n    /** The skeleton's path constraints. */\n    pathConstraints;\n    /** The list of bones and constraints, sorted in the order they should be updated, as computed by {@link #updateCache()}. */\n    _updateCache = new Array();\n    /** The skeleton's current skin. May be null. */\n    skin = null;\n    /** The color to tint all the skeleton's attachments. */\n    color;\n    /** Scales the entire skeleton on the X axis. This affects all bones, even if the bone's transform mode disallows scale\n      * inheritance. */\n    scaleX = 1;\n    /** Scales the entire skeleton on the Y axis. This affects all bones, even if the bone's transform mode disallows scale\n      * inheritance. */\n    _scaleY = 1;\n    get scaleY() {\n        return Skeleton.yDown ? -this._scaleY : this._scaleY;\n    }\n    set scaleY(scaleY) {\n        this._scaleY = scaleY;\n    }\n    /** Sets the skeleton X position, which is added to the root bone worldX position. */\n    x = 0;\n    /** Sets the skeleton Y position, which is added to the root bone worldY position. */\n    y = 0;\n    constructor(data) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let boneData = data.bones[i];\n            let bone;\n            if (!boneData.parent)\n                bone = new Bone(boneData, this, null);\n            else {\n                let parent = this.bones[boneData.parent.index];\n                bone = new Bone(boneData, this, parent);\n                parent.children.push(bone);\n            }\n            this.bones.push(bone);\n        }\n        this.slots = new Array();\n        this.drawOrder = new Array();\n        for (let i = 0; i < data.slots.length; i++) {\n            let slotData = data.slots[i];\n            let bone = this.bones[slotData.boneData.index];\n            let slot = new Slot(slotData, bone);\n            this.slots.push(slot);\n            this.drawOrder.push(slot);\n        }\n        this.ikConstraints = new Array();\n        for (let i = 0; i < data.ikConstraints.length; i++) {\n            let ikConstraintData = data.ikConstraints[i];\n            this.ikConstraints.push(new IkConstraint(ikConstraintData, this));\n        }\n        this.transformConstraints = new Array();\n        for (let i = 0; i < data.transformConstraints.length; i++) {\n            let transformConstraintData = data.transformConstraints[i];\n            this.transformConstraints.push(new TransformConstraint(transformConstraintData, this));\n        }\n        this.pathConstraints = new Array();\n        for (let i = 0; i < data.pathConstraints.length; i++) {\n            let pathConstraintData = data.pathConstraints[i];\n            this.pathConstraints.push(new PathConstraint(pathConstraintData, this));\n        }\n        this.color = new Color(1, 1, 1, 1);\n        this.updateCache();\n    }\n    /** Caches information about bones and constraints. Must be called if the {@link #getSkin()} is modified or if bones,\n     * constraints, or weighted path attachments are added or removed. */\n    updateCache() {\n        let updateCache = this._updateCache;\n        updateCache.length = 0;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.sorted = bone.data.skinRequired;\n            bone.active = !bone.sorted;\n        }\n        if (this.skin) {\n            let skinBones = this.skin.bones;\n            for (let i = 0, n = this.skin.bones.length; i < n; i++) {\n                let bone = this.bones[skinBones[i].index];\n                do {\n                    bone.sorted = false;\n                    bone.active = true;\n                    bone = bone.parent;\n                } while (bone);\n            }\n        }\n        // IK first, lowest hierarchy depth first.\n        let ikConstraints = this.ikConstraints;\n        let transformConstraints = this.transformConstraints;\n        let pathConstraints = this.pathConstraints;\n        let ikCount = ikConstraints.length, transformCount = transformConstraints.length, pathCount = pathConstraints.length;\n        let constraintCount = ikCount + transformCount + pathCount;\n        outer: for (let i = 0; i < constraintCount; i++) {\n            for (let ii = 0; ii < ikCount; ii++) {\n                let constraint = ikConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortIkConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < transformCount; ii++) {\n                let constraint = transformConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortTransformConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < pathCount; ii++) {\n                let constraint = pathConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortPathConstraint(constraint);\n                    continue outer;\n                }\n            }\n        }\n        for (let i = 0, n = bones.length; i < n; i++)\n            this.sortBone(bones[i]);\n    }\n    sortIkConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let target = constraint.target;\n        this.sortBone(target);\n        let constrained = constraint.bones;\n        let parent = constrained[0];\n        this.sortBone(parent);\n        if (constrained.length == 1) {\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n        }\n        else {\n            let child = constrained[constrained.length - 1];\n            this.sortBone(child);\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n            child.sorted = true;\n        }\n    }\n    sortPathConstraint(constraint) {\n        constraint.active = constraint.target.bone.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let slot = constraint.target;\n        let slotIndex = slot.data.index;\n        let slotBone = slot.bone;\n        if (this.skin)\n            this.sortPathConstraintAttachment(this.skin, slotIndex, slotBone);\n        if (this.data.defaultSkin && this.data.defaultSkin != this.skin)\n            this.sortPathConstraintAttachment(this.data.defaultSkin, slotIndex, slotBone);\n        for (let i = 0, n = this.data.skins.length; i < n; i++)\n            this.sortPathConstraintAttachment(this.data.skins[i], slotIndex, slotBone);\n        let attachment = slot.getAttachment();\n        if (attachment instanceof PathAttachment)\n            this.sortPathConstraintAttachmentWith(attachment, slotBone);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        for (let i = 0; i < boneCount; i++)\n            this.sortBone(constrained[i]);\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortTransformConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        this.sortBone(constraint.target);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        if (constraint.data.local) {\n            for (let i = 0; i < boneCount; i++) {\n                let child = constrained[i];\n                this.sortBone(child.parent);\n                this.sortBone(child);\n            }\n        }\n        else {\n            for (let i = 0; i < boneCount; i++) {\n                this.sortBone(constrained[i]);\n            }\n        }\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortPathConstraintAttachment(skin, slotIndex, slotBone) {\n        let attachments = skin.attachments[slotIndex];\n        if (!attachments)\n            return;\n        for (let key in attachments) {\n            this.sortPathConstraintAttachmentWith(attachments[key], slotBone);\n        }\n    }\n    sortPathConstraintAttachmentWith(attachment, slotBone) {\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let pathBones = attachment.bones;\n        if (!pathBones)\n            this.sortBone(slotBone);\n        else {\n            let bones = this.bones;\n            for (let i = 0, n = pathBones.length; i < n;) {\n                let nn = pathBones[i++];\n                nn += i;\n                while (i < nn)\n                    this.sortBone(bones[pathBones[i++]]);\n            }\n        }\n    }\n    sortBone(bone) {\n        if (!bone)\n            return;\n        if (bone.sorted)\n            return;\n        let parent = bone.parent;\n        if (parent)\n            this.sortBone(parent);\n        bone.sorted = true;\n        this._updateCache.push(bone);\n    }\n    sortReset(bones) {\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (!bone.active)\n                continue;\n            if (bone.sorted)\n                this.sortReset(bone.children);\n            bone.sorted = false;\n        }\n    }\n    /** Updates the world transform for each bone and applies all constraints.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransform() {\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.ax = bone.x;\n            bone.ay = bone.y;\n            bone.arotation = bone.rotation;\n            bone.ascaleX = bone.scaleX;\n            bone.ascaleY = bone.scaleY;\n            bone.ashearX = bone.shearX;\n            bone.ashearY = bone.shearY;\n        }\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++)\n            updateCache[i].update();\n    }\n    updateWorldTransformWith(parent) {\n        // Apply the parent bone transform to the root bone. The root bone always inherits scale, rotation and reflection.\n        let rootBone = this.getRootBone();\n        if (!rootBone)\n            throw new Error(\"Root bone must not be null.\");\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        rootBone.worldX = pa * this.x + pb * this.y + parent.worldX;\n        rootBone.worldY = pc * this.x + pd * this.y + parent.worldY;\n        let rotationY = rootBone.rotation + 90 + rootBone.shearY;\n        let la = MathUtils.cosDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n        let lb = MathUtils.cosDeg(rotationY) * rootBone.scaleY;\n        let lc = MathUtils.sinDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n        let ld = MathUtils.sinDeg(rotationY) * rootBone.scaleY;\n        rootBone.a = (pa * la + pb * lc) * this.scaleX;\n        rootBone.b = (pa * lb + pb * ld) * this.scaleX;\n        rootBone.c = (pc * la + pd * lc) * this.scaleY;\n        rootBone.d = (pc * lb + pd * ld) * this.scaleY;\n        // Update everything except root bone.\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++) {\n            let updatable = updateCache[i];\n            if (updatable != rootBone)\n                updatable.update();\n        }\n    }\n    /** Sets the bones, constraints, and slots to their setup pose values. */\n    setToSetupPose() {\n        this.setBonesToSetupPose();\n        this.setSlotsToSetupPose();\n    }\n    /** Sets the bones and constraints to their setup pose values. */\n    setBonesToSetupPose() {\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++)\n            bones[i].setToSetupPose();\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let constraint = ikConstraints[i];\n            constraint.mix = constraint.data.mix;\n            constraint.softness = constraint.data.softness;\n            constraint.bendDirection = constraint.data.bendDirection;\n            constraint.compress = constraint.data.compress;\n            constraint.stretch = constraint.data.stretch;\n        }\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate;\n            constraint.mixX = data.mixX;\n            constraint.mixY = data.mixY;\n            constraint.mixScaleX = data.mixScaleX;\n            constraint.mixScaleY = data.mixScaleY;\n            constraint.mixShearY = data.mixShearY;\n        }\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            let data = constraint.data;\n            constraint.position = data.position;\n            constraint.spacing = data.spacing;\n            constraint.mixRotate = data.mixRotate;\n            constraint.mixX = data.mixX;\n            constraint.mixY = data.mixY;\n        }\n    }\n    /** Sets the slots and draw order to their setup pose values. */\n    setSlotsToSetupPose() {\n        let slots = this.slots;\n        Utils.arrayCopy(slots, 0, this.drawOrder, 0, slots.length);\n        for (let i = 0, n = slots.length; i < n; i++)\n            slots[i].setToSetupPose();\n    }\n    /** @returns May return null. */\n    getRootBone() {\n        if (this.bones.length == 0)\n            return null;\n        return this.bones[0];\n    }\n    /** @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.data.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * repeatedly.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Sets a skin by name.\n     *\n     * See {@link #setSkin()}. */\n    setSkinByName(skinName) {\n        let skin = this.data.findSkin(skinName);\n        if (!skin)\n            throw new Error(\"Skin not found: \" + skinName);\n        this.setSkin(skin);\n    }\n    /** Sets the skin used to look up attachments before looking in the {@link SkeletonData#defaultSkin default skin}. If the\n     * skin is changed, {@link #updateCache()} is called.\n     *\n     * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was no\n     * old skin, each slot's setup mode attachment is attached from the new skin.\n     *\n     * After changing the skin, the visible attachments can be reset to those attached in the setup pose by calling\n     * {@link #setSlotsToSetupPose()}. Also, often {@link AnimationState#apply()} is called before the next time the\n     * skeleton is rendered to allow any attachment keys in the current animation(s) to hide or show attachments from the new skin.\n     * @param newSkin May be null. */\n    setSkin(newSkin) {\n        if (newSkin == this.skin)\n            return;\n        if (newSkin) {\n            if (this.skin)\n                newSkin.attachAll(this, this.skin);\n            else {\n                let slots = this.slots;\n                for (let i = 0, n = slots.length; i < n; i++) {\n                    let slot = slots[i];\n                    let name = slot.data.attachmentName;\n                    if (name) {\n                        let attachment = newSkin.getAttachment(i, name);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                    }\n                }\n            }\n        }\n        this.skin = newSkin;\n        this.updateCache();\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot name and attachment\n     * name.\n     *\n     * See {@link #getAttachment()}.\n     * @returns May be null. */\n    getAttachmentByName(slotName, attachmentName) {\n        let slot = this.data.findSlot(slotName);\n        if (!slot)\n            throw new Error(`Can't find slot with name ${slotName}`);\n        return this.getAttachment(slot.index, attachmentName);\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot index and\n     * attachment name. First the skin is checked and if the attachment was not found, the default skin is checked.\n     *\n     * See [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide.\n     * @returns May be null. */\n    getAttachment(slotIndex, attachmentName) {\n        if (!attachmentName)\n            throw new Error(\"attachmentName cannot be null.\");\n        if (this.skin) {\n            let attachment = this.skin.getAttachment(slotIndex, attachmentName);\n            if (attachment)\n                return attachment;\n        }\n        if (this.data.defaultSkin)\n            return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\n        return null;\n    }\n    /** A convenience method to set an attachment by finding the slot with {@link #findSlot()}, finding the attachment with\n     * {@link #getAttachment()}, then setting the slot's {@link Slot#attachment}.\n     * @param attachmentName May be null to clear the slot's attachment. */\n    setAttachment(slotName, attachmentName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName) {\n                let attachment = null;\n                if (attachmentName) {\n                    attachment = this.getAttachment(i, attachmentName);\n                    if (!attachment)\n                        throw new Error(\"Attachment not found: \" + attachmentName + \", for slot: \" + slotName);\n                }\n                slot.setAttachment(attachment);\n                return;\n            }\n        }\n        throw new Error(\"Slot not found: \" + slotName);\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let ikConstraint = ikConstraints[i];\n            if (ikConstraint.data.name == constraintName)\n                return ikConstraint;\n        }\n        return null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it repeatedly.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            if (constraint.data.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            if (constraint.data.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose as `{ x: number, y: number, width: number, height: number }`.\n     * Note that this method will create temporary objects which can add to garbage collection pressure. Use `getBounds()` if garbage collection is a concern. */\n    getBoundsRect() {\n        let offset = new Vector2();\n        let size = new Vector2();\n        this.getBounds(offset, size);\n        return { x: offset.x, y: offset.y, width: size.x, height: size.y };\n    }\n    /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose.\n     * @param offset An output value, the distance from the skeleton origin to the bottom left corner of the AABB.\n     * @param size An output value, the width and height of the AABB.\n     * @param temp Working memory to temporarily store attachments' computed world vertices. */\n    getBounds(offset, size, temp = new Array(2)) {\n        if (!offset)\n            throw new Error(\"offset cannot be null.\");\n        if (!size)\n            throw new Error(\"size cannot be null.\");\n        let drawOrder = this.drawOrder;\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            if (!slot.bone.active)\n                continue;\n            let verticesLength = 0;\n            let vertices = null;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof RegionAttachment) {\n                verticesLength = 8;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                attachment.computeWorldVertices(slot, vertices, 0, 2);\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                verticesLength = mesh.worldVerticesLength;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                mesh.computeWorldVertices(slot, 0, verticesLength, vertices, 0, 2);\n            }\n            if (vertices) {\n                for (let ii = 0, nn = vertices.length; ii < nn; ii += 2) {\n                    let x = vertices[ii], y = vertices[ii + 1];\n                    minX = Math.min(minX, x);\n                    minY = Math.min(minY, y);\n                    maxX = Math.max(maxX, x);\n                    maxY = Math.max(maxY, y);\n                }\n            }\n        }\n        offset.set(minX, minY);\n        size.set(maxX - minX, maxY - minY);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2tlbGV0b24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRy9FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNqRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDakUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDckUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR3JELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFL0QsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBbUIsTUFBTSxZQUFZLENBQUM7QUFFL0U7O2tJQUVrSTtBQUNsSSxNQUFNLE9BQU8sUUFBUTtJQUNwQixNQUFNLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUFBLENBQUM7SUFFdEIsc0NBQXNDO0lBQ3RDLElBQUksQ0FBZTtJQUVuQix5RkFBeUY7SUFDekYsS0FBSyxDQUFjO0lBRW5CLDRCQUE0QjtJQUM1QixLQUFLLENBQWM7SUFFbkIsMkhBQTJIO0lBQzNILFNBQVMsQ0FBYztJQUV2QixxQ0FBcUM7SUFDckMsYUFBYSxDQUFzQjtJQUVuQyw0Q0FBNEM7SUFDNUMsb0JBQW9CLENBQTZCO0lBRWpELHVDQUF1QztJQUN2QyxlQUFlLENBQXdCO0lBRXZDLDRIQUE0SDtJQUM1SCxZQUFZLEdBQUcsSUFBSSxLQUFLLEVBQWEsQ0FBQztJ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NUQsUUFBUSxDQUFDLE1BQU0sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBRTVELElBQUksU0FBUyxHQUFHLFFBQVEsQ0FBQyxRQUFRLEdBQUcsRUFBRSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7UUFDekQsSUFBSSxFQUFFLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQ2pGLElBQUksRUFBRSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUN2RCxJQUFJLEVBQUUsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7UUFDakYsSUFBSSxFQUFFLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQ3ZELFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQy9DLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQy9DLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQy9DLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FB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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the current pose values for an {@link Event}.\n *\n * See Timeline {@link Timeline#apply()},\n * AnimationStateListener {@link AnimationStateListener#event()}, and\n * [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class Event {\n    data;\n    intValue = 0;\n    floatValue = 0;\n    stringValue = null;\n    time = 0;\n    volume = 0;\n    balance = 0;\n    constructor(time, data) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.time = time;\n        this.data = data;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvRXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSS9FOzs7O2lGQUlpRjtBQUNqRixNQUFNLE9BQU8sS0FBSztJQUNqQixJQUFJLENBQVk7SUFDaEIsUUFBUSxHQUFXLENBQUMsQ0FBQztJQUNyQixVQUFVLEdBQVcsQ0FBQyxDQUFDO0lBQ3ZCLFdBQVcsR0FBa0IsSUFBSSxDQUFDO0lBQ2xDLElBQUksR0FBVyxDQUFDLENBQUM7SUFDakIsTUFBTSxHQUFXLENBQUMsQ0FBQztJQUNuQixPQUFPLEdBQVcsQ0FBQyxDQUFDO0lBRXBCLFlBQWEsSUFBWSxFQUFFLElBQWU7UUFDekMsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbEIsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose values for an {@link Event}.\n *\n * See [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class EventData {\n    name;\n    intValue = 0;\n    floatValue = 0;\n    stringValue = null;\n    audioPath = null;\n    volume = 0;\n    balance = 0;\n    constructor(name) {\n        this.name = name;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0V2ZW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0U7O3FGQUVxRjtBQUNyRixNQUFNLE9BQU8sU0FBUztJQUNyQixJQUFJLENBQVM7SUFDYixRQUFRLEdBQVcsQ0FBQyxDQUFDO0lBQ3JCLFVBQVUsR0FBVyxDQUFDLENBQUM7SUFDdkIsV0FBVyxHQUFrQixJQUFJLENBQUM7SUFDbEMsU0FBUyxHQUFrQixJQUFJLENBQUM7SUFDaEMsTUFBTSxHQUFXLENBQUMsQ0FBQztJQUNuQixPQUFPLEdBQVcsQ0FBQyxDQUFDO0lBRXBCLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData.js\";\n/** Stores the setup pose for an {@link IkConstraint}.\n * <p>\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraintData extends ConstraintData {\n    /** The bones that are constrained by this IK constraint. */\n    bones = new Array();\n    /** The bone that is the IK target. */\n    _target = null;\n    set target(boneData) { this._target = boneData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"BoneData not set.\");\n        else\n            return this._target;\n    }\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\n    bendDirection = 1;\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n    compress = false;\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\n    stretch = false;\n    /** When true, only a single bone is being constrained, and {@link #getCompress()} or {@link #getStretch()} is used, the bone\n     * is scaled on both the X and Y axes. */\n    uniform = false;\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n    mix = 1;\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n    softness = 0;\n    constructor(name) {\n        super(name, 0, false);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWtDb25zdHJhaW50RGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ja0NvbnN0cmFpbnREYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFHckQ7O3FHQUVxRztBQUNyRyxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsY0FBYztJQUNuRCw0REFBNEQ7SUFDNUQsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFZLENBQUM7SUFFOUIsc0NBQXNDO0lBQzlCLE9BQU8sR0FBb0IsSUFBSSxDQUFDO0lBQ3hDLElBQVcsTUFBTSxDQUFFLFFBQWtCLElBQUksSUFBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ25FLElBQVcsTUFBTTtRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU87WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUE7O1lBQ2xELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMxQixDQUFDO0lBRUQsbUVBQW1FO0lBQ25FLGFBQWEsR0FBRyxDQUFDLENBQUM7SUFFbEIseUhBQXlIO0lBQ3pILFFBQVEsR0FBRyxLQUFLLENBQUM7SUFFakI7aUZBQzZFO0lBQzdFLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFFaEI7NkNBQ3lDO0lBQ3pDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFFaEIsb0dBQW9HO0lBQ3BHLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFFUixpR0FBaUc7SUFDakcsUUFBUSxHQUFHLENBQUMsQ0FBQztJQUViLFlBQWEsSUFBWTtRQUN4QixLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN2QixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose and all of the stateless data for a skeleton.\n *\n * See [Data objects](http://esotericsoftware.com/spine-runtime-architecture#Data-objects) in the Spine Runtimes\n * Guide. */\nexport class SkeletonData {\n    /** The skeleton's name, which by default is the name of the skeleton data file, if possible. May be null. */\n    name = null;\n    /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n    bones = new Array(); // Ordered parents first.\n    /** The skeleton's slots. */\n    slots = new Array(); // Setup pose draw order.\n    skins = new Array();\n    /** The skeleton's default skin. By default this skin contains all attachments that were not in a skin in Spine.\n     *\n     * See {@link Skeleton#getAttachmentByName()}.\n     * May be null. */\n    defaultSkin = null;\n    /** The skeleton's events. */\n    events = new Array();\n    /** The skeleton's animations. */\n    animations = new Array();\n    /** The skeleton's IK constraints. */\n    ikConstraints = new Array();\n    /** The skeleton's transform constraints. */\n    transformConstraints = new Array();\n    /** The skeleton's path constraints. */\n    pathConstraints = new Array();\n    /** The X coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n    x = 0;\n    /** The Y coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n    y = 0;\n    /** The width of the skeleton's axis aligned bounding box in the setup pose. */\n    width = 0;\n    /** The height of the skeleton's axis aligned bounding box in the setup pose. */\n    height = 0;\n    /** The Spine version used to export the skeleton data, or null. */\n    version = null;\n    /** The skeleton data hash. This value will change if any of the skeleton data has changed. May be null. */\n    hash = null;\n    // Nonessential\n    /** The dopesheet FPS in Spine. Available only when nonessential data was exported. */\n    fps = 0;\n    /** The path to the images directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n    imagesPath = null;\n    /** The path to the audio directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n    audioPath = null;\n    /** Finds a bone by comparing each bone's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Finds a skin by comparing each skin's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSkin(skinName) {\n        if (!skinName)\n            throw new Error(\"skinName cannot be null.\");\n        let skins = this.skins;\n        for (let i = 0, n = skins.length; i < n; i++) {\n            let skin = skins[i];\n            if (skin.name == skinName)\n                return skin;\n        }\n        return null;\n    }\n    /** Finds an event by comparing each events's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findEvent(eventDataName) {\n        if (!eventDataName)\n            throw new Error(\"eventDataName cannot be null.\");\n        let events = this.events;\n        for (let i = 0, n = events.length; i < n; i++) {\n            let event = events[i];\n            if (event.name == eventDataName)\n                return event;\n        }\n        return null;\n    }\n    /** Finds an animation by comparing each animation's name. It is more efficient to cache the results of this method than to\n     * call it multiple times.\n     * @returns May be null. */\n    findAnimation(animationName) {\n        if (!animationName)\n            throw new Error(\"animationName cannot be null.\");\n        let animations = this.animations;\n        for (let i = 0, n = animations.length; i < n; i++) {\n            let animation = animations[i];\n            if (animation.name == animationName)\n                return animation;\n        }\n        return null;\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let constraint = ikConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it multiple times.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25EYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1NrZWxldG9uRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFXL0U7OztZQUdZO0FBQ1osTUFBTSxPQUFPLFlBQVk7SUFFeEIsNkdBQTZHO0lBQzdHLElBQUksR0FBa0IsSUFBSSxDQUFDO0lBRTNCLHlGQUF5RjtJQUN6RixLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQyxDQUFDLHlCQUF5QjtJQUV4RCw0QkFBNEI7SUFDNUIsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFZLENBQUMsQ0FBQyx5QkFBeUI7SUFDeEQsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFRLENBQUM7SUFFMUI7OztzQkFHa0I7SUFDbEIsV0FBVyxHQUFnQixJQUFJLENBQUM7SUFFaEMsNkJBQTZCO0lBQzdCLE1BQU0sR0FBRyxJQUFJLEtBQUssRUFBYSxDQUFDO0lBRWhDLGlDQUFpQztJQUNqQyxVQUFVLEdBQUcsSUFBSSxLQUFLLEVBQWEsQ0FBQztJQUVwQyxxQ0FBcUM7SUFDckMsYUFBYSxHQUFHLElBQUksS0FBSyxFQUFvQixDQUFDO0lBRTlDLDRDQUE0QztJQUM1QyxvQkFBb0IsR0FBRyxJQUFJLEtBQUssRUFBMkIsQ0FBQztJQUU1RCx1Q0FBdUM7SUFDdkMsZUFBZSxHQUFHLElBQUksS0FBSyxFQUFzQixDQUFDO0lBRWxELHNGQUFzRjtJQUN0RixDQUFDLEdBQVcsQ0FBQyxDQUFDO0lBRWQsc0ZBQXNGO0lBQ3RGLENBQUMsR0FBVyxDQUFDLENBQUM7SUFFZCwrRUFBK0U7SUFDL0UsS0FBSyxHQUFXLENBQUMsQ0FBQztJQUVsQixnRkFBZ0Y7SUFDaEYsTUFBTSxHQUFXLENBQUMsQ0FBQztJQUVuQixtRUFBbUU7SUFDbkUsT0FBTyxHQUFrQixJQUFJLENBQUM7SUFFOUIsMkdBQTJHO0lBQzNHLElBQUksR0FBa0IsSUFBSSxDQUFDO0lBRTNCLGVBQWU7SUFDZixzRkFBc0Y7SUFDdEYsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUVSLDZIQUE2SDtJQUM3SCxVQUFVLEdBQWtCLElBQUksQ0FBQztJQUVqQyw0SEFBNEg7SUFDNUgsU0FBUyxHQUFrQixJQUFJLENBQUM7SUFFaEM7OytCQUUyQjtJQUMzQixRQUFRLENBQUUsUUFBZ0I7UUFDekIsSUFBSSxDQUFDLFFBQVE7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDM0QsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksUUFBUTtnQkFBRSxPQUFPLElBQUksQ0FBQztTQUN2QztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVEOzsrQkFFMkI7SUFDM0IsUUFBUSxDQUFFLFFBQWdCO1FBQ3pCLElBQUksQ0FBQyxRQUFRO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQzNELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdkIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM3QyxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLFFBQVE7Z0JBQUUsT0FBTyxJQUFJLENBQUM7U0FDdkM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRDs7K0JBRTJCO0lBQzNCLFFBQVEsQ0FBRSxRQUFnQjtRQUN6QixJQUFJLENBQUMsUUFBUTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUMzRCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0MsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxRQUFRO2dCQUFFLE9BQU8sSUFBSSxDQUFDO1NBQ3ZDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQ7OytCQUUyQjtJQUMzQixTQUFTLENBQUUsYUFBcUI7UUFDL0IsSUFBSSxDQUFDLGFBQWE7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLCtCQUErQixDQUFDLENBQUM7UUFDckUsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN6QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzlDLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLEtBQUssQ0FBQyxJQUFJLElBQUksYUFBYTtnQkFBRSxPQUFPLEtBQUssQ0FBQztTQUM5QztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVEOzsrQkFFMkI7SUFDM0IsYUFBYSxDQUFFLGFBQXFCO1FBQ25DLElBQUksQ0FBQyxhQUFhO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1FBQ3JFLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDakMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNsRCxJQUFJLFNBQVMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUIsSUFBSSxTQUFTLENBQUMsSUFBSSxJQUFJLGFBQWE7Z0JBQUUsT0FBTyxTQUFTLENBQUM7U0FDdEQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRDs7OEJBRTBCO0lBQzFCLGdCQUFnQixDQUFFLGNBQXNCO1FBQ3ZDLElBQUksQ0FBQyxjQUFjO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ3ZFLElBQUksYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDdkMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNyRCxJQUFJLFVBQVUsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEMsSUFBSSxVQUFVLENBQUMsSUFBSSxJQUFJLGNBQWM7Z0JBQUUsT0FBTyxVQUFVLENBQUM7U0FDekQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRDs7OEJBRTBCO0lBQzFCLHVCQUF1QixDQUFFLGNBQXNCO1FBQzlDLElBQUksQ0FBQyxjQUFjO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ3ZFLElBQUksb0JBQW9CLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDO1FBQ3JELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxvQkFBb0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM1RCxJQUFJLFVBQVUsR0FBRyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QyxJQUFJLFVBQVUsQ0FBQyxJQUFJLElBQUksY0FBYztnQkFBRSxPQUFPLFVBQVUsQ0FBQztTQUN6RDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs4QkFFMEI7SUFDMUIsa0JBQWtCLENBQUUsY0FBc0I7UUFDekMsSUFBSSxDQUFDLGNBQWM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDdkUsSUFBSSxlQUFlLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUMzQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsZUFBZSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3ZELElBQUksVUFBVSxHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFJLFVBQVUsQ0FBQyxJQUFJLElBQUksY0FBYztnQkFBRSxPQUFPLFVBQVUsQ0FBQztTQUN6RDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MeshAttachment } from \"./attachments/MeshAttachment.js\";\n/** Stores an entry in the skin consisting of the slot index, name, and attachment **/\nexport class SkinEntry {\n    slotIndex;\n    name;\n    attachment;\n    constructor(slotIndex = 0, name, attachment) {\n        this.slotIndex = slotIndex;\n        this.name = name;\n        this.attachment = attachment;\n    }\n}\n/** Stores attachments by slot index and attachment name.\n *\n * See SkeletonData {@link SkeletonData#defaultSkin}, Skeleton {@link Skeleton#skin}, and\n * [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide. */\nexport class Skin {\n    /** The skin's name, which is unique across all skins in the skeleton. */\n    name;\n    attachments = new Array();\n    bones = Array();\n    constraints = new Array();\n    constructor(name) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n    /** Adds an attachment to the skin for the specified slot index and name. */\n    setAttachment(slotIndex, name, attachment) {\n        if (!attachment)\n            throw new Error(\"attachment cannot be null.\");\n        let attachments = this.attachments;\n        if (slotIndex >= attachments.length)\n            attachments.length = slotIndex + 1;\n        if (!attachments[slotIndex])\n            attachments[slotIndex] = {};\n        attachments[slotIndex][name] = attachment;\n    }\n    /** Adds all attachments, bones, and constraints from the specified skin to this skin. */\n    addSkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n        }\n    }\n    /** Adds all bones and constraints and copies of all attachments from the specified skin to this skin. Mesh attachments are not\n     * copied, instead a new linked mesh is created. The attachment copies can be modified without affecting the originals. */\n    copySkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            if (!attachment.attachment)\n                continue;\n            if (attachment.attachment instanceof MeshAttachment) {\n                attachment.attachment = attachment.attachment.newLinkedMesh();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n            else {\n                attachment.attachment = attachment.attachment.copy();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n        }\n    }\n    /** Returns the attachment for the specified slot index and name, or null. */\n    getAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        return dictionary ? dictionary[name] : null;\n    }\n    /** Removes the attachment in the skin for the specified slot index and name, if any. */\n    removeAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        if (dictionary)\n            delete dictionary[name];\n    }\n    /** Returns all attachments in this skin. */\n    getAttachments() {\n        let entries = new Array();\n        for (var i = 0; i < this.attachments.length; i++) {\n            let slotAttachments = this.attachments[i];\n            if (slotAttachments) {\n                for (let name in slotAttachments) {\n                    let attachment = slotAttachments[name];\n                    if (attachment)\n                        entries.push(new SkinEntry(i, name, attachment));\n                }\n            }\n        }\n        return entries;\n    }\n    /** Returns all attachments in this skin for the specified slot index. */\n    getAttachmentsForSlot(slotIndex, attachments) {\n        let slotAttachments = this.attachments[slotIndex];\n        if (slotAttachments) {\n            for (let name in slotAttachments) {\n                let attachment = slotAttachments[name];\n                if (attachment)\n                    attachments.push(new SkinEntry(slotIndex, name, attachment));\n            }\n        }\n    }\n    /** Clears all attachments, bones, and constraints. */\n    clear() {\n        this.attachments.length = 0;\n        this.bones.length = 0;\n        this.constraints.length = 0;\n    }\n    /** Attach each attachment in this skin if the corresponding attachment in the old skin is currently attached. */\n    attachAll(skeleton, oldSkin) {\n        let slotIndex = 0;\n        for (let i = 0; i < skeleton.slots.length; i++) {\n            let slot = skeleton.slots[i];\n            let slotAttachment = slot.getAttachment();\n            if (slotAttachment && slotIndex < oldSkin.attachments.length) {\n                let dictionary = oldSkin.attachments[slotIndex];\n                for (let key in dictionary) {\n                    let skinAttachment = dictionary[key];\n                    if (slotAttachment == skinAttachment) {\n                        let attachment = this.getAttachment(slotIndex, key);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                        break;\n                    }\n                }\n            }\n            slotIndex++;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFNakUsc0ZBQXNGO0FBQ3RGLE1BQU0sT0FBTyxTQUFTO0lBQ0Q7SUFBOEI7SUFBcUI7SUFBdkUsWUFBb0IsWUFBb0IsQ0FBQyxFQUFTLElBQVksRUFBUyxVQUFzQjtRQUF6RSxjQUFTLEdBQVQsU0FBUyxDQUFZO1FBQVMsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUFTLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBSSxDQUFDO0NBQ2xHO0FBRUQ7OzttR0FHbUc7QUFDbkcsTUFBTSxPQUFPLElBQUk7SUFDaEIseUVBQXlFO0lBQ3pFLElBQUksQ0FBUztJQUViLFdBQVcsR0FBRyxJQUFJLEtBQUssRUFBeUIsQ0FBQztJQUNqRCxLQUFLLEdBQUcsS0FBSyxFQUFZLENBQUM7SUFDMUIsV0FBVyxHQUFHLElBQUksS0FBSyxFQUFrQixDQUFDO0lBRTFDLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0lBRUQsNEVBQTRFO0lBQzVFLGFBQWEsQ0FBRSxTQUFpQixFQUFFLElBQVksRUFBRSxVQUFzQjtRQUNyRSxJQUFJLENBQUMsVUFBVTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUMvRCxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ25DLElBQUksU0FBUyxJQUFJLFdBQVcsQ0FBQyxNQUFNO1lBQUUsV0FBVyxDQUFDLE1BQU0sR0FBRyxTQUFTLEdBQUcsQ0FBQyxDQUFD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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData.js\";\n/** Stores the setup pose for a {@link TransformConstraint}.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraintData extends ConstraintData {\n    /** The bones that will be modified by this transform constraint. */\n    bones = new Array();\n    /** The target bone whose world transform will be copied to the constrained bones. */\n    _target = null;\n    set target(boneData) { this._target = boneData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"BoneData not set.\");\n        else\n            return this._target;\n    }\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    mixScaleX = 0;\n    mixScaleY = 0;\n    mixShearY = 0;\n    /** An offset added to the constrained bone rotation. */\n    offsetRotation = 0;\n    /** An offset added to the constrained bone X translation. */\n    offsetX = 0;\n    /** An offset added to the constrained bone Y translation. */\n    offsetY = 0;\n    /** An offset added to the constrained bone scaleX. */\n    offsetScaleX = 0;\n    /** An offset added to the constrained bone scaleY. */\n    offsetScaleY = 0;\n    /** An offset added to the constrained bone shearY. */\n    offsetShearY = 0;\n    relative = false;\n    local = false;\n    constructor(name) {\n        super(name, 0, false);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNmb3JtQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvVHJhbnNmb3JtQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUdyRDs7bUhBRW1IO0FBQ25ILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxjQUFjO0lBRTFELG9FQUFvRTtJQUNwRSxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQztJQUU5QixxRkFBcUY7SUFDN0UsT0FBTyxHQUFvQixJQUFJLENBQUM7SUFDeEMsSUFBVyxNQUFNLENBQUUsUUFBa0IsSUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbkUsSUFBVyxNQUFNO1FBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQTs7WUFDbEQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFFRCxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNULElBQUksR0FBRyxDQUFDLENBQUM7SUFDVCxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsU0FBUyxHQUFHLENBQUMsQ0FBQztJQUNkLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFFZCx3REFBd0Q7SUFDeEQsY0FBYyxHQUFHLENBQUMsQ0FBQztJQUVuQiw2REFBNkQ7SUFDN0QsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUVaLDZEQUE2RDtJQUM3RCxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBRVosc0RBQXNEO0lBQ3RELFlBQVksR0FBRyxDQUFDLENBQUM7SUFFakIsc0RBQXNEO0lBQ3RELFlBQVksR0FBRyxDQUFDLENBQUM7SUFFakIsc0RBQXNEO0lBQ3RELFlBQVksR0FBRyxDQUFDLENBQUM7SUFFakIsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUNqQixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment.js\";\nimport { Pool, Utils } from \"./Utils.js\";\n/** Collects each visible {@link BoundingBoxAttachment} and computes the world vertices for its polygon. The polygon vertices are\n * provided along with convenience methods for doing hit detection. */\nexport class SkeletonBounds {\n    /** The left edge of the axis aligned bounding box. */\n    minX = 0;\n    /** The bottom edge of the axis aligned bounding box. */\n    minY = 0;\n    /** The right edge of the axis aligned bounding box. */\n    maxX = 0;\n    /** The top edge of the axis aligned bounding box. */\n    maxY = 0;\n    /** The visible bounding boxes. */\n    boundingBoxes = new Array();\n    /** The world vertices for the bounding box polygons. */\n    polygons = new Array();\n    polygonPool = new Pool(() => {\n        return Utils.newFloatArray(16);\n    });\n    /** Clears any previous polygons, finds all visible bounding box attachments, and computes the world vertices for each bounding\n     * box's polygon.\n     * @param updateAabb If true, the axis aligned bounding box containing all the polygons is computed. If false, the\n     *           SkeletonBounds AABB methods will always return true. */\n    update(skeleton, updateAabb) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        let boundingBoxes = this.boundingBoxes;\n        let polygons = this.polygons;\n        let polygonPool = this.polygonPool;\n        let slots = skeleton.slots;\n        let slotCount = slots.length;\n        boundingBoxes.length = 0;\n        polygonPool.freeAll(polygons);\n        polygons.length = 0;\n        for (let i = 0; i < slotCount; i++) {\n            let slot = slots[i];\n            if (!slot.bone.active)\n                continue;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof BoundingBoxAttachment) {\n                let boundingBox = attachment;\n                boundingBoxes.push(boundingBox);\n                let polygon = polygonPool.obtain();\n                if (polygon.length != boundingBox.worldVerticesLength) {\n                    polygon = Utils.newFloatArray(boundingBox.worldVerticesLength);\n                }\n                polygons.push(polygon);\n                boundingBox.computeWorldVertices(slot, 0, boundingBox.worldVerticesLength, polygon, 0, 2);\n            }\n        }\n        if (updateAabb) {\n            this.aabbCompute();\n        }\n        else {\n            this.minX = Number.POSITIVE_INFINITY;\n            this.minY = Number.POSITIVE_INFINITY;\n            this.maxX = Number.NEGATIVE_INFINITY;\n            this.maxY = Number.NEGATIVE_INFINITY;\n        }\n    }\n    aabbCompute() {\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++) {\n            let polygon = polygons[i];\n            let vertices = polygon;\n            for (let ii = 0, nn = polygon.length; ii < nn; ii += 2) {\n                let x = vertices[ii];\n                let y = vertices[ii + 1];\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n                maxX = Math.max(maxX, x);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n    /** Returns true if the axis aligned bounding box contains the point. */\n    aabbContainsPoint(x, y) {\n        return x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\n    }\n    /** Returns true if the axis aligned bounding box intersects the line segment. */\n    aabbIntersectsSegment(x1, y1, x2, y2) {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n        if ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\n            return false;\n        let m = (y2 - y1) / (x2 - x1);\n        let y = m * (minX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        y = m * (maxX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        let x = (minY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        x = (maxY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        return false;\n    }\n    /** Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds. */\n    aabbIntersectsSkeleton(bounds) {\n        return this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY && this.maxY > bounds.minY;\n    }\n    /** Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\n     * efficient to only call this method if {@link #aabbContainsPoint(float, float)} returns true. */\n    containsPoint(x, y) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.containsPointPolygon(polygons[i], x, y))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains the point. */\n    containsPointPolygon(polygon, x, y) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let prevIndex = nn - 2;\n        let inside = false;\n        for (let ii = 0; ii < nn; ii += 2) {\n            let vertexY = vertices[ii + 1];\n            let prevY = vertices[prevIndex + 1];\n            if ((vertexY < y && prevY >= y) || (prevY < y && vertexY >= y)) {\n                let vertexX = vertices[ii];\n                if (vertexX + (y - vertexY) / (prevY - vertexY) * (vertices[prevIndex] - vertexX) < x)\n                    inside = !inside;\n            }\n            prevIndex = ii;\n        }\n        return inside;\n    }\n    /** Returns the first bounding box attachment that contains any part of the line segment, or null. When doing many checks, it\n     * is usually more efficient to only call this method if {@link #aabbIntersectsSegment()} returns\n     * true. */\n    intersectsSegment(x1, y1, x2, y2) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.intersectsSegmentPolygon(polygons[i], x1, y1, x2, y2))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains any part of the line segment. */\n    intersectsSegmentPolygon(polygon, x1, y1, x2, y2) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let width12 = x1 - x2, height12 = y1 - y2;\n        let det1 = x1 * y2 - y1 * x2;\n        let x3 = vertices[nn - 2], y3 = vertices[nn - 1];\n        for (let ii = 0; ii < nn; ii += 2) {\n            let x4 = vertices[ii], y4 = vertices[ii + 1];\n            let det2 = x3 * y4 - y3 * x4;\n            let width34 = x3 - x4, height34 = y3 - y4;\n            let det3 = width12 * height34 - height12 * width34;\n            let x = (det1 * width34 - width12 * det2) / det3;\n            if (((x >= x3 && x <= x4) || (x >= x4 && x <= x3)) && ((x >= x1 && x <= x2) || (x >= x2 && x <= x1))) {\n                let y = (det1 * height34 - height12 * det2) / det3;\n                if (((y >= y3 && y <= y4) || (y >= y4 && y <= y3)) && ((y >= y1 && y <= y2) || (y >= y2 && y <= y1)))\n                    return true;\n            }\n            x3 = x4;\n            y3 = y4;\n        }\n        return false;\n    }\n    /** Returns the polygon for the specified bounding box, or null. */\n    getPolygon(boundingBox) {\n        if (!boundingBox)\n            throw new Error(\"boundingBox cannot be null.\");\n        let index = this.boundingBoxes.indexOf(boundingBox);\n        return index == -1 ? null : this.polygons[index];\n    }\n    /** The width of the axis aligned bounding box. */\n    getWidth() {\n        return this.maxX - this.minX;\n    }\n    /** The height of the axis aligned bounding box. */\n    getHeight() {\n        return this.maxY - this.minY;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Pool } from \"./Utils.js\";\nexport class Triangulator {\n    convexPolygons = new Array();\n    convexPolygonsIndices = new Array();\n    indicesArray = new Array();\n    isConcaveArray = new Array();\n    triangles = new Array();\n    polygonPool = new Pool(() => {\n        return new Array();\n    });\n    polygonIndicesPool = new Pool(() => {\n        return new Array();\n    });\n    triangulate(verticesArray) {\n        let vertices = verticesArray;\n        let vertexCount = verticesArray.length >> 1;\n        let indices = this.indicesArray;\n        indices.length = 0;\n        for (let i = 0; i < vertexCount; i++)\n            indices[i] = i;\n        let isConcave = this.isConcaveArray;\n        isConcave.length = 0;\n        for (let i = 0, n = vertexCount; i < n; ++i)\n            isConcave[i] = Triangulator.isConcave(i, vertexCount, vertices, indices);\n        let triangles = this.triangles;\n        triangles.length = 0;\n        while (vertexCount > 3) {\n            // Find ear tip.\n            let previous = vertexCount - 1, i = 0, next = 1;\n            while (true) {\n                outer: if (!isConcave[i]) {\n                    let p1 = indices[previous] << 1, p2 = indices[i] << 1, p3 = indices[next] << 1;\n                    let p1x = vertices[p1], p1y = vertices[p1 + 1];\n                    let p2x = vertices[p2], p2y = vertices[p2 + 1];\n                    let p3x = vertices[p3], p3y = vertices[p3 + 1];\n                    for (let ii = (next + 1) % vertexCount; ii != previous; ii = (ii + 1) % vertexCount) {\n                        if (!isConcave[ii])\n                            continue;\n                        let v = indices[ii] << 1;\n                        let vx = vertices[v], vy = vertices[v + 1];\n                        if (Triangulator.positiveArea(p3x, p3y, p1x, p1y, vx, vy)) {\n                            if (Triangulator.positiveArea(p1x, p1y, p2x, p2y, vx, vy)) {\n                                if (Triangulator.positiveArea(p2x, p2y, p3x, p3y, vx, vy))\n                                    break outer;\n                            }\n                        }\n                    }\n                    break;\n                }\n                if (next == 0) {\n                    do {\n                        if (!isConcave[i])\n                            break;\n                        i--;\n                    } while (i > 0);\n                    break;\n                }\n                previous = i;\n                i = next;\n                next = (next + 1) % vertexCount;\n            }\n            // Cut ear tip.\n            triangles.push(indices[(vertexCount + i - 1) % vertexCount]);\n            triangles.push(indices[i]);\n            triangles.push(indices[(i + 1) % vertexCount]);\n            indices.splice(i, 1);\n            isConcave.splice(i, 1);\n            vertexCount--;\n            let previousIndex = (vertexCount + i - 1) % vertexCount;\n            let nextIndex = i == vertexCount ? 0 : i;\n            isConcave[previousIndex] = Triangulator.isConcave(previousIndex, vertexCount, vertices, indices);\n            isConcave[nextIndex] = Triangulator.isConcave(nextIndex, vertexCount, vertices, indices);\n        }\n        if (vertexCount == 3) {\n            triangles.push(indices[2]);\n            triangles.push(indices[0]);\n            triangles.push(indices[1]);\n        }\n        return triangles;\n    }\n    decompose(verticesArray, triangles) {\n        let vertices = verticesArray;\n        let convexPolygons = this.convexPolygons;\n        this.polygonPool.freeAll(convexPolygons);\n        convexPolygons.length = 0;\n        let convexPolygonsIndices = this.convexPolygonsIndices;\n        this.polygonIndicesPool.freeAll(convexPolygonsIndices);\n        convexPolygonsIndices.length = 0;\n        let polygonIndices = this.polygonIndicesPool.obtain();\n        polygonIndices.length = 0;\n        let polygon = this.polygonPool.obtain();\n        polygon.length = 0;\n        // Merge subsequent triangles if they form a triangle fan.\n        let fanBaseIndex = -1, lastWinding = 0;\n        for (let i = 0, n = triangles.length; i < n; i += 3) {\n            let t1 = triangles[i] << 1, t2 = triangles[i + 1] << 1, t3 = triangles[i + 2] << 1;\n            let x1 = vertices[t1], y1 = vertices[t1 + 1];\n            let x2 = vertices[t2], y2 = vertices[t2 + 1];\n            let x3 = vertices[t3], y3 = vertices[t3 + 1];\n            // If the base of the last triangle is the same as this triangle, check if they form a convex polygon (triangle fan).\n            let merged = false;\n            if (fanBaseIndex == t1) {\n                let o = polygon.length - 4;\n                let winding1 = Triangulator.winding(polygon[o], polygon[o + 1], polygon[o + 2], polygon[o + 3], x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, polygon[0], polygon[1], polygon[2], polygon[3]);\n                if (winding1 == lastWinding && winding2 == lastWinding) {\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(t3);\n                    merged = true;\n                }\n            }\n            // Otherwise make this triangle the new base.\n            if (!merged) {\n                if (polygon.length > 0) {\n                    convexPolygons.push(polygon);\n                    convexPolygonsIndices.push(polygonIndices);\n                }\n                else {\n                    this.polygonPool.free(polygon);\n                    this.polygonIndicesPool.free(polygonIndices);\n                }\n                polygon = this.polygonPool.obtain();\n                polygon.length = 0;\n                polygon.push(x1);\n                polygon.push(y1);\n                polygon.push(x2);\n                polygon.push(y2);\n                polygon.push(x3);\n                polygon.push(y3);\n                polygonIndices = this.polygonIndicesPool.obtain();\n                polygonIndices.length = 0;\n                polygonIndices.push(t1);\n                polygonIndices.push(t2);\n                polygonIndices.push(t3);\n                lastWinding = Triangulator.winding(x1, y1, x2, y2, x3, y3);\n                fanBaseIndex = t1;\n            }\n        }\n        if (polygon.length > 0) {\n            convexPolygons.push(polygon);\n            convexPolygonsIndices.push(polygonIndices);\n        }\n        // Go through the list of polygons and try to merge the remaining triangles with the found triangle fans.\n        for (let i = 0, n = convexPolygons.length; i < n; i++) {\n            polygonIndices = convexPolygonsIndices[i];\n            if (polygonIndices.length == 0)\n                continue;\n            let firstIndex = polygonIndices[0];\n            let lastIndex = polygonIndices[polygonIndices.length - 1];\n            polygon = convexPolygons[i];\n            let o = polygon.length - 4;\n            let prevPrevX = polygon[o], prevPrevY = polygon[o + 1];\n            let prevX = polygon[o + 2], prevY = polygon[o + 3];\n            let firstX = polygon[0], firstY = polygon[1];\n            let secondX = polygon[2], secondY = polygon[3];\n            let winding = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, firstX, firstY);\n            for (let ii = 0; ii < n; ii++) {\n                if (ii == i)\n                    continue;\n                let otherIndices = convexPolygonsIndices[ii];\n                if (otherIndices.length != 3)\n                    continue;\n                let otherFirstIndex = otherIndices[0];\n                let otherSecondIndex = otherIndices[1];\n                let otherLastIndex = otherIndices[2];\n                let otherPoly = convexPolygons[ii];\n                let x3 = otherPoly[otherPoly.length - 2], y3 = otherPoly[otherPoly.length - 1];\n                if (otherFirstIndex != firstIndex || otherSecondIndex != lastIndex)\n                    continue;\n                let winding1 = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, firstX, firstY, secondX, secondY);\n                if (winding1 == winding && winding2 == winding) {\n                    otherPoly.length = 0;\n                    otherIndices.length = 0;\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(otherLastIndex);\n                    prevPrevX = prevX;\n                    prevPrevY = prevY;\n                    prevX = x3;\n                    prevY = y3;\n                    ii = 0;\n                }\n            }\n        }\n        // Remove empty polygons that resulted from the merge step above.\n        for (let i = convexPolygons.length - 1; i >= 0; i--) {\n            polygon = convexPolygons[i];\n            if (polygon.length == 0) {\n                convexPolygons.splice(i, 1);\n                this.polygonPool.free(polygon);\n                polygonIndices = convexPolygonsIndices[i];\n                convexPolygonsIndices.splice(i, 1);\n                this.polygonIndicesPool.free(polygonIndices);\n            }\n        }\n        return convexPolygons;\n    }\n    static isConcave(index, vertexCount, vertices, indices) {\n        let previous = indices[(vertexCount + index - 1) % vertexCount] << 1;\n        let current = indices[index] << 1;\n        let next = indices[(index + 1) % vertexCount] << 1;\n        return !this.positiveArea(vertices[previous], vertices[previous + 1], vertices[current], vertices[current + 1], vertices[next], vertices[next + 1]);\n    }\n    static positiveArea(p1x, p1y, p2x, p2y, p3x, p3y) {\n        return p1x * (p3y - p2y) + p2x * (p1y - p3y) + p3x * (p2y - p1y) >= 0;\n    }\n    static winding(p1x, p1y, p2x, p2y, p3x, p3y) {\n        let px = p2x - p1x, py = p2y - p1y;\n        return p3x * py - p3y * px + px * p1y - p1x * py >= 0 ? 1 : -1;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Triangulator } from \"./Triangulator.js\";\nimport { Utils } from \"./Utils.js\";\nexport class SkeletonClipping {\n    triangulator = new Triangulator();\n    clippingPolygon = new Array();\n    clipOutput = new Array();\n    clippedVertices = new Array();\n    clippedTriangles = new Array();\n    scratch = new Array();\n    clipAttachment = null;\n    clippingPolygons = null;\n    clipStart(slot, clip) {\n        if (this.clipAttachment)\n            return 0;\n        this.clipAttachment = clip;\n        let n = clip.worldVerticesLength;\n        let vertices = Utils.setArraySize(this.clippingPolygon, n);\n        clip.computeWorldVertices(slot, 0, n, vertices, 0, 2);\n        let clippingPolygon = this.clippingPolygon;\n        SkeletonClipping.makeClockwise(clippingPolygon);\n        let clippingPolygons = this.clippingPolygons = this.triangulator.decompose(clippingPolygon, this.triangulator.triangulate(clippingPolygon));\n        for (let i = 0, n = clippingPolygons.length; i < n; i++) {\n            let polygon = clippingPolygons[i];\n            SkeletonClipping.makeClockwise(polygon);\n            polygon.push(polygon[0]);\n            polygon.push(polygon[1]);\n        }\n        return clippingPolygons.length;\n    }\n    clipEndWithSlot(slot) {\n        if (this.clipAttachment && this.clipAttachment.endSlot == slot.data)\n            this.clipEnd();\n    }\n    clipEnd() {\n        if (!this.clipAttachment)\n            return;\n        this.clipAttachment = null;\n        this.clippingPolygons = null;\n        this.clippedVertices.length = 0;\n        this.clippedTriangles.length = 0;\n        this.clippingPolygon.length = 0;\n    }\n    isClipping() {\n        return this.clipAttachment != null;\n    }\n    clipTriangles(vertices, verticesLength, triangles, trianglesLength, uvs, light, dark, twoColor) {\n        let clipOutput = this.clipOutput, clippedVertices = this.clippedVertices;\n        let clippedTriangles = this.clippedTriangles;\n        let polygons = this.clippingPolygons;\n        let polygonsCount = polygons.length;\n        let vertexSize = twoColor ? 12 : 8;\n        let index = 0;\n        clippedVertices.length = 0;\n        clippedTriangles.length = 0;\n        outer: for (let i = 0; i < trianglesLength; i += 3) {\n            let vertexOffset = triangles[i] << 1;\n            let x1 = vertices[vertexOffset], y1 = vertices[vertexOffset + 1];\n            let u1 = uvs[vertexOffset], v1 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 1] << 1;\n            let x2 = vertices[vertexOffset], y2 = vertices[vertexOffset + 1];\n            let u2 = uvs[vertexOffset], v2 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 2] << 1;\n            let x3 = vertices[vertexOffset], y3 = vertices[vertexOffset + 1];\n            let u3 = uvs[vertexOffset], v3 = uvs[vertexOffset + 1];\n            for (let p = 0; p < polygonsCount; p++) {\n                let s = clippedVertices.length;\n                if (this.clip(x1, y1, x2, y2, x3, y3, polygons[p], clipOutput)) {\n                    let clipOutputLength = clipOutput.length;\n                    if (clipOutputLength == 0)\n                        continue;\n                    let d0 = y2 - y3, d1 = x3 - x2, d2 = x1 - x3, d4 = y3 - y1;\n                    let d = 1 / (d0 * d2 + d1 * (y1 - y3));\n                    let clipOutputCount = clipOutputLength >> 1;\n                    let clipOutputItems = this.clipOutput;\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + clipOutputCount * vertexSize);\n                    for (let ii = 0; ii < clipOutputLength; ii += 2) {\n                        let x = clipOutputItems[ii], y = clipOutputItems[ii + 1];\n                        clippedVerticesItems[s] = x;\n                        clippedVerticesItems[s + 1] = y;\n                        clippedVerticesItems[s + 2] = light.r;\n                        clippedVerticesItems[s + 3] = light.g;\n                        clippedVerticesItems[s + 4] = light.b;\n                        clippedVerticesItems[s + 5] = light.a;\n                        let c0 = x - x3, c1 = y - y3;\n                        let a = (d0 * c0 + d1 * c1) * d;\n                        let b = (d4 * c0 + d2 * c1) * d;\n                        let c = 1 - a - b;\n                        clippedVerticesItems[s + 6] = u1 * a + u2 * b + u3 * c;\n                        clippedVerticesItems[s + 7] = v1 * a + v2 * b + v3 * c;\n                        if (twoColor) {\n                            clippedVerticesItems[s + 8] = dark.r;\n                            clippedVerticesItems[s + 9] = dark.g;\n                            clippedVerticesItems[s + 10] = dark.b;\n                            clippedVerticesItems[s + 11] = dark.a;\n                        }\n                        s += vertexSize;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3 * (clipOutputCount - 2));\n                    clipOutputCount--;\n                    for (let ii = 1; ii < clipOutputCount; ii++) {\n                        clippedTrianglesItems[s] = index;\n                        clippedTrianglesItems[s + 1] = (index + ii);\n                        clippedTrianglesItems[s + 2] = (index + ii + 1);\n                        s += 3;\n                    }\n                    index += clipOutputCount + 1;\n                }\n                else {\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + 3 * vertexSize);\n                    clippedVerticesItems[s] = x1;\n                    clippedVerticesItems[s + 1] = y1;\n                    clippedVerticesItems[s + 2] = light.r;\n                    clippedVerticesItems[s + 3] = light.g;\n                    clippedVerticesItems[s + 4] = light.b;\n                    clippedVerticesItems[s + 5] = light.a;\n                    if (!twoColor) {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = x2;\n                        clippedVerticesItems[s + 9] = y2;\n                        clippedVerticesItems[s + 10] = light.r;\n                        clippedVerticesItems[s + 11] = light.g;\n                        clippedVerticesItems[s + 12] = light.b;\n                        clippedVerticesItems[s + 13] = light.a;\n                        clippedVerticesItems[s + 14] = u2;\n                        clippedVerticesItems[s + 15] = v2;\n                        clippedVerticesItems[s + 16] = x3;\n                        clippedVerticesItems[s + 17] = y3;\n                        clippedVerticesItems[s + 18] = light.r;\n                        clippedVerticesItems[s + 19] = light.g;\n                        clippedVerticesItems[s + 20] = light.b;\n                        clippedVerticesItems[s + 21] = light.a;\n                        clippedVerticesItems[s + 22] = u3;\n                        clippedVerticesItems[s + 23] = v3;\n                    }\n                    else {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = dark.r;\n                        clippedVerticesItems[s + 9] = dark.g;\n                        clippedVerticesItems[s + 10] = dark.b;\n                        clippedVerticesItems[s + 11] = dark.a;\n                        clippedVerticesItems[s + 12] = x2;\n                        clippedVerticesItems[s + 13] = y2;\n                        clippedVerticesItems[s + 14] = light.r;\n                        clippedVerticesItems[s + 15] = light.g;\n                        clippedVerticesItems[s + 16] = light.b;\n                        clippedVerticesItems[s + 17] = light.a;\n                        clippedVerticesItems[s + 18] = u2;\n                        clippedVerticesItems[s + 19] = v2;\n                        clippedVerticesItems[s + 20] = dark.r;\n                        clippedVerticesItems[s + 21] = dark.g;\n                        clippedVerticesItems[s + 22] = dark.b;\n                        clippedVerticesItems[s + 23] = dark.a;\n                        clippedVerticesItems[s + 24] = x3;\n                        clippedVerticesItems[s + 25] = y3;\n                        clippedVerticesItems[s + 26] = light.r;\n                        clippedVerticesItems[s + 27] = light.g;\n                        clippedVerticesItems[s + 28] = light.b;\n                        clippedVerticesItems[s + 29] = light.a;\n                        clippedVerticesItems[s + 30] = u3;\n                        clippedVerticesItems[s + 31] = v3;\n                        clippedVerticesItems[s + 32] = dark.r;\n                        clippedVerticesItems[s + 33] = dark.g;\n                        clippedVerticesItems[s + 34] = dark.b;\n                        clippedVerticesItems[s + 35] = dark.a;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3);\n                    clippedTrianglesItems[s] = index;\n                    clippedTrianglesItems[s + 1] = (index + 1);\n                    clippedTrianglesItems[s + 2] = (index + 2);\n                    index += 3;\n                    continue outer;\n                }\n            }\n        }\n    }\n    /** Clips the input triangle against the convex, clockwise clipping area. If the triangle lies entirely within the clipping\n     * area, false is returned. The clipping area must duplicate the first vertex at the end of the vertices list. */\n    clip(x1, y1, x2, y2, x3, y3, clippingArea, output) {\n        let originalOutput = output;\n        let clipped = false;\n        // Avoid copy at the end.\n        let input;\n        if (clippingArea.length % 4 >= 2) {\n            input = output;\n            output = this.scratch;\n        }\n        else\n            input = this.scratch;\n        input.length = 0;\n        input.push(x1);\n        input.push(y1);\n        input.push(x2);\n        input.push(y2);\n        input.push(x3);\n        input.push(y3);\n        input.push(x1);\n        input.push(y1);\n        output.length = 0;\n        let clippingVertices = clippingArea;\n        let clippingVerticesLast = clippingArea.length - 4;\n        for (let i = 0;; i += 2) {\n            let edgeX = clippingVertices[i], edgeY = clippingVertices[i + 1];\n            let edgeX2 = clippingVertices[i + 2], edgeY2 = clippingVertices[i + 3];\n            let deltaX = edgeX - edgeX2, deltaY = edgeY - edgeY2;\n            let inputVertices = input;\n            let inputVerticesLength = input.length - 2, outputStart = output.length;\n            for (let ii = 0; ii < inputVerticesLength; ii += 2) {\n                let inputX = inputVertices[ii], inputY = inputVertices[ii + 1];\n                let inputX2 = inputVertices[ii + 2], inputY2 = inputVertices[ii + 3];\n                let side2 = deltaX * (inputY2 - edgeY2) - deltaY * (inputX2 - edgeX2) > 0;\n                if (deltaX * (inputY - edgeY2) - deltaY * (inputX - edgeX2) > 0) {\n                    if (side2) { // v1 inside, v2 inside\n                        output.push(inputX2);\n                        output.push(inputY2);\n                        continue;\n                    }\n                    // v1 inside, v2 outside\n                    let c0 = inputY2 - inputY, c2 = inputX2 - inputX;\n                    let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n                    if (Math.abs(s) > 0.000001) {\n                        let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n                        output.push(edgeX + (edgeX2 - edgeX) * ua);\n                        output.push(edgeY + (edgeY2 - edgeY) * ua);\n                    }\n                    else {\n                        output.push(edgeX);\n                        output.push(edgeY);\n                    }\n                }\n                else if (side2) { // v1 outside, v2 inside\n                    let c0 = inputY2 - inputY, c2 = inputX2 - inputX;\n                    let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n                    if (Math.abs(s) > 0.000001) {\n                        let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n                        output.push(edgeX + (edgeX2 - edgeX) * ua);\n                        output.push(edgeY + (edgeY2 - edgeY) * ua);\n                    }\n                    else {\n                        output.push(edgeX);\n                        output.push(edgeY);\n                    }\n                    output.push(inputX2);\n                    output.push(inputY2);\n                }\n                clipped = true;\n            }\n            if (outputStart == output.length) { // All edges outside.\n                originalOutput.length = 0;\n                return true;\n            }\n            output.push(output[0]);\n            output.push(output[1]);\n            if (i == clippingVerticesLast)\n                break;\n            let temp = output;\n            output = input;\n            output.length = 0;\n            input = temp;\n        }\n        if (originalOutput != output) {\n            originalOutput.length = 0;\n            for (let i = 0, n = output.length - 2; i < n; i++)\n                originalOutput[i] = output[i];\n        }\n        else\n            originalOutput.length = originalOutput.length - 2;\n        return clipped;\n    }\n    static makeClockwise(polygon) {\n        let vertices = polygon;\n        let verticeslength = polygon.length;\n        let area = vertices[verticeslength - 2] * vertices[1] - vertices[0] * vertices[verticeslength - 1], p1x = 0, p1y = 0, p2x = 0, p2y = 0;\n        for (let i = 0, n = verticeslength - 3; i < n; i += 2) {\n            p1x = vertices[i];\n            p1y = vertices[i + 1];\n            p2x = vertices[i + 2];\n            p2y = vertices[i + 3];\n            area += p1x * p2y - p2x * p1y;\n        }\n        if (area < 0)\n            return;\n        for (let i = 0, lastX = verticeslength - 2, n = verticeslength >> 1; i < n; i += 2) {\n            let x = vertices[i], y = vertices[i + 1];\n            let other = lastX - i;\n            vertices[i] = vertices[other];\n            vertices[i + 1] = vertices[other + 1];\n            vertices[other] = x;\n            vertices[other + 1] = y;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, AttachmentTimeline, RGBATimeline, RGBTimeline, AlphaTimeline, RGBA2Timeline, RGB2Timeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline } from \"./Animation.js\";\nimport { BoneData, TransformMode } from \"./BoneData.js\";\nimport { EventData } from \"./EventData.js\";\nimport { Event } from \"./Event.js\";\nimport { IkConstraintData } from \"./IkConstraintData.js\";\nimport { PathConstraintData, PositionMode, SpacingMode, RotateMode } from \"./PathConstraintData.js\";\nimport { SkeletonData } from \"./SkeletonData.js\";\nimport { Skin } from \"./Skin.js\";\nimport { SlotData, BlendMode } from \"./SlotData.js\";\nimport { TransformConstraintData } from \"./TransformConstraintData.js\";\nimport { Utils, Color } from \"./Utils.js\";\nimport { Sequence, SequenceMode } from \"./attachments/Sequence.js\";\nimport { SequenceTimeline } from \"./Animation.js\";\n/** Loads skeleton data in the Spine JSON format.\n *\n * See [Spine JSON format](http://esotericsoftware.com/spine-json-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonJson {\n    attachmentLoader;\n    /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n     * runtime than were used in Spine.\n     *\n     * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n    scale = 1;\n    linkedMeshes = new Array();\n    constructor(attachmentLoader) {\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(json) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        let root = typeof (json) === \"string\" ? JSON.parse(json) : json;\n        // Skeleton\n        let skeletonMap = root.skeleton;\n        if (skeletonMap) {\n            skeletonData.hash = skeletonMap.hash;\n            skeletonData.version = skeletonMap.spine;\n            skeletonData.x = skeletonMap.x;\n            skeletonData.y = skeletonMap.y;\n            skeletonData.width = skeletonMap.width;\n            skeletonData.height = skeletonMap.height;\n            skeletonData.fps = skeletonMap.fps;\n            skeletonData.imagesPath = skeletonMap.images;\n        }\n        // Bones\n        if (root.bones) {\n            for (let i = 0; i < root.bones.length; i++) {\n                let boneMap = root.bones[i];\n                let parent = null;\n                let parentName = getValue(boneMap, \"parent\", null);\n                if (parentName)\n                    parent = skeletonData.findBone(parentName);\n                let data = new BoneData(skeletonData.bones.length, boneMap.name, parent);\n                data.length = getValue(boneMap, \"length\", 0) * scale;\n                data.x = getValue(boneMap, \"x\", 0) * scale;\n                data.y = getValue(boneMap, \"y\", 0) * scale;\n                data.rotation = getValue(boneMap, \"rotation\", 0);\n                data.scaleX = getValue(boneMap, \"scaleX\", 1);\n                data.scaleY = getValue(boneMap, \"scaleY\", 1);\n                data.shearX = getValue(boneMap, \"shearX\", 0);\n                data.shearY = getValue(boneMap, \"shearY\", 0);\n                data.transformMode = Utils.enumValue(TransformMode, getValue(boneMap, \"transform\", \"Normal\"));\n                data.skinRequired = getValue(boneMap, \"skin\", false);\n                let color = getValue(boneMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                skeletonData.bones.push(data);\n            }\n        }\n        // Slots.\n        if (root.slots) {\n            for (let i = 0; i < root.slots.length; i++) {\n                let slotMap = root.slots[i];\n                let boneData = skeletonData.findBone(slotMap.bone);\n                if (!boneData)\n                    throw new Error(`Couldn't find bone ${slotMap.bone} for slot ${slotMap.name}`);\n                let data = new SlotData(skeletonData.slots.length, slotMap.name, boneData);\n                let color = getValue(slotMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                let dark = getValue(slotMap, \"dark\", null);\n                if (dark)\n                    data.darkColor = Color.fromString(dark);\n                data.attachmentName = getValue(slotMap, \"attachment\", null);\n                data.blendMode = Utils.enumValue(BlendMode, getValue(slotMap, \"blend\", \"normal\"));\n                skeletonData.slots.push(data);\n            }\n        }\n        // IK constraints\n        if (root.ik) {\n            for (let i = 0; i < root.ik.length; i++) {\n                let constraintMap = root.ik[i];\n                let data = new IkConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let bone = skeletonData.findBone(constraintMap.bones[ii]);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${constraintMap.bones[ii]} for IK constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let target = skeletonData.findBone(constraintMap.target);\n                ;\n                if (!target)\n                    throw new Error(`Couldn't find target bone ${constraintMap.target} for IK constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.mix = getValue(constraintMap, \"mix\", 1);\n                data.softness = getValue(constraintMap, \"softness\", 0) * scale;\n                data.bendDirection = getValue(constraintMap, \"bendPositive\", true) ? 1 : -1;\n                data.compress = getValue(constraintMap, \"compress\", false);\n                data.stretch = getValue(constraintMap, \"stretch\", false);\n                data.uniform = getValue(constraintMap, \"uniform\", false);\n                skeletonData.ikConstraints.push(data);\n            }\n        }\n        // Transform constraints.\n        if (root.transform) {\n            for (let i = 0; i < root.transform.length; i++) {\n                let constraintMap = root.transform[i];\n                let data = new TransformConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let boneName = constraintMap.bones[ii];\n                    let bone = skeletonData.findBone(boneName);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${boneName} for transform constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let targetName = constraintMap.target;\n                let target = skeletonData.findBone(targetName);\n                if (!target)\n                    throw new Error(`Couldn't find target bone ${targetName} for transform constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.local = getValue(constraintMap, \"local\", false);\n                data.relative = getValue(constraintMap, \"relative\", false);\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.offsetX = getValue(constraintMap, \"x\", 0) * scale;\n                data.offsetY = getValue(constraintMap, \"y\", 0) * scale;\n                data.offsetScaleX = getValue(constraintMap, \"scaleX\", 0);\n                data.offsetScaleY = getValue(constraintMap, \"scaleY\", 0);\n                data.offsetShearY = getValue(constraintMap, \"shearY\", 0);\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                data.mixScaleX = getValue(constraintMap, \"mixScaleX\", 1);\n                data.mixScaleY = getValue(constraintMap, \"mixScaleY\", data.mixScaleX);\n                data.mixShearY = getValue(constraintMap, \"mixShearY\", 1);\n                skeletonData.transformConstraints.push(data);\n            }\n        }\n        // Path constraints.\n        if (root.path) {\n            for (let i = 0; i < root.path.length; i++) {\n                let constraintMap = root.path[i];\n                let data = new PathConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let boneName = constraintMap.bones[ii];\n                    let bone = skeletonData.findBone(boneName);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${boneName} for path constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let targetName = constraintMap.target;\n                let target = skeletonData.findSlot(targetName);\n                if (!target)\n                    throw new Error(`Couldn't find target slot ${targetName} for path constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.positionMode = Utils.enumValue(PositionMode, getValue(constraintMap, \"positionMode\", \"Percent\"));\n                data.spacingMode = Utils.enumValue(SpacingMode, getValue(constraintMap, \"spacingMode\", \"Length\"));\n                data.rotateMode = Utils.enumValue(RotateMode, getValue(constraintMap, \"rotateMode\", \"Tangent\"));\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.position = getValue(constraintMap, \"position\", 0);\n                if (data.positionMode == PositionMode.Fixed)\n                    data.position *= scale;\n                data.spacing = getValue(constraintMap, \"spacing\", 0);\n                if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                    data.spacing *= scale;\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                skeletonData.pathConstraints.push(data);\n            }\n        }\n        // Skins.\n        if (root.skins) {\n            for (let i = 0; i < root.skins.length; i++) {\n                let skinMap = root.skins[i];\n                let skin = new Skin(skinMap.name);\n                if (skinMap.bones) {\n                    for (let ii = 0; ii < skinMap.bones.length; ii++) {\n                        let boneName = skinMap.bones[ii];\n                        let bone = skeletonData.findBone(boneName);\n                        if (!bone)\n                            throw new Error(`Couldn't find bone ${boneName} for skin ${skinMap.name}.`);\n                        skin.bones.push(bone);\n                    }\n                }\n                if (skinMap.ik) {\n                    for (let ii = 0; ii < skinMap.ik.length; ii++) {\n                        let constraintName = skinMap.ik[ii];\n                        let constraint = skeletonData.findIkConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find IK constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                if (skinMap.transform) {\n                    for (let ii = 0; ii < skinMap.transform.length; ii++) {\n                        let constraintName = skinMap.transform[ii];\n                        let constraint = skeletonData.findTransformConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find transform constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                if (skinMap.path) {\n                    for (let ii = 0; ii < skinMap.path.length; ii++) {\n                        let constraintName = skinMap.path[ii];\n                        let constraint = skeletonData.findPathConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find path constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                for (let slotName in skinMap.attachments) {\n                    let slot = skeletonData.findSlot(slotName);\n                    if (!slot)\n                        throw new Error(`Couldn't find slot ${slotName} for skin ${skinMap.name}.`);\n                    let slotMap = skinMap.attachments[slotName];\n                    for (let entryName in slotMap) {\n                        let attachment = this.readAttachment(slotMap[entryName], skin, slot.index, entryName, skeletonData);\n                        if (attachment)\n                            skin.setAttachment(slot.index, entryName, attachment);\n                    }\n                }\n                skeletonData.skins.push(skin);\n                if (skin.name == \"default\")\n                    skeletonData.defaultSkin = skin;\n            }\n        }\n        // Linked meshes.\n        for (let i = 0, n = this.linkedMeshes.length; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n            if (!skin)\n                throw new Error(`Skin not found: ${linkedMesh.skin}`);\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            if (!parent)\n                throw new Error(`Parent mesh not found: ${linkedMesh.parent}`);\n            linkedMesh.mesh.timelineAttachment = linkedMesh.inheritTimeline ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            if (linkedMesh.mesh.region != null)\n                linkedMesh.mesh.updateRegion();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        if (root.events) {\n            for (let eventName in root.events) {\n                let eventMap = root.events[eventName];\n                let data = new EventData(eventName);\n                data.intValue = getValue(eventMap, \"int\", 0);\n                data.floatValue = getValue(eventMap, \"float\", 0);\n                data.stringValue = getValue(eventMap, \"string\", \"\");\n                data.audioPath = getValue(eventMap, \"audio\", null);\n                if (data.audioPath) {\n                    data.volume = getValue(eventMap, \"volume\", 1);\n                    data.balance = getValue(eventMap, \"balance\", 0);\n                }\n                skeletonData.events.push(data);\n            }\n        }\n        // Animations.\n        if (root.animations) {\n            for (let animationName in root.animations) {\n                let animationMap = root.animations[animationName];\n                this.readAnimation(animationMap, animationName, skeletonData);\n            }\n        }\n        return skeletonData;\n    }\n    readAttachment(map, skin, slotIndex, name, skeletonData) {\n        let scale = this.scale;\n        name = getValue(map, \"name\", name);\n        switch (getValue(map, \"type\", \"region\")) {\n            case \"region\": {\n                let path = getValue(map, \"path\", name);\n                let sequence = this.readSequence(getValue(map, \"sequence\", null));\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path, sequence);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = getValue(map, \"x\", 0) * scale;\n                region.y = getValue(map, \"y\", 0) * scale;\n                region.scaleX = getValue(map, \"scaleX\", 1);\n                region.scaleY = getValue(map, \"scaleY\", 1);\n                region.rotation = getValue(map, \"rotation\", 0);\n                region.width = map.width * scale;\n                region.height = map.height * scale;\n                region.sequence = sequence;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    region.color.setFromString(color);\n                if (region.region != null)\n                    region.updateRegion();\n                return region;\n            }\n            case \"boundingbox\": {\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                this.readVertices(map, box, map.vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    box.color.setFromString(color);\n                return box;\n            }\n            case \"mesh\":\n            case \"linkedmesh\": {\n                let path = getValue(map, \"path\", name);\n                let sequence = this.readSequence(getValue(map, \"sequence\", null));\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    mesh.color.setFromString(color);\n                mesh.width = getValue(map, \"width\", 0) * scale;\n                mesh.height = getValue(map, \"height\", 0) * scale;\n                mesh.sequence = sequence;\n                let parent = getValue(map, \"parent\", null);\n                if (parent) {\n                    this.linkedMeshes.push(new LinkedMesh(mesh, getValue(map, \"skin\", null), slotIndex, parent, getValue(map, \"timelines\", true)));\n                    return mesh;\n                }\n                let uvs = map.uvs;\n                this.readVertices(map, mesh, uvs.length);\n                mesh.triangles = map.triangles;\n                mesh.regionUVs = uvs;\n                if (mesh.region != null)\n                    mesh.updateRegion();\n                mesh.edges = getValue(map, \"edges\", null);\n                mesh.hullLength = getValue(map, \"hull\", 0) * 2;\n                return mesh;\n            }\n            case \"path\": {\n                let path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = getValue(map, \"closed\", false);\n                path.constantSpeed = getValue(map, \"constantSpeed\", true);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, path, vertexCount << 1);\n                let lengths = Utils.newArray(vertexCount / 3, 0);\n                for (let i = 0; i < map.lengths.length; i++)\n                    lengths[i] = map.lengths[i] * scale;\n                path.lengths = lengths;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    path.color.setFromString(color);\n                return path;\n            }\n            case \"point\": {\n                let point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = getValue(map, \"x\", 0) * scale;\n                point.y = getValue(map, \"y\", 0) * scale;\n                point.rotation = getValue(map, \"rotation\", 0);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    point.color.setFromString(color);\n                return point;\n            }\n            case \"clipping\": {\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                let end = getValue(map, \"end\", null);\n                if (end)\n                    clip.endSlot = skeletonData.findSlot(end);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, clip, vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    clip.color.setFromString(color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readSequence(map) {\n        if (map == null)\n            return null;\n        let sequence = new Sequence(getValue(map, \"count\", 0));\n        sequence.start = getValue(map, \"start\", 1);\n        sequence.digits = getValue(map, \"digits\", 0);\n        sequence.setupIndex = getValue(map, \"setup\", 0);\n        return sequence;\n    }\n    readVertices(map, attachment, verticesLength) {\n        let scale = this.scale;\n        attachment.worldVerticesLength = verticesLength;\n        let vertices = map.vertices;\n        if (verticesLength == vertices.length) {\n            let scaledVertices = Utils.toFloatArray(vertices);\n            if (scale != 1) {\n                for (let i = 0, n = vertices.length; i < n; i++)\n                    scaledVertices[i] *= scale;\n            }\n            attachment.vertices = scaledVertices;\n            return;\n        }\n        let weights = new Array();\n        let bones = new Array();\n        for (let i = 0, n = vertices.length; i < n;) {\n            let boneCount = vertices[i++];\n            bones.push(boneCount);\n            for (let nn = i + boneCount * 4; i < nn; i += 4) {\n                bones.push(vertices[i]);\n                weights.push(vertices[i + 1] * scale);\n                weights.push(vertices[i + 2] * scale);\n                weights.push(vertices[i + 3]);\n            }\n        }\n        attachment.bones = bones;\n        attachment.vertices = Utils.toFloatArray(weights);\n    }\n    readAnimation(map, name, skeletonData) {\n        let scale = this.scale;\n        let timelines = new Array();\n        // Slot timelines.\n        if (map.slots) {\n            for (let slotName in map.slots) {\n                let slotMap = map.slots[slotName];\n                let slot = skeletonData.findSlot(slotName);\n                if (!slot)\n                    throw new Error(\"Slot not found: \" + slotName);\n                let slotIndex = slot.index;\n                for (let timelineName in slotMap) {\n                    let timelineMap = slotMap[timelineName];\n                    if (!timelineMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName == \"attachment\") {\n                        let timeline = new AttachmentTimeline(frames, slotIndex);\n                        for (let frame = 0; frame < frames; frame++) {\n                            let keyMap = timelineMap[frame];\n                            timeline.setFrame(frame, getValue(keyMap, \"time\", 0), getValue(keyMap, \"name\", null));\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgba\") {\n                        let timeline = new RGBATimeline(frames, frames << 2, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb\") {\n                        let timeline = new RGBTimeline(frames, frames * 3, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"alpha\") {\n                        timelines.push(readTimeline1(timelineMap, new AlphaTimeline(frames, frames, slotIndex), 0, 1));\n                    }\n                    else if (timelineName == \"rgba2\") {\n                        let timeline = new RGBA2Timeline(frames, frames * 7, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 6, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb2\") {\n                        let timeline = new RGB2Timeline(frames, frames * 6, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        if (map.bones) {\n            for (let boneName in map.bones) {\n                let boneMap = map.bones[boneName];\n                let bone = skeletonData.findBone(boneName);\n                if (!bone)\n                    throw new Error(\"Bone not found: \" + boneName);\n                let boneIndex = bone.index;\n                for (let timelineName in boneMap) {\n                    let timelineMap = boneMap[timelineName];\n                    let frames = timelineMap.length;\n                    if (frames == 0)\n                        continue;\n                    if (timelineName === \"rotate\") {\n                        timelines.push(readTimeline1(timelineMap, new RotateTimeline(frames, frames, boneIndex), 0, 1));\n                    }\n                    else if (timelineName === \"translate\") {\n                        let timeline = new TranslateTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, scale));\n                    }\n                    else if (timelineName === \"translatex\") {\n                        let timeline = new TranslateXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"translatey\") {\n                        let timeline = new TranslateYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"scale\") {\n                        let timeline = new ScaleTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 1, 1));\n                    }\n                    else if (timelineName === \"scalex\") {\n                        let timeline = new ScaleXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"scaley\") {\n                        let timeline = new ScaleYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"shear\") {\n                        let timeline = new ShearTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, 1));\n                    }\n                    else if (timelineName === \"shearx\") {\n                        let timeline = new ShearXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                    else if (timelineName === \"sheary\") {\n                        let timeline = new ShearYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                }\n            }\n        }\n        // IK constraint timelines.\n        if (map.ik) {\n            for (let constraintName in map.ik) {\n                let constraintMap = map.ik[constraintName];\n                let keyMap = constraintMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findIkConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"IK Constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.ikConstraints.indexOf(constraint);\n                let timeline = new IkConstraintTimeline(constraintMap.length, constraintMap.length << 1, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mix = getValue(keyMap, \"mix\", 1);\n                let softness = getValue(keyMap, \"softness\", 0) * scale;\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mix, softness, getValue(keyMap, \"bendPositive\", true) ? 1 : -1, getValue(keyMap, \"compress\", false), getValue(keyMap, \"stretch\", false));\n                    let nextMap = constraintMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mix2 = getValue(nextMap, \"mix\", 1);\n                    let softness2 = getValue(nextMap, \"softness\", 0) * scale;\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mix, mix2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, softness, softness2, scale);\n                    }\n                    time = time2;\n                    mix = mix2;\n                    softness = softness2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Transform constraint timelines.\n        if (map.transform) {\n            for (let constraintName in map.transform) {\n                let timelineMap = map.transform[constraintName];\n                let keyMap = timelineMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findTransformConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"Transform constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.transformConstraints.indexOf(constraint);\n                let timeline = new TransformConstraintTimeline(timelineMap.length, timelineMap.length * 6, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                let mixX = getValue(keyMap, \"mixX\", 1);\n                let mixY = getValue(keyMap, \"mixY\", mixX);\n                let mixScaleX = getValue(keyMap, \"mixScaleX\", 1);\n                let mixScaleY = getValue(keyMap, \"mixScaleY\", mixScaleX);\n                let mixShearY = getValue(keyMap, \"mixShearY\", 1);\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                    let nextMap = timelineMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                    let mixX2 = getValue(nextMap, \"mixX\", 1);\n                    let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                    let mixScaleX2 = getValue(nextMap, \"mixScaleX\", 1);\n                    let mixScaleY2 = getValue(nextMap, \"mixScaleY\", mixScaleX2);\n                    let mixShearY2 = getValue(nextMap, \"mixShearY\", 1);\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                    }\n                    time = time2;\n                    mixRotate = mixRotate2;\n                    mixX = mixX2;\n                    mixY = mixY2;\n                    mixScaleX = mixScaleX2;\n                    mixScaleY = mixScaleY2;\n                    mixScaleX = mixScaleX2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Path constraint timelines.\n        if (map.path) {\n            for (let constraintName in map.path) {\n                let constraintMap = map.path[constraintName];\n                let constraint = skeletonData.findPathConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"Path constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.pathConstraints.indexOf(constraint);\n                for (let timelineName in constraintMap) {\n                    let timelineMap = constraintMap[timelineName];\n                    let keyMap = timelineMap[0];\n                    if (!keyMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName === \"position\") {\n                        let timeline = new PathConstraintPositionTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.positionMode == PositionMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"spacing\") {\n                        let timeline = new PathConstraintSpacingTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.spacingMode == SpacingMode.Length || constraint.spacingMode == SpacingMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"mix\") {\n                        let timeline = new PathConstraintMixTimeline(frames, frames * 3, constraintIndex);\n                        let time = getValue(keyMap, \"time\", 0);\n                        let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                        let mixX = getValue(keyMap, \"mixX\", 1);\n                        let mixY = getValue(keyMap, \"mixY\", mixX);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                            let mixX2 = getValue(nextMap, \"mixX\", 1);\n                            let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Attachment timelines.\n        if (map.attachments) {\n            for (let attachmentsName in map.attachments) {\n                let attachmentsMap = map.attachments[attachmentsName];\n                let skin = skeletonData.findSkin(attachmentsName);\n                if (!skin)\n                    throw new Error(\"Skin not found: \" + attachmentsName);\n                for (let slotMapName in attachmentsMap) {\n                    let slotMap = attachmentsMap[slotMapName];\n                    let slot = skeletonData.findSlot(slotMapName);\n                    if (!slot)\n                        throw new Error(\"Slot not found: \" + slotMapName);\n                    let slotIndex = slot.index;\n                    for (let attachmentMapName in slotMap) {\n                        let attachmentMap = slotMap[attachmentMapName];\n                        let attachment = skin.getAttachment(slotIndex, attachmentMapName);\n                        for (let timelineMapName in attachmentMap) {\n                            let timelineMap = attachmentMap[timelineMapName];\n                            let keyMap = timelineMap[0];\n                            if (!keyMap)\n                                continue;\n                            if (timelineMapName == \"deform\") {\n                                let weighted = attachment.bones;\n                                let vertices = attachment.vertices;\n                                let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                                let timeline = new DeformTimeline(timelineMap.length, timelineMap.length, slotIndex, attachment);\n                                let time = getValue(keyMap, \"time\", 0);\n                                for (let frame = 0, bezier = 0;; frame++) {\n                                    let deform;\n                                    let verticesValue = getValue(keyMap, \"vertices\", null);\n                                    if (!verticesValue)\n                                        deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                                    else {\n                                        deform = Utils.newFloatArray(deformLength);\n                                        let start = getValue(keyMap, \"offset\", 0);\n                                        Utils.arrayCopy(verticesValue, 0, deform, start, verticesValue.length);\n                                        if (scale != 1) {\n                                            for (let i = start, n = i + verticesValue.length; i < n; i++)\n                                                deform[i] *= scale;\n                                        }\n                                        if (!weighted) {\n                                            for (let i = 0; i < deformLength; i++)\n                                                deform[i] += vertices[i];\n                                        }\n                                    }\n                                    timeline.setFrame(frame, time, deform);\n                                    let nextMap = timelineMap[frame + 1];\n                                    if (!nextMap) {\n                                        timeline.shrink(bezier);\n                                        break;\n                                    }\n                                    let time2 = getValue(nextMap, \"time\", 0);\n                                    let curve = keyMap.curve;\n                                    if (curve)\n                                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, 0, 1, 1);\n                                    time = time2;\n                                    keyMap = nextMap;\n                                }\n                                timelines.push(timeline);\n                            }\n                            else if (timelineMapName == \"sequence\") {\n                                let timeline = new SequenceTimeline(timelineMap.length, slotIndex, attachment);\n                                let lastDelay = 0;\n                                for (let frame = 0; frame < timelineMap.length; frame++) {\n                                    let delay = getValue(keyMap, \"delay\", lastDelay);\n                                    let time = getValue(keyMap, \"time\", 0);\n                                    let mode = SequenceMode[getValue(keyMap, \"mode\", \"hold\")];\n                                    let index = getValue(keyMap, \"index\", 0);\n                                    timeline.setFrame(frame, time, mode, index, delay);\n                                    lastDelay = delay;\n                                    keyMap = timelineMap[frame + 1];\n                                }\n                                timelines.push(timeline);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // Draw order timelines.\n        if (map.drawOrder) {\n            let timeline = new DrawOrderTimeline(map.drawOrder.length);\n            let slotCount = skeletonData.slots.length;\n            let frame = 0;\n            for (let i = 0; i < map.drawOrder.length; i++, frame++) {\n                let drawOrderMap = map.drawOrder[i];\n                let drawOrder = null;\n                let offsets = getValue(drawOrderMap, \"offsets\", null);\n                if (offsets) {\n                    drawOrder = Utils.newArray(slotCount, -1);\n                    let unchanged = Utils.newArray(slotCount - offsets.length, 0);\n                    let originalIndex = 0, unchangedIndex = 0;\n                    for (let ii = 0; ii < offsets.length; ii++) {\n                        let offsetMap = offsets[ii];\n                        let slot = skeletonData.findSlot(offsetMap.slot);\n                        if (!slot)\n                            throw new Error(\"Slot not found: \" + slot);\n                        let slotIndex = slot.index;\n                        // Collect unchanged items.\n                        while (originalIndex != slotIndex)\n                            unchanged[unchangedIndex++] = originalIndex++;\n                        // Set changed items.\n                        drawOrder[originalIndex + offsetMap.offset] = originalIndex++;\n                    }\n                    // Collect remaining unchanged items.\n                    while (originalIndex < slotCount)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Fill in unchanged items.\n                    for (let ii = slotCount - 1; ii >= 0; ii--)\n                        if (drawOrder[ii] == -1)\n                            drawOrder[ii] = unchanged[--unchangedIndex];\n                }\n                timeline.setFrame(frame, getValue(drawOrderMap, \"time\", 0), drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timelines.\n        if (map.events) {\n            let timeline = new EventTimeline(map.events.length);\n            let frame = 0;\n            for (let i = 0; i < map.events.length; i++, frame++) {\n                let eventMap = map.events[i];\n                let eventData = skeletonData.findEvent(eventMap.name);\n                if (!eventData)\n                    throw new Error(\"Event not found: \" + eventMap.name);\n                let event = new Event(Utils.toSinglePrecision(getValue(eventMap, \"time\", 0)), eventData);\n                event.intValue = getValue(eventMap, \"int\", eventData.intValue);\n                event.floatValue = getValue(eventMap, \"float\", eventData.floatValue);\n                event.stringValue = getValue(eventMap, \"string\", eventData.stringValue);\n                if (event.data.audioPath) {\n                    event.volume = getValue(eventMap, \"volume\", 1);\n                    event.balance = getValue(eventMap, \"balance\", 0);\n                }\n                timeline.setFrame(frame, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        skeletonData.animations.push(new Animation(name, timelines, duration));\n    }\n}\nclass LinkedMesh {\n    parent;\n    skin;\n    slotIndex;\n    mesh;\n    inheritTimeline;\n    constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skin = skin;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritTimeline = inheritDeform;\n    }\n}\nfunction readTimeline1(keys, timeline, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value = getValue(keyMap, \"value\", defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let value2 = getValue(nextMap, \"value\", defaultValue) * scale;\n        if (keyMap.curve)\n            bezier = readCurve(keyMap.curve, timeline, bezier, frame, 0, time, time2, value, value2, scale);\n        time = time2;\n        value = value2;\n        keyMap = nextMap;\n    }\n}\nfunction readTimeline2(keys, timeline, name1, name2, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value1 = getValue(keyMap, name1, defaultValue) * scale;\n    let value2 = getValue(keyMap, name2, defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let nvalue1 = getValue(nextMap, name1, defaultValue) * scale;\n        let nvalue2 = getValue(nextMap, name2, defaultValue) * scale;\n        let curve = keyMap.curve;\n        if (curve) {\n            bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, value1, nvalue1, scale);\n            bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n        keyMap = nextMap;\n    }\n}\nfunction readCurve(curve, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    if (curve == \"stepped\") {\n        timeline.setStepped(frame);\n        return bezier;\n    }\n    let i = value << 2;\n    let cx1 = curve[i];\n    let cy1 = curve[i + 1] * scale;\n    let cx2 = curve[i + 2];\n    let cy2 = curve[i + 3] * scale;\n    timeline.setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2);\n    return bezier + 1;\n}\nfunction getValue(map, property, defaultValue) {\n    return map[property] !== undefined ? map[property] : defaultValue;\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n(() => {\n    if (typeof Math.fround === \"undefined\") {\n        Math.fround = (function (array) {\n            return function (x) {\n                return array[0] = x, array[0];\n            };\n        })(new Float32Array(1));\n    }\n})();\nexport {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWZpbGxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3BvbHlmaWxscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsQ0FBQyxHQUFHLEVBQUU7SUFDTCxJQUFJLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxXQUFXLEVBQUU7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLFVBQVUsS0FBSztZQUM3QixPQUFPLFVBQVUsQ0FBUztnQkFDekIsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3hCO0FBQ0YsQ0FBQyxDQUFDLEVBQUUsQ0FBQyJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class ManagedWebGLRenderingContext {\n    canvas;\n    gl;\n    restorables = new Array();\n    constructor(canvasOrContext, contextConfig = { alpha: \"true\" }) {\n        if (!((canvasOrContext instanceof WebGLRenderingContext) || (typeof WebGL2RenderingContext !== 'undefined' && canvasOrContext instanceof WebGL2RenderingContext))) {\n            let canvas = canvasOrContext;\n            this.gl = (canvas.getContext(\"webgl2\", contextConfig) || canvas.getContext(\"webgl\", contextConfig));\n            this.canvas = canvas;\n            canvas.addEventListener(\"webglcontextlost\", (e) => {\n                let event = e;\n                if (e)\n                    e.preventDefault();\n            });\n            canvas.addEventListener(\"webglcontextrestored\", (e) => {\n                for (let i = 0, n = this.restorables.length; i < n; i++)\n                    this.restorables[i].restore();\n            });\n        }\n        else {\n            this.gl = canvasOrContext;\n            this.canvas = this.gl.canvas;\n        }\n    }\n    addRestorable(restorable) {\n        this.restorables.push(restorable);\n    }\n    removeRestorable(restorable) {\n        let index = this.restorables.indexOf(restorable);\n        if (index > -1)\n            this.restorables.splice(index, 1);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViR0wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvV2ViR0wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSS9FLE1BQU0sT0FBTyw0QkFBNEI7SUFDakMsTUFBTSxDQUFzQztJQUM1QyxFQUFFLENBQXdCO0lBQ3pCLFdBQVcsR0FBRyxJQUFJLEtBQUssRUFBYyxDQUFDO0lBRTlDLFlBQWEsZUFBMEQsRUFBRSxnQkFBcUIsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFO1FBQzlHLElBQUksQ0FBQyxDQUFDLENBQUMsZUFBZSxZQUFZLHFCQUFxQixDQUFDLElBQUksQ0FBQyxPQUFPLHNCQUFzQixLQUFLLFdBQVcsSUFBSSxlQUFlLFlBQVksc0JBQXNCLENBQUMsQ0FBQyxFQUFFO1lBQ2xLLElBQUksTUFBTSxHQUFzQixlQUFlLENBQUM7WUFDaEQsSUFBSSxDQUFDLEVBQUUsR0FBMEIsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxhQUFhLENBQUMsSUFBSSxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQzNILElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1lBQ3JCLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLENBQU0sRUFBRSxFQUFFO2dCQUN0RCxJQUFJLEtBQUssR0FBc0IsQ0FBQyxDQUFDO2dCQUNqQyxJQUFJLENBQUM7b0JBQUUsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQixFQUFFLENBQUMsQ0FBTSxFQUFFLEVBQUU7Z0JBQzFELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRTtvQkFDdEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNoQyxDQUFDLENBQUMsQ0FBQztTQUNIO2FBQU07WUFDTixJQUFJLENBQUMsRUFBRSxHQUFHLGVBQWUsQ0FBQztZQUMxQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO1NBQzdCO0lBQ0YsQ0FBQztJQUVELGFBQWEsQ0FBRSxVQUFzQjtRQUNwQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsZ0JBQWdCLENBQUUsVUFBc0I7UUFDdkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDakQsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1lBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Texture, TextureFilter } from \"@esotericsoftware/spine-core\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL.js\";\nexport class GLTexture extends Texture {\n    context;\n    texture = null;\n    boundUnit = 0;\n    useMipMaps = false;\n    static DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL = false;\n    constructor(context, image, useMipMaps = false) {\n        super(image);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.useMipMaps = useMipMaps;\n        this.restore();\n        this.context.addRestorable(this);\n    }\n    setFilters(minFilter, magFilter) {\n        let gl = this.context.gl;\n        this.bind();\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GLTexture.validateMagFilter(magFilter));\n        this.useMipMaps = GLTexture.usesMipMaps(minFilter);\n        if (this.useMipMaps)\n            gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    static validateMagFilter(magFilter) {\n        switch (magFilter) {\n            case TextureFilter.MipMap:\n            case TextureFilter.MipMapLinearLinear:\n            case TextureFilter.MipMapLinearNearest:\n            case TextureFilter.MipMapNearestLinear:\n            case TextureFilter.MipMapNearestNearest:\n                return TextureFilter.Linear;\n            default:\n                return magFilter;\n        }\n    }\n    static usesMipMaps(filter) {\n        switch (filter) {\n            case TextureFilter.MipMap:\n            case TextureFilter.MipMapLinearLinear:\n            case TextureFilter.MipMapLinearNearest:\n            case TextureFilter.MipMapNearestLinear:\n            case TextureFilter.MipMapNearestNearest:\n                return true;\n            default:\n                return false;\n        }\n    }\n    setWraps(uWrap, vWrap) {\n        let gl = this.context.gl;\n        this.bind();\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, uWrap);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, vWrap);\n    }\n    update(useMipMaps) {\n        let gl = this.context.gl;\n        if (!this.texture)\n            this.texture = this.context.gl.createTexture();\n        this.bind();\n        if (GLTexture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL)\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, useMipMaps ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        if (useMipMaps)\n            gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    restore() {\n        this.texture = null;\n        this.update(this.useMipMaps);\n    }\n    bind(unit = 0) {\n        let gl = this.context.gl;\n        this.boundUnit = unit;\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    }\n    unbind() {\n        let gl = this.context.gl;\n        gl.activeTexture(gl.TEXTURE0 + this.boundUnit);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        gl.deleteTexture(this.texture);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR0xUZXh0dXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0dMVGV4dHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLE9BQU8sRUFBMEIsYUFBYSxFQUFlLE1BQU0sOEJBQThCLENBQUM7QUFDM0csT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTFELE1BQU0sT0FBTyxTQUFVLFNBQVEsT0FBTztJQUNyQyxPQUFPLENBQStCO0lBQzlCLE9BQU8sR0FBd0IsSUFBSSxDQUFDO0lBQ3BDLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFDZCxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBRXBCLE1BQU0sQ0FBQyx3Q0FBd0MsR0FBRyxLQUFLLENBQUM7SUFFL0QsWUFBYSxPQUE2RCxFQUFFLEtBQXFDLEVBQUUsYUFBc0IsS0FBSztRQUM3SSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sWUFBWSw0QkFBNEIsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLDRCQUE0QixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JILElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxVQUFVLENBQUUsU0FBd0IsRUFBRSxTQUF3QjtRQUM3RCxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDWixFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixFQUFF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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { M00, M01, M02, M03, M10, M11, M12, M13, M20, M21, M22, M23, M30, M31, M32, M33 } from \"./Matrix4.js\";\nexport class Vector3 {\n    x = 0;\n    y = 0;\n    z = 0;\n    constructor(x = 0, y = 0, z = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    setFrom(v) {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        return this;\n    }\n    set(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n    }\n    sub(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return this;\n    }\n    scale(s) {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n        return this;\n    }\n    normalize() {\n        let len = this.length();\n        if (len == 0)\n            return this;\n        len = 1 / len;\n        this.x *= len;\n        this.y *= len;\n        this.z *= len;\n        return this;\n    }\n    cross(v) {\n        return this.set(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n    }\n    multiply(matrix) {\n        let l_mat = matrix.values;\n        return this.set(this.x * l_mat[M00] + this.y * l_mat[M01] + this.z * l_mat[M02] + l_mat[M03], this.x * l_mat[M10] + this.y * l_mat[M11] + this.z * l_mat[M12] + l_mat[M13], this.x * l_mat[M20] + this.y * l_mat[M21] + this.z * l_mat[M22] + l_mat[M23]);\n    }\n    project(matrix) {\n        let l_mat = matrix.values;\n        let l_w = 1 / (this.x * l_mat[M30] + this.y * l_mat[M31] + this.z * l_mat[M32] + l_mat[M33]);\n        return this.set((this.x * l_mat[M00] + this.y * l_mat[M01] + this.z * l_mat[M02] + l_mat[M03]) * l_w, (this.x * l_mat[M10] + this.y * l_mat[M11] + this.z * l_mat[M12] + l_mat[M13]) * l_w, (this.x * l_mat[M20] + this.y * l_mat[M21] + this.z * l_mat[M22] + l_mat[M23]) * l_w);\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    distance(v) {\n        let a = v.x - this.x;\n        let b = v.y - this.y;\n        let c = v.z - this.z;\n        return Math.sqrt(a * a + b * b + c * c);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVjdG9yMy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9WZWN0b3IzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQVcsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXZILE1BQU0sT0FBTyxPQUFPO0lBQ25CLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDTixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVOLFlBQWEsSUFBWSxDQUFDLEVBQUUsSUFBWSxDQUFDLEVBQUUsSUFBWSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNaLENBQUM7SUFFRCxPQUFPLENBQUUsQ0FBVTtRQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDYixPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxHQUFHLENBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO1FBQ25DLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELEdBQUcsQ0FBRSxDQUFVO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsR0FBRyxDQUFFLENBQVU7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDZCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxLQUFLLENBQUUsQ0FBUztRQUNmLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNaLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELFNBQVM7UUFDUixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDeEIsSUFBSSxHQUFHLElBQUksQ0FBQztZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQzFCLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUM7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQztRQUNkLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDO1FBQ2QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsS0FBSyxDQUFFLENBQVU7UUFDaEIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDdkcsQ0FBQztJQUVELFFBQVEsQ0FBRSxNQUFlO1FBQ3hCLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDMUIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFDM0YsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUM1RSxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUQsT0FBTyxDQUFFLE1BQWU7UUFDdkIsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM3RixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEVBQ25HLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUNwRixDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7SUFFRCxHQUFHLENBQUUsQ0FBVTtRQUNkLE9BQU8sSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELE1BQU07UUFDTCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsUUFBUSxDQUFFLENBQVU7UUFDbkIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDckIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDekMsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector3 } from \"./Vector3.js\";\nexport const M00 = 0;\nexport const M01 = 4;\nexport const M02 = 8;\nexport const M03 = 12;\nexport const M10 = 1;\nexport const M11 = 5;\nexport const M12 = 9;\nexport const M13 = 13;\nexport const M20 = 2;\nexport const M21 = 6;\nexport const M22 = 10;\nexport const M23 = 14;\nexport const M30 = 3;\nexport const M31 = 7;\nexport const M32 = 11;\nexport const M33 = 15;\nexport class Matrix4 {\n    temp = new Float32Array(16);\n    values = new Float32Array(16);\n    static xAxis = new Vector3();\n    static yAxis = new Vector3();\n    static zAxis = new Vector3();\n    static tmpMatrix = new Matrix4();\n    constructor() {\n        let v = this.values;\n        v[M00] = 1;\n        v[M11] = 1;\n        v[M22] = 1;\n        v[M33] = 1;\n    }\n    set(values) {\n        this.values.set(values);\n        return this;\n    }\n    transpose() {\n        let t = this.temp;\n        let v = this.values;\n        t[M00] = v[M00];\n        t[M01] = v[M10];\n        t[M02] = v[M20];\n        t[M03] = v[M30];\n        t[M10] = v[M01];\n        t[M11] = v[M11];\n        t[M12] = v[M21];\n        t[M13] = v[M31];\n        t[M20] = v[M02];\n        t[M21] = v[M12];\n        t[M22] = v[M22];\n        t[M23] = v[M32];\n        t[M30] = v[M03];\n        t[M31] = v[M13];\n        t[M32] = v[M23];\n        t[M33] = v[M33];\n        return this.set(t);\n    }\n    identity() {\n        let v = this.values;\n        v[M00] = 1;\n        v[M01] = 0;\n        v[M02] = 0;\n        v[M03] = 0;\n        v[M10] = 0;\n        v[M11] = 1;\n        v[M12] = 0;\n        v[M13] = 0;\n        v[M20] = 0;\n        v[M21] = 0;\n        v[M22] = 1;\n        v[M23] = 0;\n        v[M30] = 0;\n        v[M31] = 0;\n        v[M32] = 0;\n        v[M33] = 1;\n        return this;\n    }\n    invert() {\n        let v = this.values;\n        let t = this.temp;\n        let l_det = v[M30] * v[M21] * v[M12] * v[M03] - v[M20] * v[M31] * v[M12] * v[M03] - v[M30] * v[M11] * v[M22] * v[M03]\n            + v[M10] * v[M31] * v[M22] * v[M03] + v[M20] * v[M11] * v[M32] * v[M03] - v[M10] * v[M21] * v[M32] * v[M03]\n            - v[M30] * v[M21] * v[M02] * v[M13] + v[M20] * v[M31] * v[M02] * v[M13] + v[M30] * v[M01] * v[M22] * v[M13]\n            - v[M00] * v[M31] * v[M22] * v[M13] - v[M20] * v[M01] * v[M32] * v[M13] + v[M00] * v[M21] * v[M32] * v[M13]\n            + v[M30] * v[M11] * v[M02] * v[M23] - v[M10] * v[M31] * v[M02] * v[M23] - v[M30] * v[M01] * v[M12] * v[M23]\n            + v[M00] * v[M31] * v[M12] * v[M23] + v[M10] * v[M01] * v[M32] * v[M23] - v[M00] * v[M11] * v[M32] * v[M23]\n            - v[M20] * v[M11] * v[M02] * v[M33] + v[M10] * v[M21] * v[M02] * v[M33] + v[M20] * v[M01] * v[M12] * v[M33]\n            - v[M00] * v[M21] * v[M12] * v[M33] - v[M10] * v[M01] * v[M22] * v[M33] + v[M00] * v[M11] * v[M22] * v[M33];\n        if (l_det == 0)\n            throw new Error(\"non-invertible matrix\");\n        let inv_det = 1.0 / l_det;\n        t[M00] = v[M12] * v[M23] * v[M31] - v[M13] * v[M22] * v[M31] + v[M13] * v[M21] * v[M32]\n            - v[M11] * v[M23] * v[M32] - v[M12] * v[M21] * v[M33] + v[M11] * v[M22] * v[M33];\n        t[M01] = v[M03] * v[M22] * v[M31] - v[M02] * v[M23] * v[M31] - v[M03] * v[M21] * v[M32]\n            + v[M01] * v[M23] * v[M32] + v[M02] * v[M21] * v[M33] - v[M01] * v[M22] * v[M33];\n        t[M02] = v[M02] * v[M13] * v[M31] - v[M03] * v[M12] * v[M31] + v[M03] * v[M11] * v[M32]\n            - v[M01] * v[M13] * v[M32] - v[M02] * v[M11] * v[M33] + v[M01] * v[M12] * v[M33];\n        t[M03] = v[M03] * v[M12] * v[M21] - v[M02] * v[M13] * v[M21] - v[M03] * v[M11] * v[M22]\n            + v[M01] * v[M13] * v[M22] + v[M02] * v[M11] * v[M23] - v[M01] * v[M12] * v[M23];\n        t[M10] = v[M13] * v[M22] * v[M30] - v[M12] * v[M23] * v[M30] - v[M13] * v[M20] * v[M32]\n            + v[M10] * v[M23] * v[M32] + v[M12] * v[M20] * v[M33] - v[M10] * v[M22] * v[M33];\n        t[M11] = v[M02] * v[M23] * v[M30] - v[M03] * v[M22] * v[M30] + v[M03] * v[M20] * v[M32]\n            - v[M00] * v[M23] * v[M32] - v[M02] * v[M20] * v[M33] + v[M00] * v[M22] * v[M33];\n        t[M12] = v[M03] * v[M12] * v[M30] - v[M02] * v[M13] * v[M30] - v[M03] * v[M10] * v[M32]\n            + v[M00] * v[M13] * v[M32] + v[M02] * v[M10] * v[M33] - v[M00] * v[M12] * v[M33];\n        t[M13] = v[M02] * v[M13] * v[M20] - v[M03] * v[M12] * v[M20] + v[M03] * v[M10] * v[M22]\n            - v[M00] * v[M13] * v[M22] - v[M02] * v[M10] * v[M23] + v[M00] * v[M12] * v[M23];\n        t[M20] = v[M11] * v[M23] * v[M30] - v[M13] * v[M21] * v[M30] + v[M13] * v[M20] * v[M31]\n            - v[M10] * v[M23] * v[M31] - v[M11] * v[M20] * v[M33] + v[M10] * v[M21] * v[M33];\n        t[M21] = v[M03] * v[M21] * v[M30] - v[M01] * v[M23] * v[M30] - v[M03] * v[M20] * v[M31]\n            + v[M00] * v[M23] * v[M31] + v[M01] * v[M20] * v[M33] - v[M00] * v[M21] * v[M33];\n        t[M22] = v[M01] * v[M13] * v[M30] - v[M03] * v[M11] * v[M30] + v[M03] * v[M10] * v[M31]\n            - v[M00] * v[M13] * v[M31] - v[M01] * v[M10] * v[M33] + v[M00] * v[M11] * v[M33];\n        t[M23] = v[M03] * v[M11] * v[M20] - v[M01] * v[M13] * v[M20] - v[M03] * v[M10] * v[M21]\n            + v[M00] * v[M13] * v[M21] + v[M01] * v[M10] * v[M23] - v[M00] * v[M11] * v[M23];\n        t[M30] = v[M12] * v[M21] * v[M30] - v[M11] * v[M22] * v[M30] - v[M12] * v[M20] * v[M31]\n            + v[M10] * v[M22] * v[M31] + v[M11] * v[M20] * v[M32] - v[M10] * v[M21] * v[M32];\n        t[M31] = v[M01] * v[M22] * v[M30] - v[M02] * v[M21] * v[M30] + v[M02] * v[M20] * v[M31]\n            - v[M00] * v[M22] * v[M31] - v[M01] * v[M20] * v[M32] + v[M00] * v[M21] * v[M32];\n        t[M32] = v[M02] * v[M11] * v[M30] - v[M01] * v[M12] * v[M30] - v[M02] * v[M10] * v[M31]\n            + v[M00] * v[M12] * v[M31] + v[M01] * v[M10] * v[M32] - v[M00] * v[M11] * v[M32];\n        t[M33] = v[M01] * v[M12] * v[M20] - v[M02] * v[M11] * v[M20] + v[M02] * v[M10] * v[M21]\n            - v[M00] * v[M12] * v[M21] - v[M01] * v[M10] * v[M22] + v[M00] * v[M11] * v[M22];\n        v[M00] = t[M00] * inv_det;\n        v[M01] = t[M01] * inv_det;\n        v[M02] = t[M02] * inv_det;\n        v[M03] = t[M03] * inv_det;\n        v[M10] = t[M10] * inv_det;\n        v[M11] = t[M11] * inv_det;\n        v[M12] = t[M12] * inv_det;\n        v[M13] = t[M13] * inv_det;\n        v[M20] = t[M20] * inv_det;\n        v[M21] = t[M21] * inv_det;\n        v[M22] = t[M22] * inv_det;\n        v[M23] = t[M23] * inv_det;\n        v[M30] = t[M30] * inv_det;\n        v[M31] = t[M31] * inv_det;\n        v[M32] = t[M32] * inv_det;\n        v[M33] = t[M33] * inv_det;\n        return this;\n    }\n    determinant() {\n        let v = this.values;\n        return v[M30] * v[M21] * v[M12] * v[M03] - v[M20] * v[M31] * v[M12] * v[M03] - v[M30] * v[M11] * v[M22] * v[M03]\n            + v[M10] * v[M31] * v[M22] * v[M03] + v[M20] * v[M11] * v[M32] * v[M03] - v[M10] * v[M21] * v[M32] * v[M03]\n            - v[M30] * v[M21] * v[M02] * v[M13] + v[M20] * v[M31] * v[M02] * v[M13] + v[M30] * v[M01] * v[M22] * v[M13]\n            - v[M00] * v[M31] * v[M22] * v[M13] - v[M20] * v[M01] * v[M32] * v[M13] + v[M00] * v[M21] * v[M32] * v[M13]\n            + v[M30] * v[M11] * v[M02] * v[M23] - v[M10] * v[M31] * v[M02] * v[M23] - v[M30] * v[M01] * v[M12] * v[M23]\n            + v[M00] * v[M31] * v[M12] * v[M23] + v[M10] * v[M01] * v[M32] * v[M23] - v[M00] * v[M11] * v[M32] * v[M23]\n            - v[M20] * v[M11] * v[M02] * v[M33] + v[M10] * v[M21] * v[M02] * v[M33] + v[M20] * v[M01] * v[M12] * v[M33]\n            - v[M00] * v[M21] * v[M12] * v[M33] - v[M10] * v[M01] * v[M22] * v[M33] + v[M00] * v[M11] * v[M22] * v[M33];\n    }\n    translate(x, y, z) {\n        let v = this.values;\n        v[M03] += x;\n        v[M13] += y;\n        v[M23] += z;\n        return this;\n    }\n    copy() {\n        return new Matrix4().set(this.values);\n    }\n    projection(near, far, fovy, aspectRatio) {\n        this.identity();\n        let l_fd = (1.0 / Math.tan((fovy * (Math.PI / 180)) / 2.0));\n        let l_a1 = (far + near) / (near - far);\n        let l_a2 = (2 * far * near) / (near - far);\n        let v = this.values;\n        v[M00] = l_fd / aspectRatio;\n        v[M10] = 0;\n        v[M20] = 0;\n        v[M30] = 0;\n        v[M01] = 0;\n        v[M11] = l_fd;\n        v[M21] = 0;\n        v[M31] = 0;\n        v[M02] = 0;\n        v[M12] = 0;\n        v[M22] = l_a1;\n        v[M32] = -1;\n        v[M03] = 0;\n        v[M13] = 0;\n        v[M23] = l_a2;\n        v[M33] = 0;\n        return this;\n    }\n    ortho2d(x, y, width, height) {\n        return this.ortho(x, x + width, y, y + height, 0, 1);\n    }\n    ortho(left, right, bottom, top, near, far) {\n        this.identity();\n        let x_orth = 2 / (right - left);\n        let y_orth = 2 / (top - bottom);\n        let z_orth = -2 / (far - near);\n        let tx = -(right + left) / (right - left);\n        let ty = -(top + bottom) / (top - bottom);\n        let tz = -(far + near) / (far - near);\n        let v = this.values;\n        v[M00] = x_orth;\n        v[M10] = 0;\n        v[M20] = 0;\n        v[M30] = 0;\n        v[M01] = 0;\n        v[M11] = y_orth;\n        v[M21] = 0;\n        v[M31] = 0;\n        v[M02] = 0;\n        v[M12] = 0;\n        v[M22] = z_orth;\n        v[M32] = 0;\n        v[M03] = tx;\n        v[M13] = ty;\n        v[M23] = tz;\n        v[M33] = 1;\n        return this;\n    }\n    multiply(matrix) {\n        let t = this.temp;\n        let v = this.values;\n        let m = matrix.values;\n        t[M00] = v[M00] * m[M00] + v[M01] * m[M10] + v[M02] * m[M20] + v[M03] * m[M30];\n        t[M01] = v[M00] * m[M01] + v[M01] * m[M11] + v[M02] * m[M21] + v[M03] * m[M31];\n        t[M02] = v[M00] * m[M02] + v[M01] * m[M12] + v[M02] * m[M22] + v[M03] * m[M32];\n        t[M03] = v[M00] * m[M03] + v[M01] * m[M13] + v[M02] * m[M23] + v[M03] * m[M33];\n        t[M10] = v[M10] * m[M00] + v[M11] * m[M10] + v[M12] * m[M20] + v[M13] * m[M30];\n        t[M11] = v[M10] * m[M01] + v[M11] * m[M11] + v[M12] * m[M21] + v[M13] * m[M31];\n        t[M12] = v[M10] * m[M02] + v[M11] * m[M12] + v[M12] * m[M22] + v[M13] * m[M32];\n        t[M13] = v[M10] * m[M03] + v[M11] * m[M13] + v[M12] * m[M23] + v[M13] * m[M33];\n        t[M20] = v[M20] * m[M00] + v[M21] * m[M10] + v[M22] * m[M20] + v[M23] * m[M30];\n        t[M21] = v[M20] * m[M01] + v[M21] * m[M11] + v[M22] * m[M21] + v[M23] * m[M31];\n        t[M22] = v[M20] * m[M02] + v[M21] * m[M12] + v[M22] * m[M22] + v[M23] * m[M32];\n        t[M23] = v[M20] * m[M03] + v[M21] * m[M13] + v[M22] * m[M23] + v[M23] * m[M33];\n        t[M30] = v[M30] * m[M00] + v[M31] * m[M10] + v[M32] * m[M20] + v[M33] * m[M30];\n        t[M31] = v[M30] * m[M01] + v[M31] * m[M11] + v[M32] * m[M21] + v[M33] * m[M31];\n        t[M32] = v[M30] * m[M02] + v[M31] * m[M12] + v[M32] * m[M22] + v[M33] * m[M32];\n        t[M33] = v[M30] * m[M03] + v[M31] * m[M13] + v[M32] * m[M23] + v[M33] * m[M33];\n        return this.set(this.temp);\n    }\n    multiplyLeft(matrix) {\n        let t = this.temp;\n        let v = this.values;\n        let m = matrix.values;\n        t[M00] = m[M00] * v[M00] + m[M01] * v[M10] + m[M02] * v[M20] + m[M03] * v[M30];\n        t[M01] = m[M00] * v[M01] + m[M01] * v[M11] + m[M02] * v[M21] + m[M03] * v[M31];\n        t[M02] = m[M00] * v[M02] + m[M01] * v[M12] + m[M02] * v[M22] + m[M03] * v[M32];\n        t[M03] = m[M00] * v[M03] + m[M01] * v[M13] + m[M02] * v[M23] + m[M03] * v[M33];\n        t[M10] = m[M10] * v[M00] + m[M11] * v[M10] + m[M12] * v[M20] + m[M13] * v[M30];\n        t[M11] = m[M10] * v[M01] + m[M11] * v[M11] + m[M12] * v[M21] + m[M13] * v[M31];\n        t[M12] = m[M10] * v[M02] + m[M11] * v[M12] + m[M12] * v[M22] + m[M13] * v[M32];\n        t[M13] = m[M10] * v[M03] + m[M11] * v[M13] + m[M12] * v[M23] + m[M13] * v[M33];\n        t[M20] = m[M20] * v[M00] + m[M21] * v[M10] + m[M22] * v[M20] + m[M23] * v[M30];\n        t[M21] = m[M20] * v[M01] + m[M21] * v[M11] + m[M22] * v[M21] + m[M23] * v[M31];\n        t[M22] = m[M20] * v[M02] + m[M21] * v[M12] + m[M22] * v[M22] + m[M23] * v[M32];\n        t[M23] = m[M20] * v[M03] + m[M21] * v[M13] + m[M22] * v[M23] + m[M23] * v[M33];\n        t[M30] = m[M30] * v[M00] + m[M31] * v[M10] + m[M32] * v[M20] + m[M33] * v[M30];\n        t[M31] = m[M30] * v[M01] + m[M31] * v[M11] + m[M32] * v[M21] + m[M33] * v[M31];\n        t[M32] = m[M30] * v[M02] + m[M31] * v[M12] + m[M32] * v[M22] + m[M33] * v[M32];\n        t[M33] = m[M30] * v[M03] + m[M31] * v[M13] + m[M32] * v[M23] + m[M33] * v[M33];\n        return this.set(this.temp);\n    }\n    lookAt(position, direction, up) {\n        let xAxis = Matrix4.xAxis, yAxis = Matrix4.yAxis, zAxis = Matrix4.zAxis;\n        zAxis.setFrom(direction).normalize();\n        xAxis.setFrom(direction).normalize();\n        xAxis.cross(up).normalize();\n        yAxis.setFrom(xAxis).cross(zAxis).normalize();\n        this.identity();\n        let val = this.values;\n        val[M00] = xAxis.x;\n        val[M01] = xAxis.y;\n        val[M02] = xAxis.z;\n        val[M10] = yAxis.x;\n        val[M11] = yAxis.y;\n        val[M12] = yAxis.z;\n        val[M20] = -zAxis.x;\n        val[M21] = -zAxis.y;\n        val[M22] = -zAxis.z;\n        Matrix4.tmpMatrix.identity();\n        Matrix4.tmpMatrix.values[M03] = -position.x;\n        Matrix4.tmpMatrix.values[M13] = -position.y;\n        Matrix4.tmpMatrix.values[M23] = -position.z;\n        this.multiply(Matrix4.tmpMatrix);\n        return this;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF0cml4NC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9NYXRyaXg0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXZDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFDckIsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQztBQUNyQixNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQ3JCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUM7QUFDdEIsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQztBQUNyQixNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQ3JCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFDckIsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUN0QixNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQ3JCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFDckIsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUN0QixNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFDckIsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQztBQUNyQixNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUM7QUFFdEIsTUFBTSxPQUFPLE9BQU87SUFDbkIsSUFBSSxHQUFpQixJQUFJLFlBQVksQ0FBQyxFQUFFLENB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QUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELE1BQU07UUFDTCxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDbEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ2xILENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUN6RyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDekcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3pHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUN6RyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDekcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3pHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdHLElBQUksS0FBSyxJQUFJLENBQUM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFDekQsSUFBSSxPQUFPLEdBQUcsR0FBRyxHQUFHLEtBQUssQ0FBQztRQUMxQixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3BGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDcEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUNwRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3BGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDcEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUNwRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3BGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDcEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUNwRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3BGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDcEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUNwRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3BGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDcEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEYsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUNwRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3BGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQzFCLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELFdBQVc7UUFDVixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3BCLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQzdHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUN6RyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDekcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3pHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztjQUN6RyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7Y0FDekcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO2NBQ3pHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlHLENBQUM7SUFFRCxTQUFTLENBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO1FBQ3pDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDcEIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNaLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1osT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsSUFBSTtRQUNILE9BQU8sSUFBSSxPQUFPLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxVQUFVLENBQUUsSUFBWSxFQUFFLEdBQVcsRUFBRSxJQUFZLEVBQUUsV0FBbUI7UUFDdkUsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksSUFBSSxHQUFHLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM1RCxJQUFJLElBQUksR0FBRyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztRQUN2QyxJQUFJLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNwQixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxHQUFHLFdBQVcsQ0FBQztRQUM1QixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNkLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ1osQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELE9BQU8sQ0FBRSxDQUFTLEVBQUUsQ0FBUyxFQUFFLEtBQWEsRUFBRSxNQUFjO1FBQzNELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELEtBQUssQ0FBRSxJQUFZLEVBQUUsS0FBYSxFQUFFLE1BQWMsRUFBRSxHQUFXLEVBQUUsSUFBWSxFQUFFLEdBQVc7UUFDekYsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksTUFBTSxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQztRQUNoQyxJQUFJLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFDaEMsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFFL0IsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBQzFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFFdEMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNwQixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1osQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNaLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWixDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsUUFBUSxDQUFFLE1BQWU7UUFDeEIsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDdEIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsWUFBWSxDQUFFLE1BQWU7UUFDNUIsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDdEIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsTUFBTSxDQUFFLFFBQWlCLEVBQUUsU0FBa0IsRUFBRSxFQUFXO1FBQ3pELElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLEVBQUUsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLEVBQUUsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDeEUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNyQyxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3JDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDNUIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDOUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDdEIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNwQixHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFcEIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM3QixPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDNUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzVDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUVoQyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUMifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Matrix4 } from \"./Matrix4.js\";\nimport { Vector3 } from \"./Vector3.js\";\nexport class OrthoCamera {\n    position = new Vector3(0, 0, 0);\n    direction = new Vector3(0, 0, -1);\n    up = new Vector3(0, 1, 0);\n    near = 0;\n    far = 100;\n    zoom = 1;\n    viewportWidth = 0;\n    viewportHeight = 0;\n    projectionView = new Matrix4();\n    inverseProjectionView = new Matrix4();\n    projection = new Matrix4();\n    view = new Matrix4();\n    constructor(viewportWidth, viewportHeight) {\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n        this.update();\n    }\n    update() {\n        let projection = this.projection;\n        let view = this.view;\n        let projectionView = this.projectionView;\n        let inverseProjectionView = this.inverseProjectionView;\n        let zoom = this.zoom, viewportWidth = this.viewportWidth, viewportHeight = this.viewportHeight;\n        projection.ortho(zoom * (-viewportWidth / 2), zoom * (viewportWidth / 2), zoom * (-viewportHeight / 2), zoom * (viewportHeight / 2), this.near, this.far);\n        view.lookAt(this.position, this.direction, this.up);\n        projectionView.set(projection.values);\n        projectionView.multiply(view);\n        inverseProjectionView.set(projectionView.values).invert();\n    }\n    screenToWorld(screenCoords, screenWidth, screenHeight) {\n        let x = screenCoords.x, y = screenHeight - screenCoords.y - 1;\n        screenCoords.x = (2 * x) / screenWidth - 1;\n        screenCoords.y = (2 * y) / screenHeight - 1;\n        screenCoords.z = (2 * screenCoords.z) - 1;\n        screenCoords.project(this.inverseProjectionView);\n        return screenCoords;\n    }\n    worldToScreen(worldCoords, screenWidth, screenHeight) {\n        worldCoords.project(this.projectionView);\n        worldCoords.x = screenWidth * (worldCoords.x + 1) / 2;\n        worldCoords.y = screenHeight * (worldCoords.y + 1) / 2;\n        worldCoords.z = (worldCoords.z + 1) / 2;\n        return worldCoords;\n    }\n    setViewport(viewportWidth, viewportHeight) {\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FtZXJhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0NhbWVyYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN2QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXZDLE1BQU0sT0FBTyxXQUFXO0lBQ3ZCLFFBQVEsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLFNBQVMsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEMsRUFBRSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDMUIsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNULEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDVixJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ1QsYUFBYSxHQUFHLENBQUMsQ0FBQztJQUNsQixjQUFjLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLGNBQWMsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBQy9CLHFCQUFxQixHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7SUFDdEMsVUFBVSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7SUFDM0IsSUFBSSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7SUFFckIsWUFBYSxhQUFxQixFQUFFLGNBQXNCO1FBQ3pELElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ25DLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNmLENBQUM7SUFFRCxNQUFNO1FBQ0wsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFD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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ManagedWebGLRenderingContext } from \"./WebGL.js\";\nexport class Shader {\n    vertexShader;\n    fragmentShader;\n    static MVP_MATRIX = \"u_projTrans\";\n    static POSITION = \"a_position\";\n    static COLOR = \"a_color\";\n    static COLOR2 = \"a_color2\";\n    static TEXCOORDS = \"a_texCoords\";\n    static SAMPLER = \"u_texture\";\n    context;\n    vs = null;\n    vsSource;\n    fs = null;\n    fsSource;\n    program = null;\n    tmp2x2 = new Float32Array(2 * 2);\n    tmp3x3 = new Float32Array(3 * 3);\n    tmp4x4 = new Float32Array(4 * 4);\n    getProgram() { return this.program; }\n    getVertexShader() { return this.vertexShader; }\n    getFragmentShader() { return this.fragmentShader; }\n    getVertexShaderSource() { return this.vsSource; }\n    getFragmentSource() { return this.fsSource; }\n    constructor(context, vertexShader, fragmentShader) {\n        this.vertexShader = vertexShader;\n        this.fragmentShader = fragmentShader;\n        this.vsSource = vertexShader;\n        this.fsSource = fragmentShader;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.context.addRestorable(this);\n        this.compile();\n    }\n    compile() {\n        let gl = this.context.gl;\n        try {\n            this.vs = this.compileShader(gl.VERTEX_SHADER, this.vertexShader);\n            if (!this.vs)\n                throw new Error(\"Couldn't compile vertex shader.\");\n            this.fs = this.compileShader(gl.FRAGMENT_SHADER, this.fragmentShader);\n            if (!this.fs)\n                throw new Error(\"Couldn#t compile fragment shader.\");\n            this.program = this.compileProgram(this.vs, this.fs);\n        }\n        catch (e) {\n            this.dispose();\n            throw e;\n        }\n    }\n    compileShader(type, source) {\n        let gl = this.context.gl;\n        let shader = gl.createShader(type);\n        if (!shader)\n            throw new Error(\"Couldn't create shader.\");\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            let error = \"Couldn't compile shader: \" + gl.getShaderInfoLog(shader);\n            gl.deleteShader(shader);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return shader;\n    }\n    compileProgram(vs, fs) {\n        let gl = this.context.gl;\n        let program = gl.createProgram();\n        if (!program)\n            throw new Error(\"Couldn't compile program.\");\n        gl.attachShader(program, vs);\n        gl.attachShader(program, fs);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            let error = \"Couldn't compile shader program: \" + gl.getProgramInfoLog(program);\n            gl.deleteProgram(program);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return program;\n    }\n    restore() {\n        this.compile();\n    }\n    bind() {\n        this.context.gl.useProgram(this.program);\n    }\n    unbind() {\n        this.context.gl.useProgram(null);\n    }\n    setUniformi(uniform, value) {\n        this.context.gl.uniform1i(this.getUniformLocation(uniform), value);\n    }\n    setUniformf(uniform, value) {\n        this.context.gl.uniform1f(this.getUniformLocation(uniform), value);\n    }\n    setUniform2f(uniform, value, value2) {\n        this.context.gl.uniform2f(this.getUniformLocation(uniform), value, value2);\n    }\n    setUniform3f(uniform, value, value2, value3) {\n        this.context.gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\n    }\n    setUniform4f(uniform, value, value2, value3, value4) {\n        this.context.gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\n    }\n    setUniform2x2f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp2x2.set(value);\n        gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, this.tmp2x2);\n    }\n    setUniform3x3f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp3x3.set(value);\n        gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, this.tmp3x3);\n    }\n    setUniform4x4f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp4x4.set(value);\n        gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, this.tmp4x4);\n    }\n    getUniformLocation(uniform) {\n        let gl = this.context.gl;\n        if (!this.program)\n            throw new Error(\"Shader not compiled.\");\n        let location = gl.getUniformLocation(this.program, uniform);\n        if (!location && !gl.isContextLost())\n            throw new Error(`Couldn't find location for uniform ${uniform}`);\n        return location;\n    }\n    getAttributeLocation(attribute) {\n        let gl = this.context.gl;\n        if (!this.program)\n            throw new Error(\"Shader not compiled.\");\n        let location = gl.getAttribLocation(this.program, attribute);\n        if (location == -1 && !gl.isContextLost())\n            throw new Error(`Couldn't find location for attribute ${attribute}`);\n        return location;\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        if (this.vs) {\n            gl.deleteShader(this.vs);\n            this.vs = null;\n        }\n        if (this.fs) {\n            gl.deleteShader(this.fs);\n            this.fs = null;\n        }\n        if (this.program) {\n            gl.deleteProgram(this.program);\n            this.program = null;\n        }\n    }\n    static newColoredTextured(context) {\n        let vs = `\nattribute vec4 ${Shader.POSITION};\nattribute vec4 ${Shader.COLOR};\nattribute vec2 ${Shader.TEXCOORDS};\nuniform mat4 ${Shader.MVP_MATRIX};\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main () {\n\tv_color = ${Shader.COLOR};\n\tv_texCoords = ${Shader.TEXCOORDS};\n\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n}\n`;\n        let fs = `\n#ifdef GL_ES\n\t#define LOWP lowp\n\tprecision mediump float;\n#else\n\t#define LOWP\n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\n\nvoid main () {\n\tgl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}\n`;\n        return new Shader(context, vs, fs);\n    }\n    static newTwoColoredTextured(context) {\n        let vs = `\nattribute vec4 ${Shader.POSITION};\nattribute vec4 ${Shader.COLOR};\nattribute vec4 ${Shader.COLOR2};\nattribute vec2 ${Shader.TEXCOORDS};\nuniform mat4 ${Shader.MVP_MATRIX};\nvarying vec4 v_light;\nvarying vec4 v_dark;\nvarying vec2 v_texCoords;\n\nvoid main () {\n\tv_light = ${Shader.COLOR};\n\tv_dark = ${Shader.COLOR2};\n\tv_texCoords = ${Shader.TEXCOORDS};\n\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n}\n`;\n        let fs = `\n#ifdef GL_ES\n\t#define LOWP lowp\n\tprecision mediump float;\n#else\n\t#define LOWP\n#endif\nvarying LOWP vec4 v_light;\nvarying LOWP vec4 v_dark;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\n\nvoid main () {\n\tvec4 texColor = texture2D(u_texture, v_texCoords);\n\tgl_FragColor.a = texColor.a * v_light.a;\n\tgl_FragColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n}\n`;\n        return new Shader(context, vs, fs);\n    }\n    static newColored(context) {\n        let vs = `\nattribute vec4 ${Shader.POSITION};\nattribute vec4 ${Shader.COLOR};\nuniform mat4 ${Shader.MVP_MATRIX};\nvarying vec4 v_color;\n\nvoid main () {\n\tv_color = ${Shader.COLOR};\n\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n}\n`;\n        let fs = `\n#ifdef GL_ES\n\t#define LOWP lowp\n\tprecision mediump float;\n#else\n\t#define LOWP\n#endif\nvarying LOWP vec4 v_color;\n\nvoid main () {\n\tgl_FragColor = v_color;\n}\n`;\n        return new Shader(context, vs, fs);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Shader } from \"./Shader.js\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL.js\";\nexport class Mesh {\n    attributes;\n    context;\n    vertices;\n    verticesBuffer = null;\n    verticesLength = 0;\n    dirtyVertices = false;\n    indices;\n    indicesBuffer = null;\n    indicesLength = 0;\n    dirtyIndices = false;\n    elementsPerVertex = 0;\n    getAttributes() { return this.attributes; }\n    maxVertices() { return this.vertices.length / this.elementsPerVertex; }\n    numVertices() { return this.verticesLength / this.elementsPerVertex; }\n    setVerticesLength(length) {\n        this.dirtyVertices = true;\n        this.verticesLength = length;\n    }\n    getVertices() { return this.vertices; }\n    maxIndices() { return this.indices.length; }\n    numIndices() { return this.indicesLength; }\n    setIndicesLength(length) {\n        this.dirtyIndices = true;\n        this.indicesLength = length;\n    }\n    getIndices() { return this.indices; }\n    ;\n    getVertexSizeInFloats() {\n        let size = 0;\n        for (var i = 0; i < this.attributes.length; i++) {\n            let attribute = this.attributes[i];\n            size += attribute.numElements;\n        }\n        return size;\n    }\n    constructor(context, attributes, maxVertices, maxIndices) {\n        this.attributes = attributes;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.elementsPerVertex = 0;\n        for (let i = 0; i < attributes.length; i++) {\n            this.elementsPerVertex += attributes[i].numElements;\n        }\n        this.vertices = new Float32Array(maxVertices * this.elementsPerVertex);\n        this.indices = new Uint16Array(maxIndices);\n        this.context.addRestorable(this);\n    }\n    setVertices(vertices) {\n        this.dirtyVertices = true;\n        if (vertices.length > this.vertices.length)\n            throw Error(\"Mesh can't store more than \" + this.maxVertices() + \" vertices\");\n        this.vertices.set(vertices, 0);\n        this.verticesLength = vertices.length;\n    }\n    setIndices(indices) {\n        this.dirtyIndices = true;\n        if (indices.length > this.indices.length)\n            throw Error(\"Mesh can't store more than \" + this.maxIndices() + \" indices\");\n        this.indices.set(indices, 0);\n        this.indicesLength = indices.length;\n    }\n    draw(shader, primitiveType) {\n        this.drawWithOffset(shader, primitiveType, 0, this.indicesLength > 0 ? this.indicesLength : this.verticesLength / this.elementsPerVertex);\n    }\n    drawWithOffset(shader, primitiveType, offset, count) {\n        let gl = this.context.gl;\n        if (this.dirtyVertices || this.dirtyIndices)\n            this.update();\n        this.bind(shader);\n        if (this.indicesLength > 0) {\n            gl.drawElements(primitiveType, count, gl.UNSIGNED_SHORT, offset * 2);\n        }\n        else {\n            gl.drawArrays(primitiveType, offset, count);\n        }\n        this.unbind(shader);\n    }\n    bind(shader) {\n        let gl = this.context.gl;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.verticesBuffer);\n        let offset = 0;\n        for (let i = 0; i < this.attributes.length; i++) {\n            let attrib = this.attributes[i];\n            let location = shader.getAttributeLocation(attrib.name);\n            gl.enableVertexAttribArray(location);\n            gl.vertexAttribPointer(location, attrib.numElements, gl.FLOAT, false, this.elementsPerVertex * 4, offset * 4);\n            offset += attrib.numElements;\n        }\n        if (this.indicesLength > 0)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n    }\n    unbind(shader) {\n        let gl = this.context.gl;\n        for (let i = 0; i < this.attributes.length; i++) {\n            let attrib = this.attributes[i];\n            let location = shader.getAttributeLocation(attrib.name);\n            gl.disableVertexAttribArray(location);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        if (this.indicesLength > 0)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    update() {\n        let gl = this.context.gl;\n        if (this.dirtyVertices) {\n            if (!this.verticesBuffer) {\n                this.verticesBuffer = gl.createBuffer();\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.verticesBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.vertices.subarray(0, this.verticesLength), gl.DYNAMIC_DRAW);\n            this.dirtyVertices = false;\n        }\n        if (this.dirtyIndices) {\n            if (!this.indicesBuffer) {\n                this.indicesBuffer = gl.createBuffer();\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices.subarray(0, this.indicesLength), gl.DYNAMIC_DRAW);\n            this.dirtyIndices = false;\n        }\n    }\n    restore() {\n        this.verticesBuffer = null;\n        this.indicesBuffer = null;\n        this.update();\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        gl.deleteBuffer(this.verticesBuffer);\n        gl.deleteBuffer(this.indicesBuffer);\n    }\n}\nexport class VertexAttribute {\n    name;\n    type;\n    numElements;\n    constructor(name, type, numElements) {\n        this.name = name;\n        this.type = type;\n        this.numElements = numElements;\n    }\n}\nexport class Position2Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.POSITION, VertexAttributeType.Float, 2);\n    }\n}\nexport class Position3Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.POSITION, VertexAttributeType.Float, 3);\n    }\n}\nexport class TexCoordAttribute extends VertexAttribute {\n    constructor(unit = 0) {\n        super(Shader.TEXCOORDS + (unit == 0 ? \"\" : unit), VertexAttributeType.Float, 2);\n    }\n}\nexport class ColorAttribute extends VertexAttribute {\n    constructor() {\n        super(Shader.COLOR, VertexAttributeType.Float, 4);\n    }\n}\nexport class Color2Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.COLOR2, VertexAttributeType.Float, 4);\n    }\n}\nexport var VertexAttributeType;\n(function (VertexAttributeType) {\n    VertexAttributeType[VertexAttributeType[\"Float\"] = 0] = \"Float\";\n})(VertexAttributeType || (VertexAttributeType = {}));\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Mesh, Position2Attribute, ColorAttribute, TexCoordAttribute, Color2Attribute } from \"./Mesh.js\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL.js\";\nconst GL_ONE = 1;\nconst GL_ONE_MINUS_SRC_COLOR = 0x0301;\nconst GL_SRC_ALPHA = 0x0302;\nconst GL_ONE_MINUS_SRC_ALPHA = 0x0303;\nconst GL_ONE_MINUS_DST_ALPHA = 0x0305;\nconst GL_DST_COLOR = 0x0306;\nexport class PolygonBatcher {\n    static disableCulling = false;\n    context;\n    drawCalls = 0;\n    static globalDrawCalls = 0;\n    isDrawing = false;\n    mesh;\n    shader = null;\n    lastTexture = null;\n    verticesLength = 0;\n    indicesLength = 0;\n    srcColorBlend;\n    srcAlphaBlend;\n    dstBlend;\n    cullWasEnabled = false;\n    constructor(context, twoColorTint = true, maxVertices = 10920) {\n        if (maxVertices > 10920)\n            throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        let attributes = twoColorTint ?\n            [new Position2Attribute(), new ColorAttribute(), new TexCoordAttribute(), new Color2Attribute()] :\n            [new Position2Attribute(), new ColorAttribute(), new TexCoordAttribute()];\n        this.mesh = new Mesh(context, attributes, maxVertices, maxVertices * 3);\n        let gl = this.context.gl;\n        this.srcColorBlend = gl.SRC_ALPHA;\n        this.srcAlphaBlend = gl.ONE;\n        this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n    }\n    begin(shader) {\n        if (this.isDrawing)\n            throw new Error(\"PolygonBatch is already drawing. Call PolygonBatch.end() before calling PolygonBatch.begin()\");\n        this.drawCalls = 0;\n        this.shader = shader;\n        this.lastTexture = null;\n        this.isDrawing = true;\n        let gl = this.context.gl;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n        if (PolygonBatcher.disableCulling) {\n            this.cullWasEnabled = gl.isEnabled(gl.CULL_FACE);\n            if (this.cullWasEnabled)\n                gl.disable(gl.CULL_FACE);\n        }\n    }\n    static blendModesGL = [\n        { srcRgb: GL_SRC_ALPHA, srcRgbPma: GL_ONE, dstRgb: GL_ONE_MINUS_SRC_ALPHA, srcAlpha: GL_ONE },\n        { srcRgb: GL_SRC_ALPHA, srcRgbPma: GL_ONE, dstRgb: GL_ONE, srcAlpha: GL_ONE },\n        { srcRgb: GL_DST_COLOR, srcRgbPma: GL_DST_COLOR, dstRgb: GL_ONE_MINUS_SRC_ALPHA, srcAlpha: GL_ONE },\n        { srcRgb: GL_ONE, srcRgbPma: GL_ONE, dstRgb: GL_ONE_MINUS_SRC_COLOR, srcAlpha: GL_ONE }\n    ];\n    setBlendMode(blendMode, premultipliedAlpha) {\n        const blendModeGL = PolygonBatcher.blendModesGL[blendMode];\n        const srcColorBlend = premultipliedAlpha ? blendModeGL.srcRgbPma : blendModeGL.srcRgb;\n        const srcAlphaBlend = blendModeGL.srcAlpha;\n        const dstBlend = blendModeGL.dstRgb;\n        if (this.srcColorBlend == srcColorBlend && this.srcAlphaBlend == srcAlphaBlend && this.dstBlend == dstBlend)\n            return;\n        this.srcColorBlend = srcColorBlend;\n        this.srcAlphaBlend = srcAlphaBlend;\n        this.dstBlend = dstBlend;\n        if (this.isDrawing) {\n            this.flush();\n        }\n        let gl = this.context.gl;\n        gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n    }\n    draw(texture, vertices, indices) {\n        if (texture != this.lastTexture) {\n            this.flush();\n            this.lastTexture = texture;\n        }\n        else if (this.verticesLength + vertices.length > this.mesh.getVertices().length ||\n            this.indicesLength + indices.length > this.mesh.getIndices().length) {\n            this.flush();\n        }\n        let indexStart = this.mesh.numVertices();\n        this.mesh.getVertices().set(vertices, this.verticesLength);\n        this.verticesLength += vertices.length;\n        this.mesh.setVerticesLength(this.verticesLength);\n        let indicesArray = this.mesh.getIndices();\n        for (let i = this.indicesLength, j = 0; j < indices.length; i++, j++)\n            indicesArray[i] = indices[j] + indexStart;\n        this.indicesLength += indices.length;\n        this.mesh.setIndicesLength(this.indicesLength);\n    }\n    flush() {\n        if (this.verticesLength == 0)\n            return;\n        if (!this.lastTexture)\n            throw new Error(\"No texture set.\");\n        if (!this.shader)\n            throw new Error(\"No shader set.\");\n        this.lastTexture.bind();\n        this.mesh.draw(this.shader, this.context.gl.TRIANGLES);\n        this.verticesLength = 0;\n        this.indicesLength = 0;\n        this.mesh.setVerticesLength(0);\n        this.mesh.setIndicesLength(0);\n        this.drawCalls++;\n        PolygonBatcher.globalDrawCalls++;\n    }\n    end() {\n        if (!this.isDrawing)\n            throw new Error(\"PolygonBatch is not drawing. Call PolygonBatch.begin() before calling PolygonBatch.end()\");\n        if (this.verticesLength > 0 || this.indicesLength > 0)\n            this.flush();\n        this.shader = null;\n        this.lastTexture = null;\n        this.isDrawing = false;\n        let gl = this.context.gl;\n        gl.disable(gl.BLEND);\n        if (PolygonBatcher.disableCulling) {\n            if (this.cullWasEnabled)\n                gl.enable(gl.CULL_FACE);\n        }\n    }\n    getDrawCalls() {\n        return this.drawCalls;\n    }\n    static getAndResetGlobalDrawCalls() {\n        let result = PolygonBatcher.globalDrawCalls;\n        PolygonBatcher.globalDrawCalls = 0;\n        return result;\n    }\n    dispose() {\n        this.mesh.dispose();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9seWdvbkJhdGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUG9seWdvbkJhdGNoZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSS9FLE9BQU8sRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixFQUFFLGVBQWUsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUV6RyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFMUQsTUFBTSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0FBQ2pCLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxDQUFDO0FBQ3RDLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQztBQUM1QixNQUFNLHNCQUFzQixHQUFHLE1BQU0sQ0FBQztBQUN0QyxNQUFNLHNCQUFzQixHQUFHLE1BQU0sQ0FBQztBQUN0QyxNQUFNLFlBQVksR0FBRyxNQUFNLENBQUM7QUFFNUIsTUFBTSxPQUFPLGNBQWM7SUFDbkIsTUFBTSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7SUFFN0IsT0FBTyxDQUErQjtJQUN0QyxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsTUFBTSxDQUFDLGVBQWUsR0FBRyxDQUFDLENBQUM7SUFDbkMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUNWLElBQUksQ0FBTztJQUNYLE1BQU0sR0FBa0IsSUFBSSxDQUFDO0lBQzdCLFdBQVcsR0FBcUIsSUFBSSxDQUFDO0lBQ3JDLGNBQWMsR0FBRyxDQUFDLENBQUM7SUFDbkIsYUFBYSxHQUFHLENBQUMsQ0FBQztJQUNsQixhQUFhLENBQVM7SUFDdEIsYUFBYSxDQUFTO0lBQ3RCLFFBQVEsQ0FBUztJQUNqQixjQUFjLEdBQUcsS0FBSyxDQUFDO0lBRS9CLFlBQWEsT0FBNkQsRUFBRSxlQUF3QixJQUFJLEVBQUUsY0FBc0IsS0FBSztRQUNwSSxJQUFJLFdBQVcsR0FB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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Vector2, MathUtils } from \"@esotericsoftware/spine-core\";\nimport { Mesh, Position2Attribute, ColorAttribute } from \"./Mesh.js\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL.js\";\nexport class ShapeRenderer {\n    context;\n    isDrawing = false;\n    mesh;\n    shapeType = ShapeType.Filled;\n    color = new Color(1, 1, 1, 1);\n    shader = null;\n    vertexIndex = 0;\n    tmp = new Vector2();\n    srcColorBlend;\n    srcAlphaBlend;\n    dstBlend;\n    constructor(context, maxVertices = 10920) {\n        if (maxVertices > 10920)\n            throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.mesh = new Mesh(context, [new Position2Attribute(), new ColorAttribute()], maxVertices, 0);\n        let gl = this.context.gl;\n        this.srcColorBlend = gl.SRC_ALPHA;\n        this.srcAlphaBlend = gl.ONE;\n        this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n    }\n    begin(shader) {\n        if (this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has already been called\");\n        this.shader = shader;\n        this.vertexIndex = 0;\n        this.isDrawing = true;\n        let gl = this.context.gl;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n    }\n    setBlendMode(srcColorBlend, srcAlphaBlend, dstBlend) {\n        this.srcColorBlend = srcColorBlend;\n        this.srcAlphaBlend = srcAlphaBlend;\n        this.dstBlend = dstBlend;\n        if (this.isDrawing) {\n            this.flush();\n            let gl = this.context.gl;\n            gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n        }\n    }\n    setColor(color) {\n        this.color.setFromColor(color);\n    }\n    setColorWith(r, g, b, a) {\n        this.color.set(r, g, b, a);\n    }\n    point(x, y, color) {\n        this.check(ShapeType.Point, 1);\n        if (!color)\n            color = this.color;\n        this.vertex(x, y, color);\n    }\n    line(x, y, x2, y2, color) {\n        this.check(ShapeType.Line, 2);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (!color)\n            color = this.color;\n        this.vertex(x, y, color);\n        this.vertex(x2, y2, color);\n    }\n    triangle(filled, x, y, x2, y2, x3, y3, color, color2, color3) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 3);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (!color)\n            color = this.color;\n        if (!color2)\n            color2 = this.color;\n        if (!color3)\n            color3 = this.color;\n        if (filled) {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n        }\n        else {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x2, y2, color);\n            this.vertex(x3, y3, color2);\n            this.vertex(x3, y3, color);\n            this.vertex(x, y, color2);\n        }\n    }\n    quad(filled, x, y, x2, y2, x3, y3, x4, y4, color, color2, color3, color4) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 3);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (!color)\n            color = this.color;\n        if (!color2)\n            color2 = this.color;\n        if (!color3)\n            color3 = this.color;\n        if (!color4)\n            color4 = this.color;\n        if (filled) {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n            this.vertex(x3, y3, color3);\n            this.vertex(x4, y4, color4);\n            this.vertex(x, y, color);\n        }\n        else {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n            this.vertex(x3, y3, color3);\n            this.vertex(x4, y4, color4);\n            this.vertex(x4, y4, color4);\n            this.vertex(x, y, color);\n        }\n    }\n    rect(filled, x, y, width, height, color) {\n        this.quad(filled, x, y, x + width, y, x + width, y + height, x, y + height, color, color, color, color);\n    }\n    rectLine(filled, x1, y1, x2, y2, width, color) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 8);\n        if (!color)\n            color = this.color;\n        let t = this.tmp.set(y2 - y1, x1 - x2);\n        t.normalize();\n        width *= 0.5;\n        let tx = t.x * width;\n        let ty = t.y * width;\n        if (!filled) {\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n        }\n        else {\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n        }\n    }\n    x(x, y, size) {\n        this.line(x - size, y - size, x + size, y + size);\n        this.line(x - size, y + size, x + size, y - size);\n    }\n    polygon(polygonVertices, offset, count, color) {\n        if (count < 3)\n            throw new Error(\"Polygon must contain at least 3 vertices\");\n        this.check(ShapeType.Line, count * 2);\n        if (!color)\n            color = this.color;\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        offset <<= 1;\n        count <<= 1;\n        let firstX = polygonVertices[offset];\n        let firstY = polygonVertices[offset + 1];\n        let last = offset + count;\n        for (let i = offset, n = offset + count - 2; i < n; i += 2) {\n            let x1 = polygonVertices[i];\n            let y1 = polygonVertices[i + 1];\n            let x2 = 0;\n            let y2 = 0;\n            if (i + 2 >= last) {\n                x2 = firstX;\n                y2 = firstY;\n            }\n            else {\n                x2 = polygonVertices[i + 2];\n                y2 = polygonVertices[i + 3];\n            }\n            this.vertex(x1, y1, color);\n            this.vertex(x2, y2, color);\n        }\n    }\n    circle(filled, x, y, radius, color, segments = 0) {\n        if (segments == 0)\n            segments = Math.max(1, (6 * MathUtils.cbrt(radius)) | 0);\n        if (segments <= 0)\n            throw new Error(\"segments must be > 0.\");\n        if (!color)\n            color = this.color;\n        let angle = 2 * MathUtils.PI / segments;\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        let cx = radius, cy = 0;\n        if (!filled) {\n            this.check(ShapeType.Line, segments * 2 + 2);\n            for (let i = 0; i < segments; i++) {\n                this.vertex(x + cx, y + cy, color);\n                let temp = cx;\n                cx = cos * cx - sin * cy;\n                cy = sin * temp + cos * cy;\n                this.vertex(x + cx, y + cy, color);\n            }\n            // Ensure the last segment is identical to the first.\n            this.vertex(x + cx, y + cy, color);\n        }\n        else {\n            this.check(ShapeType.Filled, segments * 3 + 3);\n            segments--;\n            for (let i = 0; i < segments; i++) {\n                this.vertex(x, y, color);\n                this.vertex(x + cx, y + cy, color);\n                let temp = cx;\n                cx = cos * cx - sin * cy;\n                cy = sin * temp + cos * cy;\n                this.vertex(x + cx, y + cy, color);\n            }\n            // Ensure the last segment is identical to the first.\n            this.vertex(x, y, color);\n            this.vertex(x + cx, y + cy, color);\n        }\n        let temp = cx;\n        cx = radius;\n        cy = 0;\n        this.vertex(x + cx, y + cy, color);\n    }\n    curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color) {\n        this.check(ShapeType.Line, segments * 2 + 2);\n        if (!color)\n            color = this.color;\n        // Algorithm from: http://www.antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION\n        let subdiv_step = 1 / segments;\n        let subdiv_step2 = subdiv_step * subdiv_step;\n        let subdiv_step3 = subdiv_step * subdiv_step * subdiv_step;\n        let pre1 = 3 * subdiv_step;\n        let pre2 = 3 * subdiv_step2;\n        let pre4 = 6 * subdiv_step2;\n        let pre5 = 6 * subdiv_step3;\n        let tmp1x = x1 - cx1 * 2 + cx2;\n        let tmp1y = y1 - cy1 * 2 + cy2;\n        let tmp2x = (cx1 - cx2) * 3 - x1 + x2;\n        let tmp2y = (cy1 - cy2) * 3 - y1 + y2;\n        let fx = x1;\n        let fy = y1;\n        let dfx = (cx1 - x1) * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;\n        let dfy = (cy1 - y1) * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;\n        let ddfx = tmp1x * pre4 + tmp2x * pre5;\n        let ddfy = tmp1y * pre4 + tmp2y * pre5;\n        let dddfx = tmp2x * pre5;\n        let dddfy = tmp2y * pre5;\n        while (segments-- > 0) {\n            this.vertex(fx, fy, color);\n            fx += dfx;\n            fy += dfy;\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            this.vertex(fx, fy, color);\n        }\n        this.vertex(fx, fy, color);\n        this.vertex(x2, y2, color);\n    }\n    vertex(x, y, color) {\n        let idx = this.vertexIndex;\n        let vertices = this.mesh.getVertices();\n        vertices[idx++] = x;\n        vertices[idx++] = y;\n        vertices[idx++] = color.r;\n        vertices[idx++] = color.g;\n        vertices[idx++] = color.b;\n        vertices[idx++] = color.a;\n        this.vertexIndex = idx;\n    }\n    end() {\n        if (!this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has not been called\");\n        this.flush();\n        let gl = this.context.gl;\n        gl.disable(gl.BLEND);\n        this.isDrawing = false;\n    }\n    flush() {\n        if (this.vertexIndex == 0)\n            return;\n        if (!this.shader)\n            throw new Error(\"No shader set.\");\n        this.mesh.setVerticesLength(this.vertexIndex);\n        this.mesh.draw(this.shader, this.shapeType);\n        this.vertexIndex = 0;\n    }\n    check(shapeType, numVertices) {\n        if (!this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has not been called\");\n        if (this.shapeType == shapeType) {\n            if (this.mesh.maxVertices() - this.mesh.numVertices() < numVertices)\n                this.flush();\n            else\n                return;\n        }\n        else {\n            this.flush();\n            this.shapeType = shapeType;\n        }\n    }\n    dispose() {\n        this.mesh.dispose();\n    }\n}\nexport var ShapeType;\n(function (ShapeType) {\n    ShapeType[ShapeType[\"Point\"] = 0] = \"Point\";\n    ShapeType[ShapeType[\"Line\"] = 1] = \"Line\";\n    ShapeType[ShapeType[\"Filled\"] = 4] = \"Filled\";\n})(ShapeType || (ShapeType = {}));\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, SkeletonBounds, Utils, RegionAttachment, MeshAttachment, PathAttachment, ClippingAttachment } from \"@esotericsoftware/spine-core\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL.js\";\nexport class SkeletonDebugRenderer {\n    boneLineColor = new Color(1, 0, 0, 1);\n    boneOriginColor = new Color(0, 1, 0, 1);\n    attachmentLineColor = new Color(0, 0, 1, 0.5);\n    triangleLineColor = new Color(1, 0.64, 0, 0.5);\n    pathColor = new Color().setFromString(\"FF7F00\");\n    clipColor = new Color(0.8, 0, 0, 2);\n    aabbColor = new Color(0, 1, 0, 0.5);\n    drawBones = true;\n    drawRegionAttachments = true;\n    drawBoundingBoxes = true;\n    drawMeshHull = true;\n    drawMeshTriangles = true;\n    drawPaths = true;\n    drawSkeletonXY = false;\n    drawClipping = true;\n    premultipliedAlpha = false;\n    scale = 1;\n    boneWidth = 2;\n    context;\n    bounds = new SkeletonBounds();\n    temp = new Array();\n    vertices = Utils.newFloatArray(2 * 1024);\n    static LIGHT_GRAY = new Color(192 / 255, 192 / 255, 192 / 255, 1);\n    static GREEN = new Color(0, 1, 0, 1);\n    constructor(context) {\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n    }\n    draw(shapes, skeleton, ignoredBones) {\n        let skeletonX = skeleton.x;\n        let skeletonY = skeleton.y;\n        let gl = this.context.gl;\n        let srcFunc = this.premultipliedAlpha ? gl.ONE : gl.SRC_ALPHA;\n        shapes.setBlendMode(srcFunc, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        let bones = skeleton.bones;\n        if (this.drawBones) {\n            shapes.setColor(this.boneLineColor);\n            for (let i = 0, n = bones.length; i < n; i++) {\n                let bone = bones[i];\n                if (ignoredBones && ignoredBones.indexOf(bone.data.name) > -1)\n                    continue;\n                if (!bone.parent)\n                    continue;\n                let x = bone.data.length * bone.a + bone.worldX;\n                let y = bone.data.length * bone.c + bone.worldY;\n                shapes.rectLine(true, bone.worldX, bone.worldY, x, y, this.boneWidth * this.scale);\n            }\n            if (this.drawSkeletonXY)\n                shapes.x(skeletonX, skeletonY, 4 * this.scale);\n        }\n        if (this.drawRegionAttachments) {\n            shapes.setColor(this.attachmentLineColor);\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                let attachment = slot.getAttachment();\n                if (attachment instanceof RegionAttachment) {\n                    let regionAttachment = attachment;\n                    let vertices = this.vertices;\n                    regionAttachment.computeWorldVertices(slot, vertices, 0, 2);\n                    shapes.line(vertices[0], vertices[1], vertices[2], vertices[3]);\n                    shapes.line(vertices[2], vertices[3], vertices[4], vertices[5]);\n                    shapes.line(vertices[4], vertices[5], vertices[6], vertices[7]);\n                    shapes.line(vertices[6], vertices[7], vertices[0], vertices[1]);\n                }\n            }\n        }\n        if (this.drawMeshHull || this.drawMeshTriangles) {\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof MeshAttachment))\n                    continue;\n                let mesh = attachment;\n                let vertices = this.vertices;\n                mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, vertices, 0, 2);\n                let triangles = mesh.triangles;\n                let hullLength = mesh.hullLength;\n                if (this.drawMeshTriangles) {\n                    shapes.setColor(this.triangleLineColor);\n                    for (let ii = 0, nn = triangles.length; ii < nn; ii += 3) {\n                        let v1 = triangles[ii] * 2, v2 = triangles[ii + 1] * 2, v3 = triangles[ii + 2] * 2;\n                        shapes.triangle(false, vertices[v1], vertices[v1 + 1], //\n                        vertices[v2], vertices[v2 + 1], //\n                        vertices[v3], vertices[v3 + 1] //\n                        );\n                    }\n                }\n                if (this.drawMeshHull && hullLength > 0) {\n                    shapes.setColor(this.attachmentLineColor);\n                    hullLength = (hullLength >> 1) * 2;\n                    let lastX = vertices[hullLength - 2], lastY = vertices[hullLength - 1];\n                    for (let ii = 0, nn = hullLength; ii < nn; ii += 2) {\n                        let x = vertices[ii], y = vertices[ii + 1];\n                        shapes.line(x, y, lastX, lastY);\n                        lastX = x;\n                        lastY = y;\n                    }\n                }\n            }\n        }\n        if (this.drawBoundingBoxes) {\n            let bounds = this.bounds;\n            bounds.update(skeleton, true);\n            shapes.setColor(this.aabbColor);\n            shapes.rect(false, bounds.minX, bounds.minY, bounds.getWidth(), bounds.getHeight());\n            let polygons = bounds.polygons;\n            let boxes = bounds.boundingBoxes;\n            for (let i = 0, n = polygons.length; i < n; i++) {\n                let polygon = polygons[i];\n                shapes.setColor(boxes[i].color);\n                shapes.polygon(polygon, 0, polygon.length);\n            }\n        }\n        if (this.drawPaths) {\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof PathAttachment))\n                    continue;\n                let path = attachment;\n                let nn = path.worldVerticesLength;\n                let world = this.temp = Utils.setArraySize(this.temp, nn, 0);\n                path.computeWorldVertices(slot, 0, nn, world, 0, 2);\n                let color = this.pathColor;\n                let x1 = world[2], y1 = world[3], x2 = 0, y2 = 0;\n                if (path.closed) {\n                    shapes.setColor(color);\n                    let cx1 = world[0], cy1 = world[1], cx2 = world[nn - 2], cy2 = world[nn - 1];\n                    x2 = world[nn - 4];\n                    y2 = world[nn - 3];\n                    shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 32);\n                    shapes.setColor(SkeletonDebugRenderer.LIGHT_GRAY);\n                    shapes.line(x1, y1, cx1, cy1);\n                    shapes.line(x2, y2, cx2, cy2);\n                }\n                nn -= 4;\n                for (let ii = 4; ii < nn; ii += 6) {\n                    let cx1 = world[ii], cy1 = world[ii + 1], cx2 = world[ii + 2], cy2 = world[ii + 3];\n                    x2 = world[ii + 4];\n                    y2 = world[ii + 5];\n                    shapes.setColor(color);\n                    shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 32);\n                    shapes.setColor(SkeletonDebugRenderer.LIGHT_GRAY);\n                    shapes.line(x1, y1, cx1, cy1);\n                    shapes.line(x2, y2, cx2, cy2);\n                    x1 = x2;\n                    y1 = y2;\n                }\n            }\n        }\n        if (this.drawBones) {\n            shapes.setColor(this.boneOriginColor);\n            for (let i = 0, n = bones.length; i < n; i++) {\n                let bone = bones[i];\n                if (ignoredBones && ignoredBones.indexOf(bone.data.name) > -1)\n                    continue;\n                shapes.circle(true, bone.worldX, bone.worldY, 3 * this.scale, this.boneOriginColor, 8);\n            }\n        }\n        if (this.drawClipping) {\n            let slots = skeleton.slots;\n            shapes.setColor(this.clipColor);\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof ClippingAttachment))\n                    continue;\n                let clip = attachment;\n                let nn = clip.worldVerticesLength;\n                let world = this.temp = Utils.setArraySize(this.temp, nn, 0);\n                clip.computeWorldVertices(slot, 0, nn, world, 0, 2);\n                for (let i = 0, n = world.length; i < n; i += 2) {\n                    let x = world[i];\n                    let y = world[i + 1];\n                    let x2 = world[(i + 2) % world.length];\n                    let y2 = world[(i + 3) % world.length];\n                    shapes.line(x, y, x2, y2);\n                }\n            }\n        }\n    }\n    dispose() {\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, SkeletonClipping, Vector2, Utils, RegionAttachment, MeshAttachment, ClippingAttachment } from \"@esotericsoftware/spine-core\";\nclass Renderable {\n    vertices;\n    numVertices;\n    numFloats;\n    constructor(vertices, numVertices, numFloats) {\n        this.vertices = vertices;\n        this.numVertices = numVertices;\n        this.numFloats = numFloats;\n    }\n}\n;\nexport class SkeletonRenderer {\n    static QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\n    premultipliedAlpha = false;\n    tempColor = new Color();\n    tempColor2 = new Color();\n    vertices;\n    vertexSize = 2 + 2 + 4;\n    twoColorTint = false;\n    renderable = new Renderable([], 0, 0);\n    clipper = new SkeletonClipping();\n    temp = new Vector2();\n    temp2 = new Vector2();\n    temp3 = new Color();\n    temp4 = new Color();\n    constructor(context, twoColorTint = true) {\n        this.twoColorTint = twoColorTint;\n        if (twoColorTint)\n            this.vertexSize += 4;\n        this.vertices = Utils.newFloatArray(this.vertexSize * 1024);\n    }\n    draw(batcher, skeleton, slotRangeStart = -1, slotRangeEnd = -1, transformer = null) {\n        let clipper = this.clipper;\n        let premultipliedAlpha = this.premultipliedAlpha;\n        let twoColorTint = this.twoColorTint;\n        let blendMode = null;\n        let renderable = this.renderable;\n        let uvs;\n        let triangles;\n        let drawOrder = skeleton.drawOrder;\n        let attachmentColor;\n        let skeletonColor = skeleton.color;\n        let vertexSize = twoColorTint ? 12 : 8;\n        let inRange = false;\n        if (slotRangeStart == -1)\n            inRange = true;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let clippedVertexSize = clipper.isClipping() ? 2 : vertexSize;\n            let slot = drawOrder[i];\n            if (!slot.bone.active) {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (slotRangeStart >= 0 && slotRangeStart == slot.data.index) {\n                inRange = true;\n            }\n            if (!inRange) {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (slotRangeEnd >= 0 && slotRangeEnd == slot.data.index) {\n                inRange = false;\n            }\n            let attachment = slot.getAttachment();\n            let texture;\n            if (attachment instanceof RegionAttachment) {\n                let region = attachment;\n                renderable.vertices = this.vertices;\n                renderable.numVertices = 4;\n                renderable.numFloats = clippedVertexSize << 2;\n                region.computeWorldVertices(slot, renderable.vertices, 0, clippedVertexSize);\n                triangles = SkeletonRenderer.QUAD_TRIANGLES;\n                uvs = region.uvs;\n                texture = region.region.texture;\n                attachmentColor = region.color;\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                renderable.vertices = this.vertices;\n                renderable.numVertices = (mesh.worldVerticesLength >> 1);\n                renderable.numFloats = renderable.numVertices * clippedVertexSize;\n                if (renderable.numFloats > renderable.vertices.length) {\n                    renderable.vertices = this.vertices = Utils.newFloatArray(renderable.numFloats);\n                }\n                mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, renderable.vertices, 0, clippedVertexSize);\n                triangles = mesh.triangles;\n                texture = mesh.region.texture;\n                uvs = mesh.uvs;\n                attachmentColor = mesh.color;\n            }\n            else if (attachment instanceof ClippingAttachment) {\n                let clip = (attachment);\n                clipper.clipStart(slot, clip);\n                continue;\n            }\n            else {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (texture) {\n                let slotColor = slot.color;\n                let finalColor = this.tempColor;\n                finalColor.r = skeletonColor.r * slotColor.r * attachmentColor.r;\n                finalColor.g = skeletonColor.g * slotColor.g * attachmentColor.g;\n                finalColor.b = skeletonColor.b * slotColor.b * attachmentColor.b;\n                finalColor.a = skeletonColor.a * slotColor.a * attachmentColor.a;\n                if (premultipliedAlpha) {\n                    finalColor.r *= finalColor.a;\n                    finalColor.g *= finalColor.a;\n                    finalColor.b *= finalColor.a;\n                }\n                let darkColor = this.tempColor2;\n                if (!slot.darkColor)\n                    darkColor.set(0, 0, 0, 1.0);\n                else {\n                    if (premultipliedAlpha) {\n                        darkColor.r = slot.darkColor.r * finalColor.a;\n                        darkColor.g = slot.darkColor.g * finalColor.a;\n                        darkColor.b = slot.darkColor.b * finalColor.a;\n                    }\n                    else {\n                        darkColor.setFromColor(slot.darkColor);\n                    }\n                    darkColor.a = premultipliedAlpha ? 1.0 : 0.0;\n                }\n                let slotBlendMode = slot.data.blendMode;\n                if (slotBlendMode != blendMode) {\n                    blendMode = slotBlendMode;\n                    batcher.setBlendMode(blendMode, premultipliedAlpha);\n                }\n                if (clipper.isClipping()) {\n                    clipper.clipTriangles(renderable.vertices, renderable.numFloats, triangles, triangles.length, uvs, finalColor, darkColor, twoColorTint);\n                    let clippedVertices = new Float32Array(clipper.clippedVertices);\n                    let clippedTriangles = clipper.clippedTriangles;\n                    if (transformer)\n                        transformer(clippedVertices, clippedVertices.length, vertexSize);\n                    batcher.draw(texture, clippedVertices, clippedTriangles);\n                }\n                else {\n                    let verts = renderable.vertices;\n                    if (!twoColorTint) {\n                        for (let v = 2, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                            verts[v] = finalColor.r;\n                            verts[v + 1] = finalColor.g;\n                            verts[v + 2] = finalColor.b;\n                            verts[v + 3] = finalColor.a;\n                            verts[v + 4] = uvs[u];\n                            verts[v + 5] = uvs[u + 1];\n                        }\n                    }\n                    else {\n                        for (let v = 2, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                            verts[v] = finalColor.r;\n                            verts[v + 1] = finalColor.g;\n                            verts[v + 2] = finalColor.b;\n                            verts[v + 3] = finalColor.a;\n                            verts[v + 4] = uvs[u];\n                            verts[v + 5] = uvs[u + 1];\n                            verts[v + 6] = darkColor.r;\n                            verts[v + 7] = darkColor.g;\n                            verts[v + 8] = darkColor.b;\n                            verts[v + 9] = darkColor.a;\n                        }\n                    }\n                    let view = renderable.vertices.subarray(0, renderable.numFloats);\n                    if (transformer)\n                        transformer(renderable.vertices, renderable.numFloats, vertexSize);\n                    batcher.draw(texture, view, triangles);\n                }\n            }\n            clipper.clipEndWithSlot(slot);\n        }\n        clipper.clipEnd();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25SZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2VsZXRvblJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQW1CLEtBQUssRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUF1QixnQkFBZ0IsRUFBc0IsY0FBYyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFNdk0sTUFBTSxVQUFVO0lBQ0s7SUFBa0M7SUFBNEI7SUFBbEYsWUFBb0IsUUFBeUIsRUFBUyxXQUFtQixFQUFTLFNBQWlCO1FBQS9FLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBQVMsZ0JBQVcsR0FBWCxXQUFXLENBQVE7UUFBUyxjQUFTLEdBQVQsU0FBUyxDQUFRO0lBQUksQ0FBQztDQUN4RztBQUFBLENBQUM7QUFJRixNQUFNLE9BQU8sZ0JBQWdCO0lBQzVCLE1BQU0sQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRTNDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztJQUNuQixTQUFTLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUN4QixVQUFVLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUN6QixRQUFRLENBQWtCO0lBQzFCLFVBQVUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QixZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLFVBQVUsR0FBZSxJQUFJLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2xELE9BQU8sR0FBcUIsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0lBQ25ELElBQUksR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBQ3JCLEtBQUssR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBQ3RCLEtBQUssR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO0lBQ3BCLEtBQUssR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO0lBRTVCLFlBQWEsT0FBcUMsRUFBRSxlQUF3QixJQUFJO1FBQy9FLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksWUFBWTtZQUNmLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRCxJQUFJLENBQUUsT0FBdUIsRUFBRSxRQUFrQixFQUFFLGlCQUF5QixDQUFDLENBQUMsRUFBRSxlQUF1QixDQUFDLENBQUMsRUFBRSxjQUF3QyxJQUFJO1FBQ3RKLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDM0IsSUFBSSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDakQsSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUNyQyxJQUFJLFNBQVMsR0FBcUIsSUFBSSxDQUFDO1FBRXZDLElBQUksVUFBVSxHQUFlLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDN0MsSUFBSSxHQUFvQixDQUFDO1FBQ3pCLElBQUksU0FBd0IsQ0FBQztRQUM3QixJQUFJLFNBQVMsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDO1FBQ25DLElBQUksZUFBc0IsQ0FBQztRQUMzQixJQUFJLGFBQWEsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDO1FBQ25DLElBQUksVUFBVSxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksY0FBYyxJQUFJLENBQUMsQ0FBQztZQUFFLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDekMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNqRCxJQUFJLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7WUFDOUQsSUFBSSxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFDdEIsT0FBTyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDOUIsU0FBUzthQUNUO1lBRUQsSUFBSSxjQUFjLElBQUksQ0FBQyxJQUFJLGNBQWMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDN0QsT0FBTyxHQUFHLElBQUksQ0FBQzthQUNmO1lBRUQsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDYixPQUFPLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM5QixTQUFTO2FBQ1Q7WUFFRCxJQUFJLFlBQVksSUFBSSxDQUFDLElBQUksWUFBWSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUN6RCxPQUFPLEdBQUcsS0FBSyxDQUFDO2FBQ2hCO1lBRUQsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBQ3RDLElBQUksT0FBa0IsQ0FBQztZQUN2QixJQUFJLFVBQVUsWUFBWSxnQkFBZ0IsRUFBRTtnQkFDM0MsSUFBSSxNQUFNLEdBQXFCLFVBQVUsQ0FBQztnQkFDMUMsVUFBVSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO2dCQUNwQyxVQUFVLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztnQkFDM0IsVUFBVSxDQUFDLFNBQVMsR0FBRyxpQkFBaUIsSUFBSSxDQUFDLENBQUM7Z0JBQzlDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztnQkFDN0UsU0FBUyxHQUFHLGdCQUFnQixDQUFDLGNBQWMsQ0FBQztnQkFDNUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUM7Z0JBQ2pCLE9BQU8sR0FBYyxNQUFNLENBQUMsTUFBTyxDQUFDLE9BQU8sQ0FBQztnQkFDNUMsZUFBZSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7YUFDL0I7aUJBQU0sSUFBSSxVQUFVLFlBQVksY0FBYyxFQUFFO2dCQUNoRCxJQUFJLElBQUksR0FBbUIsVUFBVSxDQUFDO2dCQUN0QyxVQUFVLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ3BDLFVBQVUsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3pELFVBQVUsQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDLFdBQVcsR0FBRyxpQkFBaUIsQ0FBQztnQkFDbEUsSUFBSSxVQUFVLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFO29CQUN0RCxVQUFVLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7aUJBQ2hGO2dCQUNELElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO2dCQUN4RyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDM0IsT0FBTyxHQUFjLElBQUksQ0FBQyxNQUFPLENBQUMsT0FBTyxDQUFDO2dCQUMxQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztnQkFDZixlQUFlLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQzthQUM3QjtpQkFBTSxJQUFJLFVBQVUsWUFBWSxrQkFBa0IsRUFBRTtnQkFDcEQsSUFBSSxJQUFJLEdBQXVCLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQzVDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUM5QixTQUFTO2FBQ1Q7aUJBQU07Z0JBQ04sT0FBTyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDOUIsU0FBUzthQUNUO1lBRUQsSUFBSSxPQUFPLEVBQUU7Z0JBQ1osSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztnQkFDM0IsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDaEMsVUFBVSxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQztnQkFDakUsVUFBVSxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQztnQkFDakUsVUFBVSxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQztnQkFDakUsVUFBVSxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQztnQkFDakUsSUFBSSxrQkFBa0IsRUFBRTtvQkFDdkIsVUFBVSxDQUFDLENBQUMsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDO29CQUM3QixVQUFVLENBQUMsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUM7b0JBQzdCLFVBQVUsQ0FBQyxDQUFDLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQztpQkFDN0I7Z0JBQ0QsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTO29CQUNsQixTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO3FCQUN4QjtvQkFDSixJQUFJLGtCQUFrQixFQUFFO3dCQUN2QixTQUFTLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7d0JBQzlDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQzt3QkFDOUMsU0FBUyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDO3FCQUM5Qzt5QkFBTTt3QkFDTixTQUFTLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztxQkFDdkM7b0JBQ0QsU0FBUyxDQUFDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7aUJBQzdDO2dCQUVELElBQUksYUFBYSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUN4QyxJQUFJLGFBQWEsSUFBSSxTQUFTLEVBQUU7b0JBQy9CLFNBQVMsR0FBRyxhQUFhLENBQUM7b0JBQzFCLE9BQU8sQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLGtCQUFrQixDQUFDLENBQUM7aUJBQ3BEO2dCQUVELElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRSxFQUFFO29CQUN6QixPQUFPLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztvQkFDeEksSUFBSSxlQUFlLEdBQUcsSUFBSSxZQUFZLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO29CQUNoRSxJQUFJLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztvQkFDaEQsSUFBSSxXQUFXO3dCQUFFLFdBQVcsQ0FBQyxlQUFlLEVBQUUsZUFBZSxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztvQkFDbEYsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixDQUFDLENBQUM7aUJBQ3pEO3FCQUFNO29CQUNOLElBQUksS0FBSyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUM7b0JBQ2hDLElBQUksQ0FBQyxZQUFZLEVBQUU7d0JBQ2xCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksVUFBVSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUU7NEJBQ2hGLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDOzRCQUN4QixLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7NEJBQzVCLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQzs0QkFDNUIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDOzRCQUM1QixLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDdEIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO3lCQUMxQjtxQkFDRDt5QkFBTTt3QkFDTixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLFVBQVUsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFOzRCQUNoRixLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQzs0QkFDeEIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDOzRCQUM1QixLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7NEJBQzVCLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQzs0QkFDNUIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ3RCLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzs0QkFDMUIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDOzRCQUMzQixLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7NEJBQzNCLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQzs0QkFDM0IsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDO3lCQUMzQjtxQkFDRDtvQkFDRCxJQUFJLElBQUksR0FBSSxVQUFVLENBQUMsUUFBeUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztvQkFDbkYsSUFBSSxXQUFXO3dCQUFFLFdBQVcsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUM7b0JBQ3BGLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztpQkFDdkM7YUFDRDtZQUVELE9BQU8sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDOUI7UUFDRCxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbkIsQ0FBQyJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils } from \"@esotericsoftware/spine-core\";\nimport { OrthoCamera } from \"./Camera.js\";\nimport { PolygonBatcher } from \"./PolygonBatcher.js\";\nimport { Shader } from \"./Shader.js\";\nimport { ShapeRenderer } from \"./ShapeRenderer.js\";\nimport { SkeletonDebugRenderer } from \"./SkeletonDebugRenderer.js\";\nimport { SkeletonRenderer } from \"./SkeletonRenderer.js\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL.js\";\n;\nconst quad = [\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n];\nconst QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\nconst WHITE = new Color(1, 1, 1, 1);\nexport class SceneRenderer {\n    context;\n    canvas;\n    camera;\n    batcher;\n    twoColorTint = false;\n    batcherShader;\n    shapes;\n    shapesShader;\n    activeRenderer = null;\n    skeletonRenderer;\n    skeletonDebugRenderer;\n    constructor(canvas, context, twoColorTint = true) {\n        this.canvas = canvas;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.twoColorTint = twoColorTint;\n        this.camera = new OrthoCamera(canvas.width, canvas.height);\n        this.batcherShader = twoColorTint ? Shader.newTwoColoredTextured(this.context) : Shader.newColoredTextured(this.context);\n        this.batcher = new PolygonBatcher(this.context, twoColorTint);\n        this.shapesShader = Shader.newColored(this.context);\n        this.shapes = new ShapeRenderer(this.context);\n        this.skeletonRenderer = new SkeletonRenderer(this.context, twoColorTint);\n        this.skeletonDebugRenderer = new SkeletonDebugRenderer(this.context);\n    }\n    dispose() {\n        this.batcher.dispose();\n        this.batcherShader.dispose();\n        this.shapes.dispose();\n        this.shapesShader.dispose();\n        this.skeletonDebugRenderer.dispose();\n    }\n    begin() {\n        this.camera.update();\n        this.enableRenderer(this.batcher);\n    }\n    drawSkeleton(skeleton, premultipliedAlpha = false, slotRangeStart = -1, slotRangeEnd = -1, transform = null) {\n        this.enableRenderer(this.batcher);\n        this.skeletonRenderer.premultipliedAlpha = premultipliedAlpha;\n        this.skeletonRenderer.draw(this.batcher, skeleton, slotRangeStart, slotRangeEnd, transform);\n    }\n    drawSkeletonDebug(skeleton, premultipliedAlpha = false, ignoredBones) {\n        this.enableRenderer(this.shapes);\n        this.skeletonDebugRenderer.premultipliedAlpha = premultipliedAlpha;\n        this.skeletonDebugRenderer.draw(this.shapes, skeleton, ignoredBones);\n    }\n    drawTexture(texture, x, y, width, height, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawTextureUV(texture, x, y, width, height, u, v, u2, v2, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u;\n        quad[i++] = v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u2;\n        quad[i++] = v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u2;\n        quad[i++] = v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u;\n        quad[i++] = v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawTextureRotated(texture, x, y, width, height, pivotX, pivotY, angle, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        // bottom left and top right corner points relative to origin\n        let worldOriginX = x + pivotX;\n        let worldOriginY = y + pivotY;\n        let fx = -pivotX;\n        let fy = -pivotY;\n        let fx2 = width - pivotX;\n        let fy2 = height - pivotY;\n        // construct corner points, start from top left and go counter clockwise\n        let p1x = fx;\n        let p1y = fy;\n        let p2x = fx;\n        let p2y = fy2;\n        let p3x = fx2;\n        let p3y = fy2;\n        let p4x = fx2;\n        let p4y = fy;\n        let x1 = 0;\n        let y1 = 0;\n        let x2 = 0;\n        let y2 = 0;\n        let x3 = 0;\n        let y3 = 0;\n        let x4 = 0;\n        let y4 = 0;\n        // rotate\n        if (angle != 0) {\n            let cos = MathUtils.cosDeg(angle);\n            let sin = MathUtils.sinDeg(angle);\n            x1 = cos * p1x - sin * p1y;\n            y1 = sin * p1x + cos * p1y;\n            x4 = cos * p2x - sin * p2y;\n            y4 = sin * p2x + cos * p2y;\n            x3 = cos * p3x - sin * p3y;\n            y3 = sin * p3x + cos * p3y;\n            x2 = x3 + (x1 - x4);\n            y2 = y3 + (y1 - y4);\n        }\n        else {\n            x1 = p1x;\n            y1 = p1y;\n            x4 = p2x;\n            y4 = p2y;\n            x3 = p3x;\n            y3 = p3y;\n            x2 = p4x;\n            y2 = p4y;\n        }\n        x1 += worldOriginX;\n        y1 += worldOriginY;\n        x2 += worldOriginX;\n        y2 += worldOriginY;\n        x3 += worldOriginX;\n        y3 += worldOriginY;\n        x4 += worldOriginX;\n        y4 += worldOriginY;\n        var i = 0;\n        quad[i++] = x1;\n        quad[i++] = y1;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x2;\n        quad[i++] = y2;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x3;\n        quad[i++] = y3;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x4;\n        quad[i++] = y4;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawRegion(region, x, y, width, height, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u;\n        quad[i++] = region.v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u2;\n        quad[i++] = region.v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u2;\n        quad[i++] = region.v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u;\n        quad[i++] = region.v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(region.page.texture, quad, QUAD_TRIANGLES);\n    }\n    line(x, y, x2, y2, color, color2) {\n        this.enableRenderer(this.shapes);\n        this.shapes.line(x, y, x2, y2, color);\n    }\n    triangle(filled, x, y, x2, y2, x3, y3, color, color2, color3) {\n        this.enableRenderer(this.shapes);\n        this.shapes.triangle(filled, x, y, x2, y2, x3, y3, color, color2, color3);\n    }\n    quad(filled, x, y, x2, y2, x3, y3, x4, y4, color, color2, color3, color4) {\n        this.enableRenderer(this.shapes);\n        this.shapes.quad(filled, x, y, x2, y2, x3, y3, x4, y4, color, color2, color3, color4);\n    }\n    rect(filled, x, y, width, height, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.rect(filled, x, y, width, height, color);\n    }\n    rectLine(filled, x1, y1, x2, y2, width, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.rectLine(filled, x1, y1, x2, y2, width, color);\n    }\n    polygon(polygonVertices, offset, count, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.polygon(polygonVertices, offset, count, color);\n    }\n    circle(filled, x, y, radius, color, segments = 0) {\n        this.enableRenderer(this.shapes);\n        this.shapes.circle(filled, x, y, radius, color, segments);\n    }\n    curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color);\n    }\n    end() {\n        if (this.activeRenderer === this.batcher)\n            this.batcher.end();\n        else if (this.activeRenderer === this.shapes)\n            this.shapes.end();\n        this.activeRenderer = null;\n    }\n    resize(resizeMode) {\n        let canvas = this.canvas;\n        var dpr = window.devicePixelRatio || 1;\n        var w = Math.round(canvas.clientWidth * dpr);\n        var h = Math.round(canvas.clientHeight * dpr);\n        if (canvas.width != w || canvas.height != h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n        this.context.gl.viewport(0, 0, canvas.width, canvas.height);\n        // Nothing to do for stretch, we simply apply the viewport size of the camera.\n        if (resizeMode === ResizeMode.Expand)\n            this.camera.setViewport(w, h);\n        else if (resizeMode === ResizeMode.Fit) {\n            let sourceWidth = canvas.width, sourceHeight = canvas.height;\n            let targetWidth = this.camera.viewportWidth, targetHeight = this.camera.viewportHeight;\n            let targetRatio = targetHeight / targetWidth;\n            let sourceRatio = sourceHeight / sourceWidth;\n            let scale = targetRatio < sourceRatio ? targetWidth / sourceWidth : targetHeight / sourceHeight;\n            this.camera.setViewport(sourceWidth * scale, sourceHeight * scale);\n        }\n        this.camera.update();\n    }\n    enableRenderer(renderer) {\n        if (this.activeRenderer === renderer)\n            return;\n        this.end();\n        if (renderer instanceof PolygonBatcher) {\n            this.batcherShader.bind();\n            this.batcherShader.setUniform4x4f(Shader.MVP_MATRIX, this.camera.projectionView.values);\n            this.batcherShader.setUniformi(\"u_texture\", 0);\n            this.batcher.begin(this.batcherShader);\n            this.activeRenderer = this.batcher;\n        }\n        else if (renderer instanceof ShapeRenderer) {\n            this.shapesShader.bind();\n            this.shapesShader.setUniform4x4f(Shader.MVP_MATRIX, this.camera.projectionView.values);\n            this.shapes.begin(this.shapesShader);\n            this.activeRenderer = this.shapes;\n        }\n        else\n            this.activeRenderer = this.skeletonDebugRenderer;\n    }\n}\nexport var ResizeMode;\n(function (ResizeMode) {\n    ResizeMode[ResizeMode[\"Stretch\"] = 0] = \"Stretch\";\n    ResizeMode[ResizeMode[\"Expand\"] = 1] = \"Expand\";\n    ResizeMode[ResizeMode[\"Fit\"] = 2] = \"Fit\";\n})(ResizeMode || (ResizeMode = {}));\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Texture } from \"@esotericsoftware/spine-core\";\nexport class CanvasTexture extends Texture {\n    constructor(image) {\n        super(image);\n    }\n    setFilters(minFilter, magFilter) { }\n    setWraps(uWrap, vWrap) { }\n    dispose() { }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FudmFzVGV4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9DYW52YXNUZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQUUsT0FBTyxFQUE4QixNQUFNLDhCQUE4QixDQUFDO0FBRW5GLE1BQU0sT0FBTyxhQUFjLFNBQVEsT0FBTztJQUN6QyxZQUFhLEtBQXFDO1FBQ2pELEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNkLENBQUM7SUFFRCxVQUFVLENBQUUsU0FBd0IsRUFBRSxTQUF3QixJQUFJLENBQUM7SUFDbkUsUUFBUSxDQUFFLEtBQWtCLEVBQUUsS0FBa0IsSUFBSSxDQUFDO0lBQ3JELE9BQU8sS0FBTSxDQUFDO0NBQ2QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils, Color, RegionAttachment, MeshAttachment } from \"@esotericsoftware/spine-core\";\nconst worldVertices = Utils.newFloatArray(8);\nexport class SkeletonRenderer {\n    static QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\n    static VERTEX_SIZE = 2 + 2 + 4;\n    ctx;\n    triangleRendering = false;\n    debugRendering = false;\n    vertices = Utils.newFloatArray(8 * 1024);\n    tempColor = new Color();\n    constructor(context) {\n        this.ctx = context;\n    }\n    draw(skeleton) {\n        if (this.triangleRendering)\n            this.drawTriangles(skeleton);\n        else\n            this.drawImages(skeleton);\n    }\n    drawImages(skeleton) {\n        let ctx = this.ctx;\n        let color = this.tempColor;\n        let skeletonColor = skeleton.color;\n        let drawOrder = skeleton.drawOrder;\n        if (this.debugRendering)\n            ctx.strokeStyle = \"green\";\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            let bone = slot.bone;\n            if (!bone.active)\n                continue;\n            let attachment = slot.getAttachment();\n            if (!(attachment instanceof RegionAttachment))\n                continue;\n            attachment.computeWorldVertices(slot, worldVertices, 0, 2);\n            let region = attachment.region;\n            let image = region.texture.getImage();\n            let slotColor = slot.color;\n            let regionColor = attachment.color;\n            color.set(skeletonColor.r * slotColor.r * regionColor.r, skeletonColor.g * slotColor.g * regionColor.g, skeletonColor.b * slotColor.b * regionColor.b, skeletonColor.a * slotColor.a * regionColor.a);\n            ctx.save();\n            ctx.transform(bone.a, bone.c, bone.b, bone.d, bone.worldX, bone.worldY);\n            ctx.translate(attachment.offset[0], attachment.offset[1]);\n            ctx.rotate(attachment.rotation * Math.PI / 180);\n            let atlasScale = attachment.width / region.originalWidth;\n            ctx.scale(atlasScale * attachment.scaleX, atlasScale * attachment.scaleY);\n            let w = region.width, h = region.height;\n            ctx.translate(w / 2, h / 2);\n            if (attachment.region.degrees == 90) {\n                let t = w;\n                w = h;\n                h = t;\n                ctx.rotate(-Math.PI / 2);\n            }\n            ctx.scale(1, -1);\n            ctx.translate(-w / 2, -h / 2);\n            ctx.globalAlpha = color.a;\n            ctx.drawImage(image, image.width * region.u, image.height * region.v, w, h, 0, 0, w, h);\n            if (this.debugRendering)\n                ctx.strokeRect(0, 0, w, h);\n            ctx.restore();\n        }\n    }\n    drawTriangles(skeleton) {\n        let ctx = this.ctx;\n        let color = this.tempColor;\n        let skeletonColor = skeleton.color;\n        let drawOrder = skeleton.drawOrder;\n        let blendMode = null;\n        let vertices = this.vertices;\n        let triangles = null;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            let attachment = slot.getAttachment();\n            let texture;\n            let region;\n            if (attachment instanceof RegionAttachment) {\n                let regionAttachment = attachment;\n                vertices = this.computeRegionVertices(slot, regionAttachment, false);\n                triangles = SkeletonRenderer.QUAD_TRIANGLES;\n                texture = regionAttachment.region.texture.getImage();\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                vertices = this.computeMeshVertices(slot, mesh, false);\n                triangles = mesh.triangles;\n                texture = mesh.region.texture.getImage();\n            }\n            else\n                continue;\n            if (texture) {\n                if (slot.data.blendMode != blendMode)\n                    blendMode = slot.data.blendMode;\n                let slotColor = slot.color;\n                let attachmentColor = attachment.color;\n                color.set(skeletonColor.r * slotColor.r * attachmentColor.r, skeletonColor.g * slotColor.g * attachmentColor.g, skeletonColor.b * slotColor.b * attachmentColor.b, skeletonColor.a * slotColor.a * attachmentColor.a);\n                ctx.globalAlpha = color.a;\n                for (var j = 0; j < triangles.length; j += 3) {\n                    let t1 = triangles[j] * 8, t2 = triangles[j + 1] * 8, t3 = triangles[j + 2] * 8;\n                    let x0 = vertices[t1], y0 = vertices[t1 + 1], u0 = vertices[t1 + 6], v0 = vertices[t1 + 7];\n                    let x1 = vertices[t2], y1 = vertices[t2 + 1], u1 = vertices[t2 + 6], v1 = vertices[t2 + 7];\n                    let x2 = vertices[t3], y2 = vertices[t3 + 1], u2 = vertices[t3 + 6], v2 = vertices[t3 + 7];\n                    this.drawTriangle(texture, x0, y0, u0, v0, x1, y1, u1, v1, x2, y2, u2, v2);\n                    if (this.debugRendering) {\n                        ctx.strokeStyle = \"green\";\n                        ctx.beginPath();\n                        ctx.moveTo(x0, y0);\n                        ctx.lineTo(x1, y1);\n                        ctx.lineTo(x2, y2);\n                        ctx.lineTo(x0, y0);\n                        ctx.stroke();\n                    }\n                }\n            }\n        }\n        this.ctx.globalAlpha = 1;\n    }\n    // Adapted from http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n    // Apache 2 licensed\n    drawTriangle(img, x0, y0, u0, v0, x1, y1, u1, v1, x2, y2, u2, v2) {\n        let ctx = this.ctx;\n        u0 *= img.width;\n        v0 *= img.height;\n        u1 *= img.width;\n        v1 *= img.height;\n        u2 *= img.width;\n        v2 *= img.height;\n        ctx.beginPath();\n        ctx.moveTo(x0, y0);\n        ctx.lineTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.closePath();\n        x1 -= x0;\n        y1 -= y0;\n        x2 -= x0;\n        y2 -= y0;\n        u1 -= u0;\n        v1 -= v0;\n        u2 -= u0;\n        v2 -= v0;\n        var det = 1 / (u1 * v2 - u2 * v1), \n        // linear transformation\n        a = (v2 * x1 - v1 * x2) * det, b = (v2 * y1 - v1 * y2) * det, c = (u1 * x2 - u2 * x1) * det, d = (u1 * y2 - u2 * y1) * det, \n        // translation\n        e = x0 - a * u0 - c * v0, f = y0 - b * u0 - d * v0;\n        ctx.save();\n        ctx.transform(a, b, c, d, e, f);\n        ctx.clip();\n        ctx.drawImage(img, 0, 0);\n        ctx.restore();\n    }\n    computeRegionVertices(slot, region, pma) {\n        let skeletonColor = slot.bone.skeleton.color;\n        let slotColor = slot.color;\n        let regionColor = region.color;\n        let alpha = skeletonColor.a * slotColor.a * regionColor.a;\n        let multiplier = pma ? alpha : 1;\n        let color = this.tempColor;\n        color.set(skeletonColor.r * slotColor.r * regionColor.r * multiplier, skeletonColor.g * slotColor.g * regionColor.g * multiplier, skeletonColor.b * slotColor.b * regionColor.b * multiplier, alpha);\n        region.computeWorldVertices(slot, this.vertices, 0, SkeletonRenderer.VERTEX_SIZE);\n        let vertices = this.vertices;\n        let uvs = region.uvs;\n        vertices[RegionAttachment.C1R] = color.r;\n        vertices[RegionAttachment.C1G] = color.g;\n        vertices[RegionAttachment.C1B] = color.b;\n        vertices[RegionAttachment.C1A] = color.a;\n        vertices[RegionAttachment.U1] = uvs[0];\n        vertices[RegionAttachment.V1] = uvs[1];\n        vertices[RegionAttachment.C2R] = color.r;\n        vertices[RegionAttachment.C2G] = color.g;\n        vertices[RegionAttachment.C2B] = color.b;\n        vertices[RegionAttachment.C2A] = color.a;\n        vertices[RegionAttachment.U2] = uvs[2];\n        vertices[RegionAttachment.V2] = uvs[3];\n        vertices[RegionAttachment.C3R] = color.r;\n        vertices[RegionAttachment.C3G] = color.g;\n        vertices[RegionAttachment.C3B] = color.b;\n        vertices[RegionAttachment.C3A] = color.a;\n        vertices[RegionAttachment.U3] = uvs[4];\n        vertices[RegionAttachment.V3] = uvs[5];\n        vertices[RegionAttachment.C4R] = color.r;\n        vertices[RegionAttachment.C4G] = color.g;\n        vertices[RegionAttachment.C4B] = color.b;\n        vertices[RegionAttachment.C4A] = color.a;\n        vertices[RegionAttachment.U4] = uvs[6];\n        vertices[RegionAttachment.V4] = uvs[7];\n        return vertices;\n    }\n    computeMeshVertices(slot, mesh, pma) {\n        let skeletonColor = slot.bone.skeleton.color;\n        let slotColor = slot.color;\n        let regionColor = mesh.color;\n        let alpha = skeletonColor.a * slotColor.a * regionColor.a;\n        let multiplier = pma ? alpha : 1;\n        let color = this.tempColor;\n        color.set(skeletonColor.r * slotColor.r * regionColor.r * multiplier, skeletonColor.g * slotColor.g * regionColor.g * multiplier, skeletonColor.b * slotColor.b * regionColor.b * multiplier, alpha);\n        let vertexCount = mesh.worldVerticesLength / 2;\n        let vertices = this.vertices;\n        if (vertices.length < mesh.worldVerticesLength)\n            this.vertices = vertices = Utils.newFloatArray(mesh.worldVerticesLength);\n        mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, vertices, 0, SkeletonRenderer.VERTEX_SIZE);\n        let uvs = mesh.uvs;\n        for (let i = 0, u = 0, v = 2; i < vertexCount; i++) {\n            vertices[v++] = color.r;\n            vertices[v++] = color.g;\n            vertices[v++] = color.b;\n            vertices[v++] = color.a;\n            vertices[v++] = uvs[u++];\n            vertices[v++] = uvs[u++];\n            v += 2;\n        }\n        return vertices;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nexport default class SpineBaseGameObject extends Phaser.PIXI.DisplayObject {\n  constructor(game, x, y) {\n    super(game);\n    this.x = x || 0;\n    this.y = y || 0;\n    this.type = Phaser.SPRITE;\n    this.physicsType = Phaser.SPRITE;\n\n    Phaser.Component.Core.init.call(this, game, x, y);\n  }\n\n  get width() {\n    return this.getBounds().width * this.scale.x;\n  }\n\n  set width(value) {\n    const { width } = this.getBounds();\n\n    if (width !== 0) {\n      this.scale.x = value / width;\n    } else {\n      this.scale.x = 1;\n    }\n\n    this._width = value;\n  }\n\n  get height() {\n    return this.getBounds().height * this.scale.y;\n  }\n\n  set height(value) {\n    const { height } = this.getBounds();\n\n    if (height !== 0) {\n      this.scale.y = value / height;\n    } else {\n      this.scale.y = 1;\n    }\n\n    this._height = value;\n  }\n}\n\nPhaser.Component.Core.install.call(SpineBaseGameObject.prototype, [\n  'Angle',\n  /* 'Animation', */\n  'AutoCull',\n  'Bounds',\n  'BringToTop',\n  /* 'Crop', */\n  'Delta',\n  'Destroy',\n  'FixedToCamera',\n  /* 'Health', */\n  'InCamera',\n  'InputEnabled',\n  'InWorld',\n  /* 'LifeSpan', */\n  /* 'LoadTexture', */\n  'Overlap',\n  'PhysicsBody',\n  'Reset'\n  /* 'ScaleMinMax', */\n  /* 'Smoothed' */\n]);\n\nSpineBaseGameObject.prototype.preUpdatePhysics = Phaser.Component.PhysicsBody.preUpdate;\nSpineBaseGameObject.prototype.preUpdateLifeSpan = Phaser.Component.LifeSpan.preUpdate;\nSpineBaseGameObject.prototype.preUpdateInWorld = Phaser.Component.InWorld.preUpdate;\nSpineBaseGameObject.prototype.preUpdateCore = Phaser.Component.Core.preUpdate;\n\nSpineBaseGameObject.prototype.preUpdate = function preUpdate() {\n  if (!this.preUpdatePhysics() || !this.preUpdateLifeSpan() || !this.preUpdateInWorld()) {\n    return false;\n  }\n\n  return this.preUpdateCore();\n};\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { Skeleton } from '@esotericsoftware/spine-core';\nimport {\n  AtlasAttachmentLoader, GLTexture, SkeletonBinary,\n  SkeletonJson, TextureAtlas\n} from '@esotericsoftware/spine-webgl';\nimport { CanvasTexture } from '@esotericsoftware/spine-canvas';\n\nexport default class SpineSkeleton {\n  constructor(game, plugin, key, gameObject) {\n    this.key = key;\n    this.game = game;\n    this.plugin = plugin;\n    this.gameObject = gameObject;\n\n    this.setKeys(key);\n    this.setSkeletonData();\n  }\n\n  setKeys(key) {\n    this.keys = {\n      root: key,\n      image: `${key}-image`,\n      text: `${key}-text`,\n      json: `${key}-json`,\n      binary: `${key}-binary`,\n      atlas: `${key}-atlas`,\n      skeleton: `${key}-skeleton`\n    };\n  }\n\n  setSkeletonData() {\n    Skeleton.yDown = true;\n    this.skeleton = this.createSkeleton();\n  }\n\n  /** Creates a new Skeleton instance from the data and atlas. */\n  createSkeleton() {\n    return new Skeleton(this.getSkeletonData());\n  }\n\n  /** Returns the SkeletonData instance for the given data and atlas key */\n  getSkeletonData() {\n    const atlas = this.getAtlas();\n    let skeletonData;\n    if (this.game.cache.checkSpineSkeleton(this.keys.skeleton)) {\n      skeletonData = this.game.cache.getSpineSkeleton(this.keys.skeleton);\n    } else {\n      if (this.game.cache.checkJSONKey(this.keys.json)) {\n        const jsonFile = this.game.cache.getJSON(this.keys.json);\n        const json = new SkeletonJson(new AtlasAttachmentLoader(atlas));\n        skeletonData = json.readSkeletonData(jsonFile);\n      } else {\n        const binaryFile = this.game.cache.getBinary(this.keys.binary);\n        const binary = new SkeletonBinary(new AtlasAttachmentLoader(atlas));\n        skeletonData = binary.readSkeletonData(new Uint8Array(binaryFile));\n      }\n      this.game.cache.addSpineSkeleton(this.keys.skeleton, skeletonData);\n    }\n    return skeletonData;\n  }\n\n  /** Returns the TextureAtlas instance */\n  getAtlas() {\n    let atlas;\n    if (this.game.cache.checkSpineAtlas(this.keys.atlas)) {\n      atlas = this.game.cache.getSpineAtlas(this.keys.atlas);\n    } else {\n      const atlasFile = this.game.cache.getText(this.keys.text);\n      atlas = new TextureAtlas(atlasFile);\n      if (this.plugin.isWebGL) {\n        this.plugin.gl.pixelStorei(this.plugin.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        if (atlas.pages.length < 2) {\n          const imageFile = this.game.cache.getImage(this.keys.image);\n          atlas.pages[0].setTexture(new GLTexture(this.plugin.gl, imageFile, false));\n        } else {\n          for (const atlasPage of atlas.pages) {\n            const name = atlasPage.name.replace(/\\.[^/.]+$/gm, '').toLocaleLowerCase();\n            const imageFile = this.game.cache.getImage(`${this.keys.root}-${name}`);\n            atlasPage.setTexture(new GLTexture(this.plugin.gl, imageFile, false));\n          }\n        }\n      } else if (atlas.pages.length < 2) {\n        const imageFile = this.game.cache.getImage(this.keys.image);\n        atlas.pages[0].setTexture(new CanvasTexture(imageFile));\n      } else {\n        for (const atlasPage of atlas.pages) {\n          const name = atlasPage.name.replace(/\\.[^/.]+$/gm, '').toLocaleLowerCase();\n          const imageFile = this.game.cache.getImage(`${this.keys.root}-${name}`);\n          atlasPage.setTexture(new CanvasTexture(imageFile));\n        }\n      }\n      this.game.cache.addSpineAtlas(this.keys.atlas, atlas);\n    }\n    return atlas;\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { AnimationState, Skeleton, Skin } from '@esotericsoftware/spine-core';\n\nexport default class SpineUtils {\n  /** Converts a point from the skeleton coordinate system to the Phaser world coordinate system. */\n  static skeletonToPhaserWorldCoordinates(point) {\n    const transform = this.worldTransform;\n    const {\n      a, b, c, d, tx, ty\n    } = transform;\n    const { x, y } = point;\n    point.x = x * a + y * c + tx;\n    point.y = x * b + y * d + ty;\n  }\n\n  /** Converts a point from the Phaser world coordinate system to the skeleton coordinate system. */\n  static phaserWorldCoordinatesToSkeleton(point) {\n    let transform = this.worldTransform;\n    transform = transform.invert();\n    const {\n      a, b, c, d, tx, ty\n    } = transform;\n    const { x, y } = point;\n    point.x = x * a + y * c + tx;\n    point.y = x * b + y * d + ty;\n  }\n\n  /** Converts a point from the Phaser world coordinate system to the bone's local coordinate system. */\n  static phaserWorldCoordinatesToBone(point, bone) {\n    this.phaserWorldCoordinatesToSkeleton(point);\n    if (bone.parent) {\n      bone.parent.worldToLocal(point);\n    } else {\n      bone.worldToLocal(point);\n    }\n  }\n\n  /** A bounds provider that calculates the bounding box from the setup pose. */\n  static calculateBounds(gameObject) {\n    if (!gameObject.skeleton) {\n      return {\n        x: 0, y: 0, width: 0, height: 0\n      };\n    }\n    // Make a copy of animation state and skeleton as this might be called while\n    // the skeleton in the GameObject has already been heavily modified. We can not\n    // reconstruct that state.\n    const skeleton = new Skeleton(gameObject.skeleton.data);\n    skeleton.setToSetupPose();\n    skeleton.updateWorldTransform();\n    const bounds = skeleton.getBoundsRect();\n    return bounds.width === Number.NEGATIVE_INFINITY ? {\n      x: 0, y: 0, width: 0, height: 0\n    } : bounds;\n  }\n\n  /** A bounds provider that calculates the bounding box by taking the maximumg bounding box for a combination of skins and specific animation. */\n  static calculateSkinBounds(gameObject, animations, skins = [], timeStep = 0.05) {\n    const defaultBounds = {\n      x: 0, y: 0, width: 0, height: 0\n    };\n\n    if (!gameObject.skeleton || !gameObject.animationState) return defaultBounds;\n\n    // Make a copy of animation state and skeleton as this might be called while\n    // the skeleton in the GameObject has already been heavily modified. We can not\n    // reconstruct that state.\n    const animationState = new AnimationState(gameObject.animationState.data);\n    const skeleton = new Skeleton(gameObject.skeleton.data);\n    const { data } = skeleton;\n    if (skins.length > 0) {\n      const customSkin = new Skin('custom-skin');\n      for (const skinName of skins) {\n        const skin = data.findSkin(skinName);\n        if (skin !== null) customSkin.addSkin(skin);\n      }\n      skeleton.setSkin(customSkin);\n    }\n    skeleton.setToSetupPose();\n\n    const animation = animations != null ? data.findAnimation(animations) : null;\n    if (animation == null) {\n      skeleton.updateWorldTransform();\n      const bounds = skeleton.getBoundsRect();\n      return bounds.width === Number.NEGATIVE_INFINITY ? defaultBounds : bounds;\n    }\n\n    let minX = Number.POSITIVE_INFINITY;\n    let minY = Number.POSITIVE_INFINITY;\n    let maxX = Number.NEGATIVE_INFINITY;\n    let maxY = Number.NEGATIVE_INFINITY;\n    animationState.clearTracks();\n    animationState.setAnimationWith(0, animation, false);\n    const steps = Math.max(animation.duration / timeStep, 1.0);\n\n    for (let i = 0; i < steps; i++) {\n      animationState.update(i > 0 ? timeStep : 0);\n      animationState.apply(skeleton);\n      skeleton.updateWorldTransform();\n      const bounds = skeleton.getBoundsRect();\n      minX = Math.min(minX, bounds.x);\n      minY = Math.min(minY, bounds.y);\n      maxX = Math.max(maxX, minX + bounds.width);\n      maxY = Math.max(maxY, minY + bounds.height);\n    }\n\n    const bounds = {\n      x: minX, y: minY, width: maxX - minX, height: maxY - minY\n    };\n\n    return bounds.width === Number.NEGATIVE_INFINITY ? defaultBounds : bounds;\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { AnimationState, AnimationStateData, SkeletonBounds, Vector2 } from '@esotericsoftware/spine-core';\nimport SpineBaseGameObject from './spineBaseGameObject';\nimport SpineSkeleton from './spineSkeleton';\nimport SpineUtils from './spineUtils';\n\nexport default class SpineGameObject extends SpineBaseGameObject {\n  constructor(game, plugin, x, y, key, premultipliedAlpha = false) {\n    super(game, x, y);\n    this.key = key;\n    this.game = game;\n    this.plugin = plugin;\n    this.premultipliedAlpha = premultipliedAlpha;\n    this.scaleMode = Phaser.PIXI.scaleModes.LINEAR;\n    this.utils = new SpineUtils();\n\n    this.debug = false;\n    this.enableCanvasMesh = false;\n\n    this._setCallbacks();\n    this._setSpine();\n  }\n\n  _setCallbacks() {\n    this.beforeUpdateWorldTransforms = () => { };\n    this.afterUpdateWorldTransforms = () => { };\n  }\n\n  _setSpine() {\n    this.skeleton = new SpineSkeleton(this.game, this.plugin, this.key, this).skeleton;\n    this.animationStateData = new AnimationStateData(this.skeleton.data);\n    this.animationState = new AnimationState(this.animationStateData);\n    this.skeletonBounds = new SkeletonBounds();\n    this.boundsOffset = new Vector2();\n    this.boundsSize = new Vector2();\n    this.boundsTemp = new Array(2);\n  }\n\n  _checkSpine() {\n    return (\n      !this.inCamera\n      || !this.visible\n      || this.alpha <= 0\n      || !this.skeleton\n      || !this.animationState\n    );\n  }\n\n  getBounds() {\n    const bounds = this._bounds;\n    const { data } = this.skeleton;\n\n    if (!data.x) {\n      this.skeleton.getBounds(this.boundsOffset, this.boundsSize, this.boundsTemp);\n      if (this.boundsSize.x !== Number.NEGATIVE_INFINITY) {\n        data.x = this.boundsOffset.x;\n        data.width = this.boundsSize.x;\n        data.y = -this.boundsOffset.y;\n        data.height = -this.boundsSize.y;\n      }\n    }\n\n    const w0 = data.x;\n    const w1 = data.width + w0;\n\n    const h0 = -data.y;\n    const h1 = -data.height + h0;\n\n    const { a, b, c, d, tx, ty } = this.worldTransform;\n\n    const x1 = a * w1 + c * h1 + tx;\n    const y1 = d * h1 + b * w1 + ty;\n\n    const x2 = a * w0 + c * h1 + tx;\n    const y2 = d * h1 + b * w0 + ty;\n\n    const x3 = a * w0 + c * h0 + tx;\n    const y3 = d * h0 + b * w0 + ty;\n\n    const x4 = a * w1 + c * h0 + tx;\n    const y4 = d * h0 + b * w1 + ty;\n\n    const maxX = Math.max(x1, x2, x3, x4);\n    const maxY = Math.max(y1, y2, y3, y4);\n\n    const minX = Math.min(x1, x2, x3, x4);\n    const minY = Math.min(y1, y2, y3, y4);\n\n    bounds.x = minX;\n    bounds.width = maxX - minX;\n\n    bounds.y = minY;\n    bounds.height = maxY - minY;\n\n    return bounds;\n  }\n\n  /* Rebuilds to replace current spine */\n  replaceSpine(key) {\n    this.key = key;\n    this._setSpine();\n  }\n\n  preUpdate() {\n    /* super.preUpdate(); */\n    if (this._checkSpine()) return;\n    this.updatePose(this.game.time.delta);\n  }\n\n  update() {\n    /* super.update(); */\n  }\n\n  postUpdate() {\n    // This object cant have children to postUpdate, so we can skip super.postUpdate();\n  }\n\n  updatePose(delta) {\n    this.animationState.update(delta / 1000);\n    this.animationState.apply(this.skeleton);\n    this.beforeUpdateWorldTransforms(this);\n    this.skeleton.updateWorldTransform();\n    this.afterUpdateWorldTransforms(this);\n  }\n\n  destroy() {\n    this.destroyPhase = true;\n    this.renderable = false;\n\n    if (this.events) {\n      this.events.onDestroy$dispatch(this);\n    }\n\n    if (this.parent) {\n      if (this.parent instanceof Phaser.Group) {\n        this.parent.remove(this);\n      } else {\n        this.parent.removeChild(this);\n      }\n    }\n\n    if (this.input) {\n      this.input.destroy();\n    }\n\n    if (this.transformCallback) {\n      this.transformCallback = null;\n      this.transformCallbackContext = null;\n    }\n\n    this.game.tweens.removeFrom(this);\n\n    delete this.skeleton;\n    delete this.animationStateData;\n    delete this.animationState;\n    delete this.skeletonBounds;\n    delete this.spineBounds;\n    delete this.boundsOffset;\n    delete this.boundsSize;\n    delete this.boundsTemp;\n    delete this.beforeUpdateWorldTransforms;\n    delete this.afterUpdateWorldTransforms;\n    delete this.debug;\n    delete this.enableCanvasMesh;\n    delete this.utils;\n    delete this.scaleMode;\n    delete this.key;\n    delete this.premultipliedAlpha;\n\n    delete this.alive;\n    delete this.exists;\n    delete this.visible;\n    delete this.filters;\n    delete this.mask;\n    delete this.game;\n    delete this.data;\n\n    delete this.hitArea;\n    delete this.parent;\n    delete this.stage;\n    delete this.worldTransform;\n    delete this.filterArea;\n    delete this._bounds;\n    delete this._currentBounds;\n    delete this._mask;\n\n    this._destroyCachedSprite();\n\n    this.destroyPhase = false;\n    this.pendingDestroy = false;\n  }\n\n  _renderWebGL(renderer) {\n    if (this._checkSpine() || !this.plugin.webGLRenderer) return;\n\n    const { currentBlendMode } = renderer.blendModeManager;\n    const { currentShader } = renderer.shaderManager;\n    renderer.spriteBatch.stop();\n    for (let i = 0; i < renderer.shaderManager.attribState.length; i++) {\n      renderer.shaderManager.attribState[i] = null;\n      renderer.gl.disableVertexAttribArray(i);\n    }\n\n    const { a, b, c, d, tx, ty } = this.worldTransform;\n    const sceneRenderer = this.plugin.webGLRenderer;\n\n    if (this._mask) {\n      renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    if (this._filters) {\n      renderer.filterManager.pushFilter(this._filterBlock);\n    }\n\n    // check blend mode\n    /* if (this.blendMode && this.blendMode !== spriteBatch.currentBlendMode) {\n      const blendModeWebGL = Phaser.PIXI.blendModesWebGL[spriteBatch.currentBlendMode];\n      renderer.blendModeManager.setBlendMode(blendModeWebGL);\n    } */\n\n    sceneRenderer.begin();\n    sceneRenderer.drawSkeleton(this.skeleton, this.premultipliedAlpha, -1, -1, (vertices, numVertices, stride) => {\n      for (let i = 0; i < numVertices; i += stride) {\n        const vx = vertices[i];\n        const vy = vertices[i + 1];\n        vertices[i] = vx * a + vy * c + tx;\n        vertices[i + 1] = vx * b + vy * d + ty;\n      }\n    });\n\n    sceneRenderer.end();\n\n    if (this._filters) {\n      renderer.filterManager.popFilter();\n    }\n\n    if (this._mask) {\n      renderer.maskManager.popMask(this.mask, renderer);\n    }\n\n    renderer.drawCount++;\n\n    renderer.blendModeManager.currentBlendMode = -1;\n    renderer.blendModeManager.setBlendMode(currentBlendMode);\n    renderer.gl.enable(renderer.gl.BLEND);\n    renderer.shaderManager._currentId = null;\n    renderer.shaderManager.setShader(currentShader);\n    renderer.spriteBatch.start();\n\n    if (this.debug) this._debug();\n  }\n\n  _renderCanvas(renderer) {\n    if (this._checkSpine() || !this.plugin.canvasRenderer) return;\n\n    const { context } = renderer;\n    const { a, b, c, d, tx, ty } = this.worldTransform;\n    const { skeleton } = this;\n    const skeletonRenderer = this.plugin.canvasRenderer;\n\n    context.setTransform(a, b, c, d, tx, ty);\n\n    if (this.blendMode && this.blendMode !== renderer.currentBlendMode) {\n      renderer.currentBlendMode = this.blendMode;\n      renderer.context.globalCompositeOperation = Phaser.PIXI.blendModesCanvas[renderer.currentBlendMode];\n    }\n\n    if (this._mask) {\n      renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    if (renderer.smoothProperty && renderer.scaleMode !== this.scaleMode) {\n      renderer.scaleMode = this.scaleMode;\n      renderer.context[renderer.smoothProperty] = (renderer.scaleMode === Phaser.PIXI.scaleModes.LINEAR);\n    }\n\n    if (this.debug) this._debug();\n    skeletonRenderer.debugRendering = this.debug;\n    skeletonRenderer.triangleRendering = this.enableCanvasMesh;\n\n    context.save();\n    skeletonRenderer.ctx = context;\n    skeletonRenderer.draw(skeleton);\n    context.restore();\n\n    if (this._mask) {\n      renderer.maskManager.popMask(renderer);\n    }\n  }\n\n  _debug() {\n    this.game.debug.spriteBounds(this, 'rgba(0,0, 255, 0.5)');\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { SceneRenderer } from '@esotericsoftware/spine-webgl';\nimport { SkeletonRenderer } from '@esotericsoftware/spine-canvas';\nimport SpineGameObject from './spineGameObject';\n\nexport default class SpinePlugin extends Phaser.Plugin {\n  constructor(game, parent) {\n    super(game, parent);\n    this.game = game;\n    this.pluginManager = parent;\n    this.spineList = [];\n\n    this._setFlags();\n    this._rendererConfig();\n    this._addSpineCache();\n    this._addSpineLoader();\n    this._addSpineFactory();\n    this._addRenderers();\n  }\n\n  _setFlags() {\n    this.hasPostRender = false;\n    this.hasPostUpdate = false;\n    this.hasPreUpdate = false;\n    this.hasRender = false;\n    this.hasUpdate = false;\n  }\n\n  _rendererConfig() {\n    this.isWebGL = this.game.renderType === Phaser.WEBGL || this.game.renderType === Phaser.WEBGL_MULTI;\n    this.gl = this.isWebGL ? this.game.renderer.gl : null;\n    this.webGLRenderer = null;\n    this.canvasRenderer = null;\n  }\n\n  _addSpineCache() {\n    Phaser.Cache.prototype.addCustom = function addCustom(key) {\n      this._cache[key] = {};\n      this[key.toUpperCase()] = this._cacheMap.length;\n      this._cacheMap[this[key.toUpperCase()]] = this._cache[key];\n\n      const keyIdx = this[key.toUpperCase()];\n      const methodName = key.charAt(0).toUpperCase() + key.slice(1);\n\n      Phaser.Cache.prototype[`add${methodName}`] = function add(str, data) {\n        this._cache[key][str] = data;\n      };\n\n      Phaser.Cache.prototype[`check${methodName}`] = function check(str) {\n        return this.checkKey(keyIdx, str);\n      };\n\n      Phaser.Cache.prototype[`get${methodName}`] = function get(str) {\n        return this.getItem(str, keyIdx, `get${methodName}`);\n      };\n    };\n\n    this.skeletonDataCache = this.game.cache.addCustom('spineSkeleton');\n    this.atlasCache = this.game.cache.addCustom('spineAtlas');\n  }\n\n  _addSpineLoader() {\n    Phaser.Loader.prototype.spine = function spine(key, spineFiles, overwrite) {\n      this.text(`${key}-text`, spineFiles.atlas, overwrite);\n\n      if (spineFiles.json) this.json(`${key}-json`, spineFiles.json);\n      if (spineFiles.binary) this.binary(`${key}-binary`, spineFiles.binary);\n\n      if (spineFiles.image) {\n        this.image(`${key}-image`, spineFiles.image, overwrite);\n      } else {\n        for (const image in spineFiles.images) {\n          if (Object.prototype.hasOwnProperty.call(spineFiles.images, image)) {\n            this.image(`${key}-${image.toLocaleLowerCase()}`, spineFiles.images[image], overwrite);\n          }\n        }\n      }\n\n      return this;\n    };\n  }\n\n  _addSpineFactory() {\n    const self = this;\n    Phaser.GameObjectFactory.prototype.spine = function spine(x, y, key, group, premultipliedAlpha) {\n      if (premultipliedAlpha === void 0) { premultipliedAlpha = false; }\n      if (group === undefined) {\n        group = this.world;\n      }\n      const spineObject = new SpineGameObject(this.game, self, x, y, key, premultipliedAlpha);\n      self.spineList.push(spineObject);\n      return group.add(spineObject);\n    };\n\n    Phaser.GameObjectCreator.prototype.spine = function spine(x, y, key, premultipliedAlpha) {\n      if (premultipliedAlpha === void 0) { premultipliedAlpha = false; }\n      const spineObject = new SpineGameObject(this.game, self, x, y, key, premultipliedAlpha);\n      self.spineList.push(spineObject);\n      return spineObject;\n    };\n  }\n\n  _addRenderers() {\n    if (this.isWebGL) {\n      if (!this.webGLRenderer) {\n        this.webGLRenderer = new SceneRenderer(this.game.canvas, this.gl, true);\n      }\n      this.onResize();\n      this.game.scale.onSizeChange.add(this.onResize, this);\n    } else if (!this.canvasRenderer) {\n      this.canvasRenderer = new SkeletonRenderer(this.game.context);\n    }\n    this.game.onDestroy.addOnce(this.gameDestroy);\n  }\n\n  onResize() {\n    const phaserRenderer = this.game.renderer;\n    const sceneRenderer = this.webGLRenderer;\n    if (phaserRenderer && sceneRenderer) {\n      const viewportWidth = phaserRenderer.width;\n      const viewportHeight = phaserRenderer.height;\n      sceneRenderer.camera.position.x = viewportWidth / 2;\n      sceneRenderer.camera.position.y = viewportHeight / 2;\n      sceneRenderer.camera.up.y = -1;\n      sceneRenderer.camera.direction.z = 1;\n      sceneRenderer.camera.setViewport(viewportWidth, viewportHeight);\n    }\n  }\n\n  destroy() {\n    if (this.isWebGL) {\n      this.game.scale.onSizeChange.remove(this.onResize);\n    }\n    super.destroy();\n  }\n\n  gameDestroy() {\n    for (const spine of this.spineList) {\n      if (spine.destroy) spine.destroy();\n    }\n    if (this.webGLRenderer) this.webGLRenderer.dispose();\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport SpinePlugin from './spinePlugin';\nwindow.SpinePlugin = SpinePlugin;\n"],"names":["StringSet","entries","size","add","value","contains","this","addAll","values","oldSize","i","n","length","clear","r","g","b","a","static","constructor","set","clamp","setFromColor","c","setFromString","hex","charAt","substr","parseInt","rgba8888ToColor","color","rgb888ToColor","fromString","MathUtils","PI","radiansToDegrees","degreesToRadians","min","max","cosDeg","degrees","Math","cos","degRad","sinDeg","sin","signum","toInt","x","floor","ceil","cbrt","y","pow","abs","randomTriangular","randomTriangularWith","mode","u","random","d","sqrt","isPowerOfTwo","Utils","arrayCopy","source","sourceStart","dest","destStart","numElements","j","arrayFill","array","fromIndex","toIndex","setArraySize","ensureArrayCapacity","newArray","defaultValue","Array","newFloatArray","SUPPORTS_TYPED_ARRAYS","Float32Array","newShortArray","Int16Array","toFloatArray","toSinglePrecision","fround","webkit602BugfixHelper","alpha","blend","element","identity","enumValue","type","name","toUpperCase","slice","Pool","items","instantiator","obtain","pop","free","item","reset","push","freeAll","Vector2","normalize","len","Attachment","Error","VertexAttachment","id","nextID","bones","vertices","worldVerticesLength","timelineAttachment","super","computeWorldVertices","slot","start","count","worldVertices","offset","stride","skeleton","bone","deformArray","deform","worldX","worldY","v","w","vx","vy","skip","skeletonBones","wx","wy","weight","f","copyTo","attachment","Sequence","regions","digits","setupIndex","copy","apply","index","sequenceIndex","region","updateRegion","getPath","basePath","result","frame","toString","_nextID","SequenceMode","SequenceModeValues","hold","once","loop","pingpong","onceReverse","loopReverse","pingpongReverse","Animation","timelines","timelineIds","duration","setTimelines","getPropertyIds","hasTimeline","ids","lastTime","time","events","direction","MixBlend","MixDirection","Property","Timeline","propertyIds","frames","frameCount","getFrameEntries","getFrameCount","getDuration","search1","search","step","CurveTimeline","curves","bezierCount","setLinear","setStepped","shrink","newCurves","setBezier","bezier","time1","value1","cx1","cy1","cx2","cy2","time2","value2","tmpx","tmpy","dddx","dddy","ddx","ddy","dx","dy","getBezierValue","frameIndex","valueOffset","CurveTimeline1","propertyId","setFrame","getCurveValue","ii","curveType","before","CurveTimeline2","propertyId1","propertyId2","RotateTimeline","boneIndex","active","setup","rotation","data","first","replace","TranslateTimeline","t","TranslateXTimeline","TranslateYTimeline","ScaleTimeline","scaleX","scaleY","bx","by","mixOut","ScaleXTimeline","ScaleYTimeline","ShearTimeline","shearX","shearY","ShearXTimeline","ShearYTimeline","RGBATimeline","slotIndex","slots","RGBTimeline","AlphaTimeline","RGBA2Timeline","r2","g2","b2","light","dark","darkColor","setupLight","setupDark","RGB2Timeline","AttachmentTimeline","attachmentNames","attachmentName","setAttachment","getAttachment","DeformTimeline","getCurvePercent","firedEvents","slotAttachment","vertexCount","vertexAttachment","setupVertices","lastVertices","percent","prevVertices","nextVertices","prev","EventTimeline","event","Number","MAX_VALUE","frameTime","DrawOrderTimeline","drawOrders","drawOrder","idx","drawOrderToSetupIndex","IkConstraintTimeline","ikConstraintIndex","mix","softness","bendDirection","compress","stretch","constraint","ikConstraints","mixIn","TransformConstraintTimeline","transformConstraintIndex","mixRotate","mixX","mixY","mixScaleX","mixScaleY","mixShearY","transformConstraints","rotate","PathConstraintPositionTimeline","pathConstraintIndex","pathConstraints","position","PathConstraintSpacingTimeline","spacing","PathConstraintMixTimeline","SequenceTimeline","sequence","ENTRIES","getSlotIndex","delay","MODE","DELAY","modeAndIndex","AnimationState","emptyAnimation","_emptyAnimation","tracks","timeScale","unkeyedState","listeners","queue","EventQueue","propertyIDs","animationsChanged","trackEntryPool","TrackEntry","update","delta","current","animationLast","nextAnimationLast","trackLast","nextTrackLast","currentDelta","next","nextTime","trackTime","setCurrent","mixingFrom","mixTime","trackEnd","end","clearNext","updateMixingFrom","from","mixingTo","drain","to","finished","mixDuration","totalAlpha","interruptAlpha","_animationsChanged","applied","mixBlend","applyMixingFrom","animationTime","getAnimationTime","applyTime","applyEvents","reverse","animation","timelineCount","timeline","applyAttachmentTimeline","timelineMode","shortestRotation","firstFrame","timelinesRotation","timelineBlend","SUBSEQUENT","applyRotateTimeline","queueEvents","setupState","SETUP","attachmentState","attachments","attachmentThreshold","drawOrderThreshold","alphaHold","alphaMix","eventThreshold","timelineHoldMix","FIRST","HOLD_SUBSEQUENT","HOLD_FIRST","holdMix","CURRENT","r1","total","diff","lastTotal","lastDiff","dir","entry","animationStart","animationEnd","trackLastWrapped","complete","clearTracks","oldDrainDisabled","drainDisabled","clearTrack","trackIndex","interrupt","expandToIndex","previous","setAnimation","animationName","skeletonData","findAnimation","setAnimationWith","trackEntry","addAnimation","addAnimationWith","last","getTrackComplete","setEmptyAnimation","addEmptyAnimation","setEmptyAnimations","holdPrevious","getMix","dispose","computeHold","timelinesCount","outer","HOLD_MIX","getCurrent","addListener","listener","removeListener","indexOf","splice","clearListeners","clearListenerNotifications","setAnimationLast","isComplete","resetRotationDirections","objects","animState","EventType","AnimationStateData","animationToMixTime","defaultMix","setMix","fromName","toName","setMixWith","key","undefined","BoundingBoxAttachment","ClippingAttachment","endSlot","Texture","_image","image","getImage","TextureFilter","TextureWrap","TransformMode","PositionMode","SpacingMode","RotateMode","AttachmentType","TextureRegion","texture","u2","v2","width","height","offsetX","offsetY","originalWidth","originalHeight","pages","atlasText","reader","TextureAtlasReader","pageFields","page","minFilter","magFilter","uWrap","Repeat","vWrap","pma","regionFields","line","readLine","trim","readEntry","names","TextureAtlasRegion","field","entryValues","TextureAtlasPage","findRegion","setTextures","assetManager","pathPrefix","setTexture","get","lines","text","split","colon","lastMatch","comma","Nearest","ClampToEdge","setFilters","setWraps","MeshAttachment","path","regionUVs","uvs","triangles","hullLength","edges","parentMesh","tempColor","textureWidth","textureHeight","getParentMesh","setParentMesh","newLinkedMesh","PathAttachment","lengths","closed","constantSpeed","PointAttachment","computeWorldPosition","point","computeWorldRotation","atan2","radDeg","RegionAttachment","regionScaleX","regionScaleY","localX","localY","localX2","localY2","radians","localXCos","localXSin","localYCos","localYSin","localX2Cos","localX2Sin","localY2Cos","localY2Sin","vertexOffset","AtlasAttachmentLoader","atlas","loadSequence","newRegionAttachment","skin","newMeshAttachment","newBoundingBoxAttachment","newPathAttachment","newPointAttachment","newClippingAttachment","BoneData","parent","transformMode","Normal","skinRequired","Bone","children","ax","ay","arotation","ascaleX","ascaleY","ashearX","ashearY","sorted","setToSetupPose","isActive","updateWorldTransformWith","updateWorldTransform","rotationY","sx","sy","pa","pb","pc","pd","la","lb","lc","ld","OnlyTranslation","NoRotationOrReflection","s","prx","rx","ry","NoScale","NoScaleOrReflection","za","zc","zb","zd","getWorldRotationX","getWorldRotationY","getWorldScaleX","getWorldScaleY","updateAppliedTransform","pid","ia","ib","ic","ra","rb","rc","rd","det","worldToLocal","world","invDet","localToWorld","local","worldToLocalRotation","worldRotation","localToWorldRotation","localRotation","rotateWorld","IkConstraint","target","findBone","apply1","uniform","apply2","targetX","targetY","p","rotationIK","tx","ty","sa","sc","dd","child","bendDir","px","py","psx","psy","csx","os1","os2","s2","cx","cy","cwx","cwy","pp","a1","a2","l1","l2","td","sd","acos","aa","bb","ta","c1","c2","q","r0","minAngle","minX","minDist","minY","maxAngle","maxX","maxDist","maxY","os","ConstraintData","order","PathConstraintData","_target","slotData","positionMode","Fixed","spacingMode","rotateMode","Chain","offsetRotation","PathConstraint","spaces","positions","segments","findSlot","tangents","Tangent","scale","ChainScale","boneCount","spacesCount","Percent","setupLength","epsilon","Proportional","sum","lengthSpacing","Length","computeWorldPositions","boneX","boneY","tip","PI2","out","verticesLength","curveCount","prevCurve","NONE","multiplier","pathLength","o","curve","space","BEFORE","addBeforePosition","AFTER","addAfterPosition","addCurvePosition","x1","y1","x2","y2","dddfx","dddfy","ddfx","ddfy","dfx","dfy","curveLength","segment","temp","isNaN","tt","ttt","uu","uuu","ut","ut3","uut3","utt3","Slot","getSkeleton","TransformConstraint","relative","applyRelativeLocal","applyAbsoluteLocal","applyRelativeWorld","applyAbsoluteWorld","translate","tb","tc","degRadReflect","offsetShearY","offsetScaleX","offsetScaleY","Skeleton","_updateCache","_scaleY","yDown","boneData","ikConstraintData","transformConstraintData","pathConstraintData","updateCache","skinBones","ikCount","transformCount","pathCount","constraintCount","sortIkConstraint","sortTransformConstraint","sortPathConstraint","sortBone","constraints","constrained","sortReset","slotBone","sortPathConstraintAttachment","defaultSkin","skins","sortPathConstraintAttachmentWith","pathBones","nn","rootBone","getRootBone","updatable","setBonesToSetupPose","setSlotsToSetupPose","boneName","slotName","setSkinByName","skinName","findSkin","setSkin","newSkin","attachAll","getAttachmentByName","findIkConstraint","constraintName","ikConstraint","findTransformConstraint","findPathConstraint","getBoundsRect","getBounds","POSITIVE_INFINITY","NEGATIVE_INFINITY","mesh","Event","intValue","floatValue","stringValue","volume","balance","EventData","audioPath","IkConstraintData","SkeletonData","animations","version","hash","fps","imagesPath","findEvent","eventDataName","SkinEntry","Skin","addSkin","contained","getAttachments","copySkin","dictionary","removeAttachment","slotAttachments","getAttachmentsForSlot","oldSkin","SlotData","blendMode","BlendMode","TransformConstraintData","SkeletonBinary","attachmentLoader","linkedMeshes","readSkeletonData","binary","input","BinaryInput","lowHash","readInt32","highHash","readString","readFloat","nonessential","readBoolean","readInt","str","strings","readStringRef","readByte","readSkin","linkedMesh","inheritTimeline","eventName","readAnimation","slotCount","readAttachment","Region","readSequence","BoundingBox","readVertices","box","Mesh","readFloatArray","readShortArray","LinkedMesh","inheritTimelines","Path","Point","Clipping","endSlotIndex","clip","Vertices","weights","bonesArray","readShort","timelineType","frameLast","SLOT_ATTACHMENT","SLOT_RGBA","readUnsignedByte","CURVE_STEPPED","CURVE_BEZIER","SLOT_RGB","SLOT_RGBA2","nr","ng","nb","na","nr2","ng2","nb2","SLOT_RGB2","SLOT_ALPHA","BONE_ROTATE","readTimeline1","BONE_TRANSLATE","readTimeline2","BONE_TRANSLATEX","BONE_TRANSLATEY","BONE_SCALE","BONE_SCALEX","BONE_SCALEY","BONE_SHEAR","BONE_SHEARX","BONE_SHEARY","mix2","softness2","mixRotate2","mixX2","mixY2","mixScaleX2","mixScaleY2","mixShearY2","PATH_POSITION","PATH_SPACING","PATH_MIX","iii","nnn","ATTACHMENT_DEFORM","weighted","deformLength","vn","ATTACHMENT_SEQUENCE","drawOrderCount","offsetCount","unchanged","originalIndex","unchangedIndex","eventCount","eventData","buffer","DataView","getInt8","getUint8","getInt16","getInt32","optimizePositive","byteCount","chars","String","fromCharCode","getFloat32","inheritDeform","nvalue1","nvalue2","SkeletonBounds","boundingBoxes","polygons","polygonPool","updateAabb","boundingBox","polygon","aabbCompute","aabbContainsPoint","aabbIntersectsSegment","m","aabbIntersectsSkeleton","bounds","containsPoint","containsPointPolygon","prevIndex","inside","vertexY","prevY","vertexX","intersectsSegment","intersectsSegmentPolygon","width12","height12","det1","x3","y3","x4","y4","det2","width34","height34","det3","getPolygon","getWidth","getHeight","Triangulator","convexPolygons","convexPolygonsIndices","indicesArray","isConcaveArray","polygonIndicesPool","triangulate","verticesArray","indices","isConcave","p1","p2","p3","p1x","p1y","p2x","p2y","p3x","p3y","positiveArea","previousIndex","nextIndex","decompose","polygonIndices","fanBaseIndex","lastWinding","t1","t2","t3","merged","winding1","winding","winding2","firstIndex","lastIndex","prevPrevX","prevPrevY","prevX","firstX","firstY","secondX","secondY","otherIndices","otherFirstIndex","otherSecondIndex","otherLastIndex","otherPoly","SkeletonClipping","triangulator","clippingPolygon","clipOutput","clippedVertices","clippedTriangles","scratch","clipAttachment","clippingPolygons","clipStart","makeClockwise","clipEndWithSlot","clipEnd","isClipping","clipTriangles","trianglesLength","twoColor","polygonsCount","vertexSize","u1","v1","u3","v3","clippedVerticesItems","clippedTrianglesItems","clipOutputLength","d0","d1","d2","d4","clipOutputCount","clipOutputItems","c0","clippingArea","output","originalOutput","clipped","clippingVertices","clippingVerticesLast","edgeX","edgeY","edgeX2","edgeY2","deltaX","deltaY","inputVertices","inputVerticesLength","outputStart","inputX","inputY","inputX2","inputY2","side2","ua","verticeslength","area","lastX","other","SkeletonJson","json","root","JSON","parse","skeletonMap","spine","images","boneMap","parentName","getValue","slotMap","ik","constraintMap","transform","targetName","skinMap","entryName","eventMap","animationMap","map","scaledVertices","timelineName","timelineMap","keyMap","nextMap","newColor","readCurve","color2","newColor2","constraintIndex","attachmentsName","attachmentsMap","slotMapName","attachmentMapName","attachmentMap","timelineMapName","verticesValue","lastDelay","drawOrderMap","offsets","offsetMap","keys","name1","name2","property","canvas","gl","restorables","canvasOrContext","contextConfig","WebGLRenderingContext","WebGL2RenderingContext","getContext","addEventListener","e","preventDefault","restore","addRestorable","restorable","removeRestorable","context","boundUnit","useMipMaps","bind","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","validateMagFilter","usesMipMaps","generateMipmap","MipMap","MipMapLinearLinear","MipMapLinearNearest","MipMapNearestLinear","MipMapNearestNearest","Linear","filter","TEXTURE_WRAP_S","TEXTURE_WRAP_T","createTexture","DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","LINEAR","LINEAR_MIPMAP_LINEAR","CLAMP_TO_EDGE","unit","activeTexture","TEXTURE0","bindTexture","unbind","deleteTexture","z","setFrom","sub","cross","multiply","matrix","l_mat","M00","M01","M02","M03","M10","M11","M12","M13","M20","M21","M22","M23","project","l_w","M30","M31","M32","M33","dot","distance","Matrix4","transpose","invert","l_det","inv_det","determinant","projection","near","far","fovy","aspectRatio","l_fd","tan","l_a1","l_a2","ortho2d","ortho","left","right","bottom","top","x_orth","y_orth","z_orth","tz","multiplyLeft","lookAt","up","xAxis","yAxis","zAxis","val","tmpMatrix","OrthoCamera","zoom","viewportWidth","viewportHeight","projectionView","inverseProjectionView","view","screenToWorld","screenCoords","screenWidth","screenHeight","worldToScreen","worldCoords","setViewport","vertexShader","fragmentShader","vs","vsSource","fs","fsSource","program","tmp2x2","tmp3x3","tmp4x4","getProgram","getVertexShader","getFragmentShader","getVertexShaderSource","getFragmentSource","compile","compileShader","VERTEX_SHADER","FRAGMENT_SHADER","compileProgram","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","isContextLost","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","setUniformi","uniform1i","getUniformLocation","setUniformf","uniform1f","setUniform2f","uniform2f","setUniform3f","value3","uniform3f","setUniform4f","value4","uniform4f","setUniform2x2f","uniformMatrix2fv","setUniform3x3f","uniformMatrix3fv","setUniform4x4f","uniformMatrix4fv","location","getAttributeLocation","attribute","getAttribLocation","newColoredTextured","POSITION","COLOR","TEXCOORDS","MVP_MATRIX","newTwoColoredTextured","COLOR2","newColored","attributes","verticesBuffer","dirtyVertices","indicesBuffer","indicesLength","dirtyIndices","elementsPerVertex","getAttributes","maxVertices","numVertices","setVerticesLength","getVertices","maxIndices","numIndices","setIndicesLength","getIndices","getVertexSizeInFloats","Uint16Array","setVertices","setIndices","draw","primitiveType","drawWithOffset","drawElements","UNSIGNED_SHORT","drawArrays","bindBuffer","ARRAY_BUFFER","attrib","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","disableVertexAttribArray","createBuffer","bufferData","subarray","DYNAMIC_DRAW","deleteBuffer","VertexAttribute","Position2Attribute","VertexAttributeType","Float","TexCoordAttribute","ColorAttribute","Color2Attribute","PolygonBatcher","drawCalls","isDrawing","lastTexture","srcColorBlend","srcAlphaBlend","dstBlend","cullWasEnabled","twoColorTint","SRC_ALPHA","ONE","ONE_MINUS_SRC_ALPHA","begin","enable","BLEND","blendFuncSeparate","disableCulling","isEnabled","CULL_FACE","disable","srcRgb","srcRgbPma","dstRgb","srcAlpha","setBlendMode","premultipliedAlpha","blendModeGL","blendModesGL","flush","indexStart","TRIANGLES","globalDrawCalls","getDrawCalls","getAndResetGlobalDrawCalls","ShapeRenderer","shapeType","ShapeType","Filled","vertexIndex","tmp","setColor","setColorWith","check","vertex","Line","triangle","filled","color3","quad","color4","rect","rectLine","polygonVertices","circle","radius","angle","subdiv_step","subdiv_step2","subdiv_step3","pre1","pre2","pre4","pre5","tmp1x","tmp1y","tmp2x","tmp2y","fx","fy","SkeletonDebugRenderer","boneLineColor","boneOriginColor","attachmentLineColor","triangleLineColor","pathColor","clipColor","aabbColor","drawBones","drawRegionAttachments","drawBoundingBoxes","drawMeshHull","drawMeshTriangles","drawPaths","drawSkeletonXY","drawClipping","boneWidth","shapes","ignoredBones","skeletonX","skeletonY","srcFunc","regionAttachment","lastY","boxes","LIGHT_GRAY","Renderable","numFloats","SkeletonRenderer","tempColor2","renderable","clipper","temp2","temp3","temp4","batcher","slotRangeStart","slotRangeEnd","transformer","attachmentColor","skeletonColor","inRange","clippedVertexSize","QUAD_TRIANGLES","slotColor","finalColor","slotBlendMode","verts","WHITE","camera","batcherShader","shapesShader","activeRenderer","skeletonRenderer","skeletonDebugRenderer","enableRenderer","drawSkeleton","drawSkeletonDebug","drawTexture","drawTextureUV","drawTextureRotated","pivotX","pivotY","worldOriginX","worldOriginY","fx2","fy2","p4x","p4y","drawRegion","resize","resizeMode","dpr","window","devicePixelRatio","round","clientWidth","h","clientHeight","viewport","Expand","Fit","sourceWidth","sourceHeight","targetWidth","targetHeight","renderer","ResizeMode","ctx","triangleRendering","debugRendering","drawTriangles","drawImages","strokeStyle","regionColor","save","atlasScale","globalAlpha","drawImage","strokeRect","computeRegionVertices","computeMeshVertices","x0","y0","u0","v0","drawTriangle","beginPath","moveTo","lineTo","stroke","img","closePath","VERTEX_SIZE","C1R","C1G","C1B","C1A","U1","V1","C2R","C2G","C2B","C2A","U2","V2","C3R","C3G","C3B","C3A","U3","V3","C4R","C4G","C4B","C4A","U4","V4","SpineBaseGameObject","Phaser","PIXI","DisplayObject","game","SPRITE","physicsType","Component","Core","init","call","_width","_height","install","prototype","preUpdatePhysics","PhysicsBody","preUpdate","preUpdateLifeSpan","LifeSpan","preUpdateInWorld","InWorld","preUpdateCore","SpineSkeleton","plugin","gameObject","setKeys","setSkeletonData","createSkeleton","getSkeletonData","getAtlas","cache","checkSpineSkeleton","getSpineSkeleton","checkJSONKey","jsonFile","getJSON","binaryFile","getBinary","Uint8Array","addSpineSkeleton","checkSpineAtlas","getSpineAtlas","atlasFile","getText","TextureAtlas","isWebGL","imageFile","GLTexture","atlasPage","toLocaleLowerCase","CanvasTexture","addSpineAtlas","SpineUtils","skeletonToPhaserWorldCoordinates","worldTransform","phaserWorldCoordinatesToSkeleton","phaserWorldCoordinatesToBone","calculateBounds","calculateSkinBounds","arguments","timeStep","defaultBounds","animationState","customSkin","steps","SpineGameObject","scaleMode","scaleModes","utils","debug","enableCanvasMesh","_setCallbacks","_setSpine","beforeUpdateWorldTransforms","afterUpdateWorldTransforms","animationStateData","skeletonBounds","boundsOffset","boundsSize","boundsTemp","_checkSpine","inCamera","visible","_bounds","w0","w1","h0","h1","replaceSpine","updatePose","postUpdate","destroy","destroyPhase","onDestroy$dispatch","Group","remove","removeChild","transformCallback","transformCallbackContext","tweens","removeFrom","spineBounds","alive","exists","filters","mask","hitArea","stage","filterArea","_currentBounds","_mask","_destroyCachedSprite","pendingDestroy","_renderWebGL","webGLRenderer","currentBlendMode","blendModeManager","currentShader","shaderManager","spriteBatch","stop","attribState","sceneRenderer","maskManager","pushMask","_filters","filterManager","pushFilter","_filterBlock","popFilter","popMask","drawCount","_currentId","setShader","_debug","_renderCanvas","canvasRenderer","setTransform","globalCompositeOperation","blendModesCanvas","smoothProperty","spriteBounds","SpinePlugin","Plugin","pluginManager","spineList","_setFlags","_rendererConfig","_addSpineCache","_addSpineLoader","_addSpineFactory","_addRenderers","hasPostRender","hasPostUpdate","hasPreUpdate","hasRender","hasUpdate","renderType","WEBGL","WEBGL_MULTI","Cache","addCustom","_cache","_cacheMap","keyIdx","methodName","checkKey","getItem","skeletonDataCache","atlasCache","Loader","spineFiles","overwrite","Object","hasOwnProperty","self","GameObjectFactory","group","spineObject","GameObjectCreator","SceneRenderer","onResize","onSizeChange","onDestroy","addOnce","gameDestroy","phaserRenderer"],"sourceRoot":""}
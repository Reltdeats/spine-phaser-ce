{"version":3,"file":"spine-phaser-ce.min.js","mappings":"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","sources":["webpack:///../node_modules/@esotericsoftware/spine-core/dist/Utils.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/Attachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/Sequence.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Animation.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/AnimationState.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/AnimationStateData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/BoundingBoxAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/ClippingAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Texture.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/BoneData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/PathConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SlotData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonBinary.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/TextureAtlas.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/MeshAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/PathAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/PointAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/attachments/RegionAttachment.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/AtlasAttachmentLoader.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Bone.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/IkConstraint.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/ConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/PathConstraint.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Slot.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/TransformConstraint.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Skeleton.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Event.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/EventData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/IkConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Skin.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/TransformConstraintData.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonBounds.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/Triangulator.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonClipping.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/SkeletonJson.js","webpack:///../node_modules/@esotericsoftware/spine-core/dist/polyfills.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/WebGL.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/GLTexture.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Vector3.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Matrix4.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Camera.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Shader.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/Mesh.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/ShapeRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/PolygonBatcher.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/SkeletonDebugRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/SkeletonRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-webgl/dist/SceneRenderer.js","webpack:///../node_modules/@esotericsoftware/spine-canvas/dist/CanvasTexture.js","webpack:///../node_modules/@esotericsoftware/spine-canvas/dist/SkeletonRenderer.js","webpack:///./spineBaseGameObject.js","webpack:///./spineSkeleton.js","webpack:///./spineUtils.js","webpack:///./spineGameObject.js","webpack:///./spinePlugin.js","webpack:///./index.js"],"sourcesContent":["/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class IntSet {\n    constructor() {\n        this.array = new Array();\n    }\n    add(value) {\n        let contains = this.contains(value);\n        this.array[value | 0] = value | 0;\n        return !contains;\n    }\n    contains(value) {\n        return this.array[value | 0] != undefined;\n    }\n    remove(value) {\n        this.array[value | 0] = undefined;\n    }\n    clear() {\n        this.array.length = 0;\n    }\n}\nexport class StringSet {\n    constructor() {\n        this.entries = {};\n        this.size = 0;\n    }\n    add(value) {\n        let contains = this.entries[value];\n        this.entries[value] = true;\n        if (!contains) {\n            this.size++;\n            return true;\n        }\n        return false;\n    }\n    addAll(values) {\n        let oldSize = this.size;\n        for (var i = 0, n = values.length; i < n; i++)\n            this.add(values[i]);\n        return oldSize != this.size;\n    }\n    contains(value) {\n        return this.entries[value];\n    }\n    clear() {\n        this.entries = {};\n        this.size = 0;\n    }\n}\nexport class Color {\n    constructor(r = 0, g = 0, b = 0, a = 0) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    set(r, g, b, a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n        return this.clamp();\n    }\n    setFromColor(c) {\n        this.r = c.r;\n        this.g = c.g;\n        this.b = c.b;\n        this.a = c.a;\n        return this;\n    }\n    setFromString(hex) {\n        hex = hex.charAt(0) == '#' ? hex.substr(1) : hex;\n        this.r = parseInt(hex.substr(0, 2), 16) / 255;\n        this.g = parseInt(hex.substr(2, 2), 16) / 255;\n        this.b = parseInt(hex.substr(4, 2), 16) / 255;\n        this.a = hex.length != 8 ? 1 : parseInt(hex.substr(6, 2), 16) / 255;\n        return this;\n    }\n    add(r, g, b, a) {\n        this.r += r;\n        this.g += g;\n        this.b += b;\n        this.a += a;\n        return this.clamp();\n    }\n    clamp() {\n        if (this.r < 0)\n            this.r = 0;\n        else if (this.r > 1)\n            this.r = 1;\n        if (this.g < 0)\n            this.g = 0;\n        else if (this.g > 1)\n            this.g = 1;\n        if (this.b < 0)\n            this.b = 0;\n        else if (this.b > 1)\n            this.b = 1;\n        if (this.a < 0)\n            this.a = 0;\n        else if (this.a > 1)\n            this.a = 1;\n        return this;\n    }\n    static rgba8888ToColor(color, value) {\n        color.r = ((value & 0xff000000) >>> 24) / 255;\n        color.g = ((value & 0x00ff0000) >>> 16) / 255;\n        color.b = ((value & 0x0000ff00) >>> 8) / 255;\n        color.a = ((value & 0x000000ff)) / 255;\n    }\n    static rgb888ToColor(color, value) {\n        color.r = ((value & 0x00ff0000) >>> 16) / 255;\n        color.g = ((value & 0x0000ff00) >>> 8) / 255;\n        color.b = ((value & 0x000000ff)) / 255;\n    }\n    static fromString(hex) {\n        return new Color().setFromString(hex);\n    }\n}\nColor.WHITE = new Color(1, 1, 1, 1);\nColor.RED = new Color(1, 0, 0, 1);\nColor.GREEN = new Color(0, 1, 0, 1);\nColor.BLUE = new Color(0, 0, 1, 1);\nColor.MAGENTA = new Color(1, 0, 1, 1);\nexport class MathUtils {\n    static clamp(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    }\n    static cosDeg(degrees) {\n        return Math.cos(degrees * MathUtils.degRad);\n    }\n    static sinDeg(degrees) {\n        return Math.sin(degrees * MathUtils.degRad);\n    }\n    static signum(value) {\n        return value > 0 ? 1 : value < 0 ? -1 : 0;\n    }\n    static toInt(x) {\n        return x > 0 ? Math.floor(x) : Math.ceil(x);\n    }\n    static cbrt(x) {\n        let y = Math.pow(Math.abs(x), 1 / 3);\n        return x < 0 ? -y : y;\n    }\n    static randomTriangular(min, max) {\n        return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n    }\n    static randomTriangularWith(min, max, mode) {\n        let u = Math.random();\n        let d = max - min;\n        if (u <= (mode - min) / d)\n            return min + Math.sqrt(u * d * (mode - min));\n        return max - Math.sqrt((1 - u) * d * (max - mode));\n    }\n    static isPowerOfTwo(value) {\n        return value && (value & (value - 1)) === 0;\n    }\n}\nMathUtils.PI = 3.1415927;\nMathUtils.PI2 = MathUtils.PI * 2;\nMathUtils.radiansToDegrees = 180 / MathUtils.PI;\nMathUtils.radDeg = MathUtils.radiansToDegrees;\nMathUtils.degreesToRadians = MathUtils.PI / 180;\nMathUtils.degRad = MathUtils.degreesToRadians;\nexport class Interpolation {\n    apply(start, end, a) {\n        return start + (end - start) * this.applyInternal(a);\n    }\n}\nexport class Pow extends Interpolation {\n    constructor(power) {\n        super();\n        this.power = 2;\n        this.power = power;\n    }\n    applyInternal(a) {\n        if (a <= 0.5)\n            return Math.pow(a * 2, this.power) / 2;\n        return Math.pow((a - 1) * 2, this.power) / (this.power % 2 == 0 ? -2 : 2) + 1;\n    }\n}\nexport class PowOut extends Pow {\n    constructor(power) {\n        super(power);\n    }\n    applyInternal(a) {\n        return Math.pow(a - 1, this.power) * (this.power % 2 == 0 ? -1 : 1) + 1;\n    }\n}\nexport class Utils {\n    static arrayCopy(source, sourceStart, dest, destStart, numElements) {\n        for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n            dest[j] = source[i];\n        }\n    }\n    static arrayFill(array, fromIndex, toIndex, value) {\n        for (let i = fromIndex; i < toIndex; i++)\n            array[i] = value;\n    }\n    static setArraySize(array, size, value = 0) {\n        let oldSize = array.length;\n        if (oldSize == size)\n            return array;\n        array.length = size;\n        if (oldSize < size) {\n            for (let i = oldSize; i < size; i++)\n                array[i] = value;\n        }\n        return array;\n    }\n    static ensureArrayCapacity(array, size, value = 0) {\n        if (array.length >= size)\n            return array;\n        return Utils.setArraySize(array, size, value);\n    }\n    static newArray(size, defaultValue) {\n        let array = new Array(size);\n        for (let i = 0; i < size; i++)\n            array[i] = defaultValue;\n        return array;\n    }\n    static newFloatArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Float32Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static newShortArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Int16Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static toFloatArray(array) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n    }\n    static toSinglePrecision(value) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n    }\n    // This function is used to fix WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n    static webkit602BugfixHelper(alpha, blend) {\n    }\n    static contains(array, element, identity = true) {\n        for (var i = 0; i < array.length; i++)\n            if (array[i] == element)\n                return true;\n        return false;\n    }\n    static enumValue(type, name) {\n        return type[name[0].toUpperCase() + name.slice(1)];\n    }\n}\nUtils.SUPPORTS_TYPED_ARRAYS = typeof (Float32Array) !== \"undefined\";\nexport class DebugUtils {\n    static logBones(skeleton) {\n        for (let i = 0; i < skeleton.bones.length; i++) {\n            let bone = skeleton.bones[i];\n            console.log(bone.data.name + \", \" + bone.a + \", \" + bone.b + \", \" + bone.c + \", \" + bone.d + \", \" + bone.worldX + \", \" + bone.worldY);\n        }\n    }\n}\nexport class Pool {\n    constructor(instantiator) {\n        this.items = new Array();\n        this.instantiator = instantiator;\n    }\n    obtain() {\n        return this.items.length > 0 ? this.items.pop() : this.instantiator();\n    }\n    free(item) {\n        if (item.reset)\n            item.reset();\n        this.items.push(item);\n    }\n    freeAll(items) {\n        for (let i = 0; i < items.length; i++)\n            this.free(items[i]);\n    }\n    clear() {\n        this.items.length = 0;\n    }\n}\nexport class Vector2 {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    length() {\n        let x = this.x;\n        let y = this.y;\n        return Math.sqrt(x * x + y * y);\n    }\n    normalize() {\n        let len = this.length();\n        if (len != 0) {\n            this.x /= len;\n            this.y /= len;\n        }\n        return this;\n    }\n}\nexport class TimeKeeper {\n    constructor() {\n        this.maxDelta = 0.064;\n        this.framesPerSecond = 0;\n        this.delta = 0;\n        this.totalTime = 0;\n        this.lastTime = Date.now() / 1000;\n        this.frameCount = 0;\n        this.frameTime = 0;\n    }\n    update() {\n        let now = Date.now() / 1000;\n        this.delta = now - this.lastTime;\n        this.frameTime += this.delta;\n        this.totalTime += this.delta;\n        if (this.delta > this.maxDelta)\n            this.delta = this.maxDelta;\n        this.lastTime = now;\n        this.frameCount++;\n        if (this.frameTime > 1) {\n            this.framesPerSecond = this.frameCount / this.frameTime;\n            this.frameTime = 0;\n            this.frameCount = 0;\n        }\n    }\n}\nexport class WindowedMean {\n    constructor(windowSize = 32) {\n        this.addedValues = 0;\n        this.lastValue = 0;\n        this.mean = 0;\n        this.dirty = true;\n        this.values = new Array(windowSize);\n    }\n    hasEnoughData() {\n        return this.addedValues >= this.values.length;\n    }\n    addValue(value) {\n        if (this.addedValues < this.values.length)\n            this.addedValues++;\n        this.values[this.lastValue++] = value;\n        if (this.lastValue > this.values.length - 1)\n            this.lastValue = 0;\n        this.dirty = true;\n    }\n    getMean() {\n        if (this.hasEnoughData()) {\n            if (this.dirty) {\n                let mean = 0;\n                for (let i = 0; i < this.values.length; i++)\n                    mean += this.values[i];\n                this.mean = mean / this.values.length;\n                this.dirty = false;\n            }\n            return this.mean;\n        }\n        return 0;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils } from \"../Utils\";\n/** The base class for all attachments. */\nexport class Attachment {\n    constructor(name) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n}\n/** Base class for an attachment with vertices that are transformed by one or more bones and can be deformed by a slot's\n * {@link Slot#deform}. */\nexport class VertexAttachment extends Attachment {\n    constructor(name) {\n        super(name);\n        /** The unique ID for this attachment. */\n        this.id = VertexAttachment.nextID++;\n        /** The bones which affect the {@link #getVertices()}. The array entries are, for each vertex, the number of bones affecting\n         * the vertex followed by that many bone indices, which is the index of the bone in {@link Skeleton#bones}. Will be null\n         * if this attachment has no weights. */\n        this.bones = null;\n        /** The vertex positions in the bone's coordinate system. For a non-weighted attachment, the values are `x,y`\n         * entries for each vertex. For a weighted attachment, the values are `x,y,weight` entries for each bone affecting\n         * each vertex. */\n        this.vertices = [];\n        /** The maximum number of world vertex values that can be output by\n         * {@link #computeWorldVertices()} using the `count` parameter. */\n        this.worldVerticesLength = 0;\n        /** Timelines for the timeline attachment are also applied to this attachment.\n         * May be null if no attachment-specific timelines should be applied. */\n        this.timelineAttachment = this;\n    }\n    /** Transforms the attachment's local {@link #vertices} to world coordinates. If the slot's {@link Slot#deform} is\n     * not empty, it is used to deform the vertices.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide.\n     * @param start The index of the first {@link #vertices} value to transform. Each vertex has 2 values, x and y.\n     * @param count The number of world vertex values to output. Must be <= {@link #worldVerticesLength} - `start`.\n     * @param worldVertices The output world vertices. Must have a length >= `offset` + `count` *\n     *           `stride` / 2.\n     * @param offset The `worldVertices` index to begin writing values.\n     * @param stride The number of `worldVertices` entries between the value pairs written. */\n    computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n        count = offset + (count >> 1) * stride;\n        let skeleton = slot.bone.skeleton;\n        let deformArray = slot.deform;\n        let vertices = this.vertices;\n        let bones = this.bones;\n        if (!bones) {\n            if (deformArray.length > 0)\n                vertices = deformArray;\n            let bone = slot.bone;\n            let x = bone.worldX;\n            let y = bone.worldY;\n            let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n            for (let v = start, w = offset; w < count; v += 2, w += stride) {\n                let vx = vertices[v], vy = vertices[v + 1];\n                worldVertices[w] = vx * a + vy * b + x;\n                worldVertices[w + 1] = vx * c + vy * d + y;\n            }\n            return;\n        }\n        let v = 0, skip = 0;\n        for (let i = 0; i < start; i += 2) {\n            let n = bones[v];\n            v += n + 1;\n            skip += n;\n        }\n        let skeletonBones = skeleton.bones;\n        if (deformArray.length == 0) {\n            for (let w = offset, b = skip * 3; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b], vy = vertices[b + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n        else {\n            let deform = deformArray;\n            for (let w = offset, b = skip * 3, f = skip << 1; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3, f += 2) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b] + deform[f], vy = vertices[b + 1] + deform[f + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n    }\n    /** Does not copy id (generated) or name (set on construction). **/\n    copyTo(attachment) {\n        if (this.bones) {\n            attachment.bones = new Array(this.bones.length);\n            Utils.arrayCopy(this.bones, 0, attachment.bones, 0, this.bones.length);\n        }\n        else\n            attachment.bones = null;\n        if (this.vertices) {\n            attachment.vertices = Utils.newFloatArray(this.vertices.length);\n            Utils.arrayCopy(this.vertices, 0, attachment.vertices, 0, this.vertices.length);\n        }\n        attachment.worldVerticesLength = this.worldVerticesLength;\n        attachment.timelineAttachment = this.timelineAttachment;\n    }\n}\nVertexAttachment.nextID = 0;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXR0YWNobWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hdHRhY2htZW50cy9BdHRhY2htZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQW1CLEtBQUssRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVsRCwwQ0FBMEM7QUFDMUMsTUFBTSxPQUFnQixVQUFVO0lBRy9CLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBR0Q7QUFFRDswQkFDMEI7QUFDMUIsTUFBTSxPQUFnQixnQkFBaUIsU0FBUSxVQUFVO0lBd0J4RCxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBdEJiLHlDQUF5QztRQUN6QyxPQUFFLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFL0I7O2dEQUV3QztRQUN4QyxVQUFLLEdBQXlCLElBQUksQ0FBQztRQUVuQzs7MEJBRWtCO1FBQ2xCLGFBQVEsR0FBb0IsRUFBRSxDQUFDO1FBRS9COzBFQUNrRTtRQUNsRSx3QkFBbUIsR0FBRyxDQUFDLENBQUM7UUFFeEI7Z0ZBQ3dFO1FBQ3hFLHVCQUFrQixHQUFlLElBQUksQ0FBQztJQUl0QyxDQUFDO0lBRUQ7Ozs7Ozs7Ozs7OEZBVTBGO0lBQzFGLG9CQUFvQixDQUFFLElBQVUsRUFBRSxLQUFhLEVBQUUsS0FBYSxFQUFFLGFBQThCLEVBQUUsTUFBYyxFQUFFLE1BQWM7UUFDN0gsS0FBSyxHQUFHLE1BQU0sR0FBRyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUM7UUFDdkMsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxR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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils } from \"../Utils\";\nexport class Sequence {\n    constructor(count) {\n        this.id = Sequence.nextID();\n        this.start = 0;\n        this.digits = 0;\n        /** The index of the region to show for the setup pose. */\n        this.setupIndex = 0;\n        this.regions = new Array(count);\n    }\n    copy() {\n        let copy = new Sequence(this.regions.length);\n        Utils.arrayCopy(this.regions, 0, copy.regions, 0, this.regions.length);\n        copy.start = this.start;\n        copy.digits = this.digits;\n        copy.setupIndex = this.setupIndex;\n        return copy;\n    }\n    apply(slot, attachment) {\n        let index = slot.sequenceIndex;\n        if (index == -1)\n            index = this.setupIndex;\n        if (index >= this.regions.length)\n            index = this.regions.length - 1;\n        let region = this.regions[index];\n        if (attachment.region != region) {\n            attachment.region = region;\n            attachment.updateRegion();\n        }\n    }\n    getPath(basePath, index) {\n        let result = basePath;\n        let frame = (this.start + index).toString();\n        for (let i = this.digits - frame.length; i > 0; i--)\n            result += \"0\";\n        result += frame;\n        return result;\n    }\n    static nextID() {\n        return Sequence._nextID++;\n    }\n}\nSequence._nextID = 0;\nexport var SequenceMode;\n(function (SequenceMode) {\n    SequenceMode[SequenceMode[\"hold\"] = 0] = \"hold\";\n    SequenceMode[SequenceMode[\"once\"] = 1] = \"once\";\n    SequenceMode[SequenceMode[\"loop\"] = 2] = \"loop\";\n    SequenceMode[SequenceMode[\"pingpong\"] = 3] = \"pingpong\";\n    SequenceMode[SequenceMode[\"onceReverse\"] = 4] = \"onceReverse\";\n    SequenceMode[SequenceMode[\"loopReverse\"] = 5] = \"loopReverse\";\n    SequenceMode[SequenceMode[\"pingpongReverse\"] = 6] = \"pingpongReverse\";\n})(SequenceMode || (SequenceMode = {}));\nexport const SequenceModeValues = [\n    SequenceMode.hold,\n    SequenceMode.once,\n    SequenceMode.loop,\n    SequenceMode.pingpong,\n    SequenceMode.onceReverse,\n    SequenceMode.loopReverse,\n    SequenceMode.pingpongReverse\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VxdWVuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvU2VxdWVuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSy9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFHakMsTUFBTSxPQUFPLFFBQVE7SUFVcEIsWUFBYSxLQUFhO1FBUDFCLE9BQUUsR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFdkIsVUFBSyxHQUFHLENBQUMsQ0FBQztRQUNWLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDWCwwREFBMEQ7UUFDMUQsZUFBVSxHQUFHLENBQUMsQ0FBQztRQUdkLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxLQUFLLENBQWdCLEtBQUssQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxJQUFJO1FBQ0gsSUFBSSxJQUFJLEdBQUcsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkUsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDbEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsS0FBSyxDQUFFLElBQVUsRUFBRSxVQUE0QjtRQUM5QyxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQy9CLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQztZQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pDLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTTtZQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDbEUsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQyxJQUFJLFVBQVUsQ0FBQyxNQUFNLElBQUksTUFBTSxFQUFFO1lBQ2hDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1lBQzNCLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUMxQjtJQUNGLENBQUM7SUFFRCxPQUFPLENBQUUsUUFBZ0IsRUFBRSxLQUFhO1FBQ3ZDLElBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDNUMsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDbEQsTUFBTSxJQUFJLEdBQUcsQ0FBQztRQUNmLE1BQU0sSUFBSSxLQUFLLENBQUM7UUFDaEIsT0FBTyxNQUFNLENBQUM7SUFDZixDQUFDO0lBRU8sTUFBTSxDQUFDLE1BQU07UUFDcEIsT0FBTyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7QUE1Q2MsZ0JBQU8sR0FBRyxDQUFDLENBQUM7QUErQzVCLE1BQU0sQ0FBTixJQUFZLFlBUVg7QUFSRCxXQUFZLFlBQVk7SUFDdkIsK0NBQVEsQ0FBQTtJQUNSLCtDQUFRLENBQUE7SUFDUiwrQ0FBUSxDQUFBO0lBQ1IsdURBQVksQ0FBQTtJQUNaLDZEQUFlLENBQUE7SUFDZiw2REFBZSxDQUFBO0lBQ2YscUVBQW1CLENBQUE7QUFDcEIsQ0FBQyxFQVJXLFlBQVksS0FBWixZQUFZLFFBUXZCO0FBRUQsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUc7SUFDakMsWUFBWSxDQUFDLElBQUk7SUFDakIsWUFBWSxDQUFDLElBQUk7SUFDakIsWUFBWSxDQUFDLElBQUk7SUFDakIsWUFBWSxDQUFDLFFBQVE7SUFDckIsWUFBWSxDQUFDLFdBQVc7SUFDeEIsWUFBWSxDQUFDLFdBQVc7SUFDeEIsWUFBWSxDQUFDLGVBQWU7Q0FDNUIsQ0FBQyJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment\";\nimport { StringSet, Utils, MathUtils } from \"./Utils\";\nimport { SequenceMode, SequenceModeValues } from \"./attachments/Sequence\";\n/** A simple container for a list of timelines and a name. */\nexport class Animation {\n    constructor(name, timelines, duration) {\n        this.timelines = [];\n        this.timelineIds = new StringSet();\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n        this.setTimelines(timelines);\n        this.duration = duration;\n    }\n    setTimelines(timelines) {\n        if (!timelines)\n            throw new Error(\"timelines cannot be null.\");\n        this.timelines = timelines;\n        this.timelineIds.clear();\n        for (var i = 0; i < timelines.length; i++)\n            this.timelineIds.addAll(timelines[i].getPropertyIds());\n    }\n    hasTimeline(ids) {\n        for (let i = 0; i < ids.length; i++)\n            if (this.timelineIds.contains(ids[i]))\n                return true;\n        return false;\n    }\n    /** Applies all the animation's timelines to the specified skeleton.\n     *\n     * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}.\n     * @param loop If true, the animation repeats after {@link #getDuration()}.\n     * @param events May be null to ignore fired events. */\n    apply(skeleton, lastTime, time, loop, events, alpha, blend, direction) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (loop && this.duration != 0) {\n            time %= this.duration;\n            if (lastTime > 0)\n                lastTime %= this.duration;\n        }\n        let timelines = this.timelines;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            timelines[i].apply(skeleton, lastTime, time, events, alpha, blend, direction);\n    }\n}\n/** Controls how a timeline value is mixed with the setup pose value or current pose value when a timeline's `alpha`\n * < 1.\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixBlend;\n(function (MixBlend) {\n    /** Transitions from the setup value to the timeline value (the current value is not used). Before the first key, the setup\n     * value is set. */\n    MixBlend[MixBlend[\"setup\"] = 0] = \"setup\";\n    /** Transitions from the current value to the timeline value. Before the first key, transitions from the current value to\n     * the setup value. Timelines which perform instant transitions, such as {@link DrawOrderTimeline} or\n     * {@link AttachmentTimeline}, use the setup value before the first key.\n     *\n     * `first` is intended for the first animations applied, not for animations layered on top of those. */\n    MixBlend[MixBlend[\"first\"] = 1] = \"first\";\n    /** Transitions from the current value to the timeline value. No change is made before the first key (the current value is\n     * kept until the first key).\n     *\n     * `replace` is intended for animations layered on top of others, not for the first animations applied. */\n    MixBlend[MixBlend[\"replace\"] = 2] = \"replace\";\n    /** Transitions from the current value to the current value plus the timeline value. No change is made before the first key\n     * (the current value is kept until the first key).\n     *\n     * `add` is intended for animations layered on top of others, not for the first animations applied. Properties\n     * keyed by additive animations must be set manually or by another animation before applying the additive animations, else\n     * the property values will increase continually. */\n    MixBlend[MixBlend[\"add\"] = 3] = \"add\";\n})(MixBlend || (MixBlend = {}));\n/** Indicates whether a timeline's `alpha` is mixing out over time toward 0 (the setup or current pose value) or\n * mixing in toward 1 (the timeline's value).\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixDirection;\n(function (MixDirection) {\n    MixDirection[MixDirection[\"mixIn\"] = 0] = \"mixIn\";\n    MixDirection[MixDirection[\"mixOut\"] = 1] = \"mixOut\";\n})(MixDirection || (MixDirection = {}));\nconst Property = {\n    rotate: 0,\n    x: 1,\n    y: 2,\n    scaleX: 3,\n    scaleY: 4,\n    shearX: 5,\n    shearY: 6,\n    rgb: 7,\n    alpha: 8,\n    rgb2: 9,\n    attachment: 10,\n    deform: 11,\n    event: 12,\n    drawOrder: 13,\n    ikConstraint: 14,\n    transformConstraint: 15,\n    pathConstraintPosition: 16,\n    pathConstraintSpacing: 17,\n    pathConstraintMix: 18,\n    sequence: 19\n};\n/** The interface for all timelines. */\nexport class Timeline {\n    constructor(frameCount, propertyIds) {\n        this.propertyIds = propertyIds;\n        this.frames = Utils.newFloatArray(frameCount * this.getFrameEntries());\n    }\n    getPropertyIds() {\n        return this.propertyIds;\n    }\n    getFrameEntries() {\n        return 1;\n    }\n    getFrameCount() {\n        return this.frames.length / this.getFrameEntries();\n    }\n    getDuration() {\n        return this.frames[this.frames.length - this.getFrameEntries()];\n    }\n    static search1(frames, time) {\n        let n = frames.length;\n        for (let i = 1; i < n; i++)\n            if (frames[i] > time)\n                return i - 1;\n        return n - 1;\n    }\n    static search(frames, time, step) {\n        let n = frames.length;\n        for (let i = step; i < n; i += step)\n            if (frames[i] > time)\n                return i - step;\n        return n - step;\n    }\n}\n/** The base class for timelines that use interpolation between key frame values. */\nexport class CurveTimeline extends Timeline {\n    constructor(frameCount, bezierCount, propertyIds) {\n        super(frameCount, propertyIds);\n        this.curves = Utils.newFloatArray(frameCount + bezierCount * 18 /*BEZIER_SIZE*/);\n        this.curves[frameCount - 1] = 1 /*STEPPED*/;\n    }\n    /** Sets the specified key frame to linear interpolation. */\n    setLinear(frame) {\n        this.curves[frame] = 0 /*LINEAR*/;\n    }\n    /** Sets the specified key frame to stepped interpolation. */\n    setStepped(frame) {\n        this.curves[frame] = 1 /*STEPPED*/;\n    }\n    /** Shrinks the storage for Bezier curves, for use when <code>bezierCount</code> (specified in the constructor) was larger\n     * than the actual number of Bezier curves. */\n    shrink(bezierCount) {\n        let size = this.getFrameCount() + bezierCount * 18 /*BEZIER_SIZE*/;\n        if (this.curves.length > size) {\n            let newCurves = Utils.newFloatArray(size);\n            Utils.arrayCopy(this.curves, 0, newCurves, 0, size);\n            this.curves = newCurves;\n        }\n    }\n    /** Stores the segments for the specified Bezier curve. For timelines that modify multiple values, there may be more than\n     * one curve per frame.\n     * @param bezier The ordinal of this Bezier curve for this timeline, between 0 and <code>bezierCount - 1</code> (specified\n     *           in the constructor), inclusive.\n     * @param frame Between 0 and <code>frameCount - 1</code>, inclusive.\n     * @param value The index of the value for this frame that this curve is used for.\n     * @param time1 The time for the first key.\n     * @param value1 The value for the first key.\n     * @param cx1 The time for the first Bezier handle.\n     * @param cy1 The value for the first Bezier handle.\n     * @param cx2 The time of the second Bezier handle.\n     * @param cy2 The value for the second Bezier handle.\n     * @param time2 The time for the second key.\n     * @param value2 The value for the second key. */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = (value1 - cy1 * 2 + cy2) * 0.03;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = ((cy1 - cy2) * 3 - value1 + value2) * 0.006;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = (cy1 - value1) * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = value1 + dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    /** Returns the Bezier interpolated value for the specified time.\n     * @param frameIndex The index into {@link #getFrames()} for the values of the frame before <code>time</code>.\n     * @param valueOffset The offset from <code>frameIndex</code> to the value this curve is used for.\n     * @param i The index of the Bezier segments. See {@link #getCurveType(int)}. */\n    getBezierValue(time, frameIndex, valueOffset, i) {\n        let curves = this.curves;\n        if (curves[i] > time) {\n            let x = this.frames[frameIndex], y = this.frames[frameIndex + valueOffset];\n            return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        frameIndex += this.getFrameEntries();\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (time - x) / (this.frames[frameIndex] - x) * (this.frames[frameIndex + valueOffset] - y);\n    }\n}\nexport class CurveTimeline1 extends CurveTimeline {\n    constructor(frameCount, bezierCount, propertyId) {\n        super(frameCount, bezierCount, [propertyId]);\n    }\n    getFrameEntries() {\n        return 2 /*ENTRIES*/;\n    }\n    /** Sets the time and value for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value) {\n        frame <<= 1;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE*/] = value;\n    }\n    /** Returns the interpolated value for the specified time. */\n    getCurveValue(time) {\n        let frames = this.frames;\n        let i = frames.length - 2;\n        for (let ii = 2; ii <= i; ii += 2) {\n            if (frames[ii] > time) {\n                i = ii - 2;\n                break;\n            }\n        }\n        let curveType = this.curves[i >> 1];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i], value = frames[i + 1 /*VALUE*/];\n                return value + (time - before) / (frames[i + 2 /*ENTRIES*/] - before) * (frames[i + 2 /*ENTRIES*/ + 1 /*VALUE*/] - value);\n            case 1 /*STEPPED*/:\n                return frames[i + 1 /*VALUE*/];\n        }\n        return this.getBezierValue(time, i, 1 /*VALUE*/, curveType - 2 /*BEZIER*/);\n    }\n}\n/** The base class for a {@link CurveTimeline} which sets two properties. */\nexport class CurveTimeline2 extends CurveTimeline {\n    /** @param bezierCount The maximum number of Bezier curves. See {@link #shrink(int)}.\n     * @param propertyIds Unique identifiers for the properties the timeline modifies. */\n    constructor(frameCount, bezierCount, propertyId1, propertyId2) {\n        super(frameCount, bezierCount, [propertyId1, propertyId2]);\n    }\n    getFrameEntries() {\n        return 3 /*ENTRIES*/;\n    }\n    /** Sets the time and values for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value1, value2) {\n        frame *= 3 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE1*/] = value1;\n        this.frames[frame + 2 /*VALUE2*/] = value2;\n    }\n}\n/** Changes a bone's local {@link Bone#rotation}. */\nexport class RotateTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.rotate + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.rotation = bone.data.rotation;\n                    return;\n                case MixBlend.first:\n                    bone.rotation += (bone.data.rotation - bone.rotation) * alpha;\n            }\n            return;\n        }\n        let r = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.rotation = bone.data.rotation + r * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                r += bone.data.rotation - bone.rotation;\n            case MixBlend.add:\n                bone.rotation += r * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x} and {@link Bone#y}. */\nexport class TranslateTimeline extends CurveTimeline2 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex, Property.y + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.x = bone.data.x;\n                    bone.y = bone.data.y;\n                    return;\n                case MixBlend.first:\n                    bone.x += (bone.data.x - bone.x) * alpha;\n                    bone.y += (bone.data.y - bone.y) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.x = bone.data.x + x * alpha;\n                bone.y = bone.data.y + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.x += (bone.data.x + x - bone.x) * alpha;\n                bone.y += (bone.data.y + y - bone.y) * alpha;\n                break;\n            case MixBlend.add:\n                bone.x += x * alpha;\n                bone.y += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateXTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.x = bone.data.x;\n                    return;\n                case MixBlend.first:\n                    bone.x += (bone.data.x - bone.x) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.x = bone.data.x + x * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.x += (bone.data.x + x - bone.x) * alpha;\n                break;\n            case MixBlend.add:\n                bone.x += x * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateYTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.y + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.y = bone.data.y;\n                    return;\n                case MixBlend.first:\n                    bone.y += (bone.data.y - bone.y) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.y = bone.data.y + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.y += (bone.data.y + y - bone.y) * alpha;\n                break;\n            case MixBlend.add:\n                bone.y += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleTimeline extends CurveTimeline2 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleX = bone.data.scaleX;\n                    bone.scaleY = bone.data.scaleY;\n                    return;\n                case MixBlend.first:\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n            }\n            return;\n        }\n        let x, y;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        x *= bone.data.scaleX;\n        y *= bone.data.scaleY;\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                bone.scaleX += x - bone.data.scaleX;\n                bone.scaleY += y - bone.data.scaleY;\n            }\n            else {\n                bone.scaleX = x;\n                bone.scaleY = y;\n            }\n        }\n        else {\n            let bx = 0, by = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = bone.data.scaleX;\n                        by = bone.data.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = bone.scaleX;\n                        by = bone.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = Math.abs(bone.data.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.data.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = Math.abs(bone.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleXTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleX = bone.data.scaleX;\n                    return;\n                case MixBlend.first:\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time) * bone.data.scaleX;\n        if (alpha == 1) {\n            if (blend == MixBlend.add)\n                bone.scaleX += x - bone.data.scaleX;\n            else\n                bone.scaleX = x;\n        }\n        else {\n            // Mixing out uses sign of setup or current pose, else use sign of key.\n            let bx = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = bone.data.scaleX;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = bone.scaleX;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = Math.abs(bone.data.scaleX) * MathUtils.signum(x);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = Math.abs(bone.scaleX) * MathUtils.signum(x);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleYTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleY = bone.data.scaleY;\n                    return;\n                case MixBlend.first:\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time) * bone.data.scaleY;\n        if (alpha == 1) {\n            if (blend == MixBlend.add)\n                bone.scaleY += y - bone.data.scaleY;\n            else\n                bone.scaleY = y;\n        }\n        else {\n            // Mixing out uses sign of setup or current pose, else use sign of key.\n            let by = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        by = bone.data.scaleY;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        by = bone.scaleY;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        by = Math.abs(bone.data.scaleY) * MathUtils.signum(y);\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        by = Math.abs(bone.scaleY) * MathUtils.signum(y);\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearTimeline extends CurveTimeline2 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearX = bone.data.shearX;\n                    bone.shearY = bone.data.shearY;\n                    return;\n                case MixBlend.first:\n                    bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n                    bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearX = bone.data.shearX + x * alpha;\n                bone.shearY = bone.data.shearY + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n                bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearX += x * alpha;\n                bone.shearY += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearXTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearX = bone.data.shearX;\n                    return;\n                case MixBlend.first:\n                    bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n            }\n            return;\n        }\n        let x = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearX = bone.data.shearX + x * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearX += x * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearYTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = 0;\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearY = bone.data.shearY;\n                    return;\n                case MixBlend.first:\n                    bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n            }\n            return;\n        }\n        let y = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearY = bone.data.shearY + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearY += y * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBATimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 5 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b, a) {\n        frame *= 5 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.setFromColor(setup);\n                    return;\n                case MixBlend.first:\n                    color.add((setup.r - color.r) * alpha, (setup.g - color.g) * alpha, (setup.b - color.b) * alpha, (setup.a - color.a) * alpha);\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0;\n        let i = Timeline.search(frames, time, 5 /*ENTRIES*/);\n        let curveType = this.curves[i / 5 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                let t = (time - before) / (frames[i + 5 /*ENTRIES*/] - before);\n                r += (frames[i + 5 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 5 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 5 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 5 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1)\n            color.set(r, g, b, a);\n        else {\n            if (blend == MixBlend.setup)\n                color.setFromColor(slot.data.color);\n            color.add((r - color.r) * alpha, (g - color.g) * alpha, (b - color.b) * alpha, (a - color.a) * alpha);\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b) {\n        frame <<= 2;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.r = setup.r;\n                    color.g = setup.g;\n                    color.b = setup.b;\n                    return;\n                case MixBlend.first:\n                    color.r += (setup.r - color.r) * alpha;\n                    color.g += (setup.g - color.g) * alpha;\n                    color.b += (setup.b - color.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                r += (frames[i + 4 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 4 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 4 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            color.r = r;\n            color.g = g;\n            color.b = b;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setup = slot.data.color;\n                color.r = setup.r;\n                color.g = setup.g;\n                color.b = setup.b;\n            }\n            color.r += (r - color.r) * alpha;\n            color.g += (g - color.g) * alpha;\n            color.b += (b - color.b) * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class AlphaTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, Property.alpha + \"|\" + slotIndex);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let color = slot.color;\n        if (time < this.frames[0]) { // Time is before first frame.\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.a = setup.a;\n                    return;\n                case MixBlend.first:\n                    color.a += (setup.a - color.a) * alpha;\n            }\n            return;\n        }\n        let a = this.getCurveValue(time);\n        if (alpha == 1)\n            color.a = a;\n        else {\n            if (blend == MixBlend.setup)\n                color.a = slot.data.color.a;\n            color.a += (a - color.a) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGBA2Timeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 8 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, a, r2, g2, b2) {\n        frame <<= 3;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n        this.frames[frame + 5 /*R2*/] = r2;\n        this.frames[frame + 6 /*G2*/] = g2;\n        this.frames[frame + 7 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.setFromColor(setupLight);\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.add((setupLight.r - light.r) * alpha, (setupLight.g - light.g) * alpha, (setupLight.b - light.b) * alpha, (setupLight.a - light.a) * alpha);\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 8 /*ENTRIES*/);\n        let curveType = this.curves[i >> 3];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                let t = (time - before) / (frames[i + 8 /*ENTRIES*/] - before);\n                r += (frames[i + 8 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 8 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 8 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 8 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                r2 += (frames[i + 8 /*ENTRIES*/ + 5 /*R2*/] - r2) * t;\n                g2 += (frames[i + 8 /*ENTRIES*/ + 6 /*G2*/] - g2) * t;\n                b2 += (frames[i + 8 /*ENTRIES*/ + 7 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 5 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 6 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 7 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 6 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.set(r, g, b, a);\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                light.setFromColor(slot.data.color);\n                let setupDark = slot.data.darkColor;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.add((r - light.r) * alpha, (g - light.g) * alpha, (b - light.b) * alpha, (a - light.a) * alpha);\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGB2Timeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, r2, g2, b2) {\n        frame *= 7 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*R2*/] = r2;\n        this.frames[frame + 5 /*G2*/] = g2;\n        this.frames[frame + 6 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.r = setupLight.r;\n                    light.g = setupLight.g;\n                    light.b = setupLight.b;\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.r += (setupLight.r - light.r) * alpha;\n                    light.g += (setupLight.g - light.g) * alpha;\n                    light.b += (setupLight.b - light.b) * alpha;\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                r += (frames[i + 7 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 7 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 7 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                r2 += (frames[i + 7 /*ENTRIES*/ + 4 /*R2*/] - r2) * t;\n                g2 += (frames[i + 7 /*ENTRIES*/ + 5 /*G2*/] - g2) * t;\n                b2 += (frames[i + 7 /*ENTRIES*/ + 6 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 4 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 5 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 6 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.r = r;\n            light.g = g;\n            light.b = b;\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n                light.r = setupLight.r;\n                light.g = setupLight.g;\n                light.b = setupLight.b;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.r += (r - light.r) * alpha;\n            light.g += (g - light.g) * alpha;\n            light.b += (b - light.b) * alpha;\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#attachment}. */\nexport class AttachmentTimeline extends Timeline {\n    constructor(frameCount, slotIndex) {\n        super(frameCount, [\n            Property.attachment + \"|\" + slotIndex\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n        this.attachmentNames = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the attachment name for the specified key frame. */\n    setFrame(frame, time, attachmentName) {\n        this.frames[frame] = time;\n        this.attachmentNames[frame] = attachmentName;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        this.setAttachment(skeleton, slot, this.attachmentNames[Timeline.search1(this.frames, time)]);\n    }\n    setAttachment(skeleton, slot, attachmentName) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(this.slotIndex, attachmentName));\n    }\n}\n/** Changes a slot's {@link Slot#deform} to deform a {@link VertexAttachment}. */\nexport class DeformTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, slotIndex, attachment) {\n        super(frameCount, bezierCount, [\n            Property.deform + \"|\" + slotIndex + \"|\" + attachment.id\n        ]);\n        this.slotIndex = 0;\n        this.slotIndex = slotIndex;\n        this.attachment = attachment;\n        this.vertices = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the vertices for the specified key frame.\n     * @param vertices Vertex positions for an unweighted VertexAttachment, or deform offsets if it has weights. */\n    setFrame(frame, time, vertices) {\n        this.frames[frame] = time;\n        this.vertices[frame] = vertices;\n    }\n    /** @param value1 Ignored (0 is used for a deform timeline).\n     * @param value2 Ignored (1 is used for a deform timeline). */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = cy2 * 0.03 - cy1 * 0.06;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = (cy1 - cy2 + 0.33333333) * 0.018;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = cy1 * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    getCurvePercent(time, frame) {\n        let curves = this.curves;\n        let i = curves[frame];\n        switch (i) {\n            case 0 /*LINEAR*/:\n                let x = this.frames[frame];\n                return (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n            case 1 /*STEPPED*/:\n                return 0;\n        }\n        i -= 2 /*BEZIER*/;\n        if (curves[i] > time) {\n            let x = this.frames[frame];\n            return curves[i + 1] * (time - x) / (curves[i] - x);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (1 - y) * (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let slotAttachment = slot.getAttachment();\n        if (!slotAttachment)\n            return;\n        if (!(slotAttachment instanceof VertexAttachment) || slotAttachment.timelineAttachment != this.attachment)\n            return;\n        let deform = slot.deform;\n        if (deform.length == 0)\n            blend = MixBlend.setup;\n        let vertices = this.vertices;\n        let vertexCount = vertices[0].length;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    deform.length = 0;\n                    return;\n                case MixBlend.first:\n                    if (alpha == 1) {\n                        deform.length = 0;\n                        return;\n                    }\n                    deform.length = vertexCount;\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] += (setupVertices[i] - deform[i]) * alpha;\n                    }\n                    else {\n                        // Weighted deform offsets.\n                        alpha = 1 - alpha;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] *= alpha;\n                    }\n            }\n            return;\n        }\n        deform.length = vertexCount;\n        if (time >= frames[frames.length - 1]) { // Time is after last frame.\n            let lastVertices = vertices[frames.length - 1];\n            if (alpha == 1) {\n                if (blend == MixBlend.add) {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i] - setupVertices[i];\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i];\n                    }\n                }\n                else\n                    Utils.arrayCopy(lastVertices, 0, deform, 0, vertexCount);\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup: {\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++) {\n                                let setup = setupVertices[i];\n                                deform[i] = setup + (lastVertices[i] - setup) * alpha;\n                            }\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] = lastVertices[i] * alpha;\n                        }\n                        break;\n                    }\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += (lastVertices[i] - deform[i]) * alpha;\n                        break;\n                    case MixBlend.add:\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += (lastVertices[i] - setupVertices[i]) * alpha;\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += lastVertices[i] * alpha;\n                        }\n                }\n            }\n            return;\n        }\n        // Interpolate between the previous frame and the current frame.\n        let frame = Timeline.search1(frames, time);\n        let percent = this.getCurvePercent(time, frame);\n        let prevVertices = vertices[frame];\n        let nextVertices = vertices[frame + 1];\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                let vertexAttachment = slotAttachment;\n                if (!vertexAttachment.bones) {\n                    // Unweighted vertex positions, with alpha.\n                    let setupVertices = vertexAttachment.vertices;\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent - setupVertices[i];\n                    }\n                }\n                else {\n                    // Weighted deform offsets, with alpha.\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent;\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < vertexCount; i++) {\n                    let prev = prevVertices[i];\n                    deform[i] = prev + (nextVertices[i] - prev) * percent;\n                }\n            }\n        }\n        else {\n            switch (blend) {\n                case MixBlend.setup: {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i], setup = setupVertices[i];\n                            deform[i] = setup + (prev + (nextVertices[i] - prev) * percent - setup) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] = (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n                    break;\n                }\n                case MixBlend.first:\n                case MixBlend.replace:\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += (prev + (nextVertices[i] - prev) * percent - deform[i]) * alpha;\n                    }\n                    break;\n                case MixBlend.add:\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent - setupVertices[i]) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n            }\n        }\n    }\n}\n/** Fires an {@link Event} when specific animation times are reached. */\nexport class EventTimeline extends Timeline {\n    constructor(frameCount) {\n        super(frameCount, EventTimeline.propertyIds);\n        this.events = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the event for the specified key frame. */\n    setFrame(frame, event) {\n        this.frames[frame] = event.time;\n        this.events[frame] = event;\n    }\n    /** Fires events for frames > `lastTime` and <= `time`. */\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (!firedEvents)\n            return;\n        let frames = this.frames;\n        let frameCount = this.frames.length;\n        if (lastTime > time) { // Fire events after last time for looped animations.\n            this.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha, blend, direction);\n            lastTime = -1;\n        }\n        else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\n            return;\n        if (time < frames[0])\n            return; // Time is before first frame.\n        let i = 0;\n        if (lastTime < frames[0])\n            i = 0;\n        else {\n            i = Timeline.search1(frames, lastTime) + 1;\n            let frameTime = frames[i];\n            while (i > 0) { // Fire multiple events with the same frame.\n                if (frames[i - 1] != frameTime)\n                    break;\n                i--;\n            }\n        }\n        for (; i < frameCount && time >= frames[i]; i++)\n            firedEvents.push(this.events[i]);\n    }\n}\nEventTimeline.propertyIds = [\"\" + Property.event];\n/** Changes a skeleton's {@link Skeleton#drawOrder}. */\nexport class DrawOrderTimeline extends Timeline {\n    constructor(frameCount) {\n        super(frameCount, DrawOrderTimeline.propertyIds);\n        this.drawOrders = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the draw order for the specified key frame.\n     * @param drawOrder For each slot in {@link Skeleton#slots}, the index of the new draw order. May be null to use setup pose\n     *           draw order. */\n    setFrame(frame, time, drawOrder) {\n        this.frames[frame] = time;\n        this.drawOrders[frame] = drawOrder;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        let idx = Timeline.search1(this.frames, time);\n        let drawOrderToSetupIndex = this.drawOrders[idx];\n        if (!drawOrderToSetupIndex)\n            Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n        else {\n            let drawOrder = skeleton.drawOrder;\n            let slots = skeleton.slots;\n            for (let i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\n                drawOrder[i] = slots[drawOrderToSetupIndex[i]];\n        }\n    }\n}\nDrawOrderTimeline.propertyIds = [\"\" + Property.drawOrder];\n/** Changes an IK constraint's {@link IkConstraint#mix}, {@link IkConstraint#softness},\n * {@link IkConstraint#bendDirection}, {@link IkConstraint#stretch}, and {@link IkConstraint#compress}. */\nexport class IkConstraintTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, ikConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.ikConstraint + \"|\" + ikConstraintIndex\n        ]);\n        /** The index of the IK constraint slot in {@link Skeleton#ikConstraints} that will be changed. */\n        this.ikConstraintIndex = 0;\n        this.ikConstraintIndex = ikConstraintIndex;\n    }\n    getFrameEntries() {\n        return 6 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, mix, softness, bend direction, compress, and stretch for the specified key frame. */\n    setFrame(frame, time, mix, softness, bendDirection, compress, stretch) {\n        frame *= 6 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*MIX*/] = mix;\n        this.frames[frame + 2 /*SOFTNESS*/] = softness;\n        this.frames[frame + 3 /*BEND_DIRECTION*/] = bendDirection;\n        this.frames[frame + 4 /*COMPRESS*/] = compress ? 1 : 0;\n        this.frames[frame + 5 /*STRETCH*/] = stretch ? 1 : 0;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.ikConstraints[this.ikConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mix = constraint.data.mix;\n                    constraint.softness = constraint.data.softness;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n                    return;\n                case MixBlend.first:\n                    constraint.mix += (constraint.data.mix - constraint.mix) * alpha;\n                    constraint.softness += (constraint.data.softness - constraint.softness) * alpha;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n            }\n            return;\n        }\n        let mix = 0, softness = 0;\n        let i = Timeline.search(frames, time, 6 /*ENTRIES*/);\n        let curveType = this.curves[i / 6 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                let t = (time - before) / (frames[i + 6 /*ENTRIES*/] - before);\n                mix += (frames[i + 6 /*ENTRIES*/ + 1 /*MIX*/] - mix) * t;\n                softness += (frames[i + 6 /*ENTRIES*/ + 2 /*SOFTNESS*/] - softness) * t;\n                break;\n            case 1 /*STEPPED*/:\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                break;\n            default:\n                mix = this.getBezierValue(time, i, 1 /*MIX*/, curveType - 2 /*BEZIER*/);\n                softness = this.getBezierValue(time, i, 2 /*SOFTNESS*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            constraint.mix = constraint.data.mix + (mix - constraint.data.mix) * alpha;\n            constraint.softness = constraint.data.softness + (softness - constraint.data.softness) * alpha;\n            if (direction == MixDirection.mixOut) {\n                constraint.bendDirection = constraint.data.bendDirection;\n                constraint.compress = constraint.data.compress;\n                constraint.stretch = constraint.data.stretch;\n            }\n            else {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n        else {\n            constraint.mix += (mix - constraint.mix) * alpha;\n            constraint.softness += (softness - constraint.softness) * alpha;\n            if (direction == MixDirection.mixIn) {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n    }\n}\n/** Changes a transform constraint's {@link TransformConstraint#rotateMix}, {@link TransformConstraint#translateMix},\n * {@link TransformConstraint#scaleMix}, and {@link TransformConstraint#shearMix}. */\nexport class TransformConstraintTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, transformConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.transformConstraint + \"|\" + transformConstraintIndex\n        ]);\n        /** The index of the transform constraint slot in {@link Skeleton#transformConstraints} that will be changed. */\n        this.transformConstraintIndex = 0;\n        this.transformConstraintIndex = transformConstraintIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** The time in seconds, rotate mix, translate mix, scale mix, and shear mix for the specified key frame. */\n    setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY) {\n        let frames = this.frames;\n        frame *= 7 /*ENTRIES*/;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n        frames[frame + 4 /*SCALEX*/] = mixScaleX;\n        frames[frame + 5 /*SCALEY*/] = mixScaleY;\n        frames[frame + 6 /*SHEARY*/] = mixShearY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.transformConstraints[this.transformConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            let data = constraint.data;\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = data.mixRotate;\n                    constraint.mixX = data.mixX;\n                    constraint.mixY = data.mixY;\n                    constraint.mixScaleX = data.mixScaleX;\n                    constraint.mixScaleY = data.mixScaleY;\n                    constraint.mixShearY = data.mixShearY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (data.mixY - constraint.mixY) * alpha;\n                    constraint.mixScaleX += (data.mixScaleX - constraint.mixScaleX) * alpha;\n                    constraint.mixScaleY += (data.mixScaleY - constraint.mixScaleY) * alpha;\n                    constraint.mixShearY += (data.mixShearY - constraint.mixShearY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y, scaleX, scaleY, shearY;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                rotate += (frames[i + 7 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 7 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 7 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                scaleX += (frames[i + 7 /*ENTRIES*/ + 4 /*SCALEX*/] - scaleX) * t;\n                scaleY += (frames[i + 7 /*ENTRIES*/ + 5 /*SCALEY*/] - scaleY) * t;\n                shearY += (frames[i + 7 /*ENTRIES*/ + 6 /*SHEARY*/] - shearY) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                scaleX = this.getBezierValue(time, i, 4 /*SCALEX*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                scaleY = this.getBezierValue(time, i, 5 /*SCALEY*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                shearY = this.getBezierValue(time, i, 6 /*SHEARY*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n            constraint.mixScaleX = data.mixScaleX + (scaleX - data.mixScaleX) * alpha;\n            constraint.mixScaleY = data.mixScaleY + (scaleY - data.mixScaleY) * alpha;\n            constraint.mixShearY = data.mixShearY + (shearY - data.mixShearY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n            constraint.mixScaleX += (scaleX - constraint.mixScaleX) * alpha;\n            constraint.mixScaleY += (scaleY - constraint.mixScaleY) * alpha;\n            constraint.mixShearY += (shearY - constraint.mixShearY) * alpha;\n        }\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#position}. */\nexport class PathConstraintPositionTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintPosition + \"|\" + pathConstraintIndex);\n        /** The index of the path constraint slot in {@link Skeleton#pathConstraints} that will be changed. */\n        this.pathConstraintIndex = 0;\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.position = constraint.data.position;\n                    return;\n                case MixBlend.first:\n                    constraint.position += (constraint.data.position - constraint.position) * alpha;\n            }\n            return;\n        }\n        let position = this.getCurveValue(time);\n        if (blend == MixBlend.setup)\n            constraint.position = constraint.data.position + (position - constraint.data.position) * alpha;\n        else\n            constraint.position += (position - constraint.position) * alpha;\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#spacing}. */\nexport class PathConstraintSpacingTimeline extends CurveTimeline1 {\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintSpacing + \"|\" + pathConstraintIndex);\n        /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n        this.pathConstraintIndex = 0;\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.spacing = constraint.data.spacing;\n                    return;\n                case MixBlend.first:\n                    constraint.spacing += (constraint.data.spacing - constraint.spacing) * alpha;\n            }\n            return;\n        }\n        let spacing = this.getCurveValue(time);\n        if (blend == MixBlend.setup)\n            constraint.spacing = constraint.data.spacing + (spacing - constraint.data.spacing) * alpha;\n        else\n            constraint.spacing += (spacing - constraint.spacing) * alpha;\n    }\n}\n/** Changes a transform constraint's {@link PathConstraint#getMixRotate()}, {@link PathConstraint#getMixX()}, and\n * {@link PathConstraint#getMixY()}. */\nexport class PathConstraintMixTimeline extends CurveTimeline {\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.pathConstraintMix + \"|\" + pathConstraintIndex\n        ]);\n        /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n        this.pathConstraintIndex = 0;\n        this.pathConstraintIndex = pathConstraintIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    setFrame(frame, time, mixRotate, mixX, mixY) {\n        let frames = this.frames;\n        frame <<= 2;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = constraint.data.mixRotate;\n                    constraint.mixX = constraint.data.mixX;\n                    constraint.mixY = constraint.data.mixY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (constraint.data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (constraint.data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (constraint.data.mixY - constraint.mixY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                rotate += (frames[i + 4 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 4 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 4 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#getSequenceIndex()} for an attachment's {@link Sequence}. */\nexport class SequenceTimeline extends Timeline {\n    constructor(frameCount, slotIndex, attachment) {\n        super(frameCount, [\n            Property.sequence + \"|\" + slotIndex + \"|\" + attachment.sequence.id\n        ]);\n        this.slotIndex = slotIndex;\n        this.attachment = attachment;\n    }\n    getFrameEntries() {\n        return SequenceTimeline.ENTRIES;\n    }\n    getSlotIndex() {\n        return this.slotIndex;\n    }\n    getAttachment() {\n        return this.attachment;\n    }\n    /** Sets the time, mode, index, and frame time for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time Seconds between frames. */\n    setFrame(frame, time, mode, index, delay) {\n        let frames = this.frames;\n        frame *= SequenceTimeline.ENTRIES;\n        frames[frame] = time;\n        frames[frame + SequenceTimeline.MODE] = mode | (index << 4);\n        frames[frame + SequenceTimeline.DELAY] = delay;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let slotAttachment = slot.attachment;\n        let attachment = this.attachment;\n        if (slotAttachment != attachment) {\n            if (!(slotAttachment instanceof VertexAttachment)\n                || slotAttachment.timelineAttachment != attachment)\n                return;\n        }\n        let frames = this.frames;\n        if (time < frames[0]) { // Time is before first frame.\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                slot.sequenceIndex = -1;\n            return;\n        }\n        let i = Timeline.search(frames, time, SequenceTimeline.ENTRIES);\n        let before = frames[i];\n        let modeAndIndex = frames[i + SequenceTimeline.MODE];\n        let delay = frames[i + SequenceTimeline.DELAY];\n        if (!this.attachment.sequence)\n            return;\n        let index = modeAndIndex >> 4, count = this.attachment.sequence.regions.length;\n        let mode = SequenceModeValues[modeAndIndex & 0xf];\n        if (mode != SequenceMode.hold) {\n            index += (((time - before) / delay + 0.00001) | 0);\n            switch (mode) {\n                case SequenceMode.once:\n                    index = Math.min(count - 1, index);\n                    break;\n                case SequenceMode.loop:\n                    index %= count;\n                    break;\n                case SequenceMode.pingpong: {\n                    let n = (count << 1) - 2;\n                    index = n == 0 ? 0 : index % n;\n                    if (index >= count)\n                        index = n - index;\n                    break;\n                }\n                case SequenceMode.onceReverse:\n                    index = Math.max(count - 1 - index, 0);\n                    break;\n                case SequenceMode.loopReverse:\n                    index = count - 1 - (index % count);\n                    break;\n                case SequenceMode.pingpongReverse: {\n                    let n = (count << 1) - 2;\n                    index = n == 0 ? 0 : (index + count - 1) % n;\n                    if (index >= count)\n                        index = n - index;\n                }\n            }\n        }\n        slot.sequenceIndex = index;\n    }\n}\nSequenceTimeline.ENTRIES = 3;\nSequenceTimeline.MODE = 1;\nSequenceTimeline.DELAY = 2;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, MixBlend, AttachmentTimeline, MixDirection, RotateTimeline, DrawOrderTimeline, Timeline, EventTimeline } from \"./Animation\";\nimport { StringSet, Pool, Utils, MathUtils } from \"./Utils\";\n/** Applies animations over time, queues animations for later playback, mixes (crossfading) between animations, and applies\n * multiple animations on top of each other (layering).\n *\n * See [Applying Animations](http://esotericsoftware.com/spine-applying-animations/) in the Spine Runtimes Guide. */\nexport class AnimationState {\n    static emptyAnimation() {\n        return AnimationState._emptyAnimation;\n    }\n    constructor(data) {\n        /** The list of tracks that currently have animations, which may contain null entries. */\n        this.tracks = new Array();\n        /** Multiplier for the delta time when the animation state is updated, causing time for all animations and mixes to play slower\n         * or faster. Defaults to 1.\n         *\n         * See TrackEntry {@link TrackEntry#timeScale} for affecting a single animation. */\n        this.timeScale = 1;\n        this.unkeyedState = 0;\n        this.events = new Array();\n        this.listeners = new Array();\n        this.queue = new EventQueue(this);\n        this.propertyIDs = new StringSet();\n        this.animationsChanged = false;\n        this.trackEntryPool = new Pool(() => new TrackEntry());\n        this.data = data;\n    }\n    /** Increments each track entry {@link TrackEntry#trackTime()}, setting queued animations as current if needed. */\n    update(delta) {\n        delta *= this.timeScale;\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current)\n                continue;\n            current.animationLast = current.nextAnimationLast;\n            current.trackLast = current.nextTrackLast;\n            let currentDelta = delta * current.timeScale;\n            if (current.delay > 0) {\n                current.delay -= currentDelta;\n                if (current.delay > 0)\n                    continue;\n                currentDelta = -current.delay;\n                current.delay = 0;\n            }\n            let next = current.next;\n            if (next) {\n                // When the next entry's delay is passed, change to the next entry, preserving leftover time.\n                let nextTime = current.trackLast - next.delay;\n                if (nextTime >= 0) {\n                    next.delay = 0;\n                    next.trackTime += current.timeScale == 0 ? 0 : (nextTime / current.timeScale + delta) * next.timeScale;\n                    current.trackTime += currentDelta;\n                    this.setCurrent(i, next, true);\n                    while (next.mixingFrom) {\n                        next.mixTime += delta;\n                        next = next.mixingFrom;\n                    }\n                    continue;\n                }\n            }\n            else if (current.trackLast >= current.trackEnd && !current.mixingFrom) {\n                tracks[i] = null;\n                this.queue.end(current);\n                this.clearNext(current);\n                continue;\n            }\n            if (current.mixingFrom && this.updateMixingFrom(current, delta)) {\n                // End mixing from entries once all have completed.\n                let from = current.mixingFrom;\n                current.mixingFrom = null;\n                if (from)\n                    from.mixingTo = null;\n                while (from) {\n                    this.queue.end(from);\n                    from = from.mixingFrom;\n                }\n            }\n            current.trackTime += currentDelta;\n        }\n        this.queue.drain();\n    }\n    /** Returns true when all mixing from entries are complete. */\n    updateMixingFrom(to, delta) {\n        let from = to.mixingFrom;\n        if (!from)\n            return true;\n        let finished = this.updateMixingFrom(from, delta);\n        from.animationLast = from.nextAnimationLast;\n        from.trackLast = from.nextTrackLast;\n        // Require mixTime > 0 to ensure the mixing from entry was applied at least once.\n        if (to.mixTime > 0 && to.mixTime >= to.mixDuration) {\n            // Require totalAlpha == 0 to ensure mixing is complete, unless mixDuration == 0 (the transition is a single frame).\n            if (from.totalAlpha == 0 || to.mixDuration == 0) {\n                to.mixingFrom = from.mixingFrom;\n                if (from.mixingFrom)\n                    from.mixingFrom.mixingTo = to;\n                to.interruptAlpha = from.interruptAlpha;\n                this.queue.end(from);\n            }\n            return finished;\n        }\n        from.trackTime += delta * from.timeScale;\n        to.mixTime += delta;\n        return false;\n    }\n    /** Poses the skeleton using the track entry animations. There are no side effects other than invoking listeners, so the\n     * animation state can be applied to multiple skeletons to pose them identically.\n     * @returns True if any animations were applied. */\n    apply(skeleton) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (this.animationsChanged)\n            this._animationsChanged();\n        let events = this.events;\n        let tracks = this.tracks;\n        let applied = false;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current || current.delay > 0)\n                continue;\n            applied = true;\n            let blend = i == 0 ? MixBlend.first : current.mixBlend;\n            // Apply mixing from entries first.\n            let mix = current.alpha;\n            if (current.mixingFrom)\n                mix *= this.applyMixingFrom(current, skeleton, blend);\n            else if (current.trackTime >= current.trackEnd && !current.next)\n                mix = 0;\n            // Apply current entry.\n            let animationLast = current.animationLast, animationTime = current.getAnimationTime(), applyTime = animationTime;\n            let applyEvents = events;\n            if (current.reverse) {\n                applyTime = current.animation.duration - applyTime;\n                applyEvents = null;\n            }\n            let timelines = current.animation.timelines;\n            let timelineCount = timelines.length;\n            if ((i == 0 && mix == 1) || blend == MixBlend.add) {\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    // Fixes issue #302 on IOS9 where mix, blend sometimes became undefined and caused assets\n                    // to sometimes stop rendering when using color correction, as their RGBA values become NaN.\n                    // (https://github.com/pixijs/pixi-spine/issues/302)\n                    Utils.webkit602BugfixHelper(mix, blend);\n                    var timeline = timelines[ii];\n                    if (timeline instanceof AttachmentTimeline)\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, true);\n                    else\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, blend, MixDirection.mixIn);\n                }\n            }\n            else {\n                let timelineMode = current.timelineMode;\n                let shortestRotation = current.shortestRotation;\n                let firstFrame = !shortestRotation && current.timelinesRotation.length != timelineCount << 1;\n                if (firstFrame)\n                    current.timelinesRotation.length = timelineCount << 1;\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    let timeline = timelines[ii];\n                    let timelineBlend = timelineMode[ii] == SUBSEQUENT ? blend : MixBlend.setup;\n                    if (!shortestRotation && timeline instanceof RotateTimeline) {\n                        this.applyRotateTimeline(timeline, skeleton, applyTime, mix, timelineBlend, current.timelinesRotation, ii << 1, firstFrame);\n                    }\n                    else if (timeline instanceof AttachmentTimeline) {\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, true);\n                    }\n                    else {\n                        // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                        Utils.webkit602BugfixHelper(mix, blend);\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, timelineBlend, MixDirection.mixIn);\n                    }\n                }\n            }\n            this.queueEvents(current, animationTime);\n            events.length = 0;\n            current.nextAnimationLast = animationTime;\n            current.nextTrackLast = current.trackTime;\n        }\n        // Set slots attachments to the setup pose, if needed. This occurs if an animation that is mixing out sets attachments so\n        // subsequent timelines see any deform, but the subsequent timelines don't set an attachment (eg they are also mixing out or\n        // the time is before the first key).\n        var setupState = this.unkeyedState + SETUP;\n        var slots = skeleton.slots;\n        for (var i = 0, n = skeleton.slots.length; i < n; i++) {\n            var slot = slots[i];\n            if (slot.attachmentState == setupState) {\n                var attachmentName = slot.data.attachmentName;\n                slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n            }\n        }\n        this.unkeyedState += 2; // Increasing after each use avoids the need to reset attachmentState for every slot.\n        this.queue.drain();\n        return applied;\n    }\n    applyMixingFrom(to, skeleton, blend) {\n        let from = to.mixingFrom;\n        if (from.mixingFrom)\n            this.applyMixingFrom(from, skeleton, blend);\n        let mix = 0;\n        if (to.mixDuration == 0) { // Single frame mix to undo mixingFrom changes.\n            mix = 1;\n            if (blend == MixBlend.first)\n                blend = MixBlend.setup;\n        }\n        else {\n            mix = to.mixTime / to.mixDuration;\n            if (mix > 1)\n                mix = 1;\n            if (blend != MixBlend.first)\n                blend = from.mixBlend;\n        }\n        let attachments = mix < from.attachmentThreshold, drawOrder = mix < from.drawOrderThreshold;\n        let timelines = from.animation.timelines;\n        let timelineCount = timelines.length;\n        let alphaHold = from.alpha * to.interruptAlpha, alphaMix = alphaHold * (1 - mix);\n        let animationLast = from.animationLast, animationTime = from.getAnimationTime(), applyTime = animationTime;\n        let events = null;\n        if (from.reverse)\n            applyTime = from.animation.duration - applyTime;\n        else if (mix < from.eventThreshold)\n            events = this.events;\n        if (blend == MixBlend.add) {\n            for (let i = 0; i < timelineCount; i++)\n                timelines[i].apply(skeleton, animationLast, applyTime, events, alphaMix, blend, MixDirection.mixOut);\n        }\n        else {\n            let timelineMode = from.timelineMode;\n            let timelineHoldMix = from.timelineHoldMix;\n            let shortestRotation = from.shortestRotation;\n            let firstFrame = !shortestRotation && from.timelinesRotation.length != timelineCount << 1;\n            if (firstFrame)\n                from.timelinesRotation.length = timelineCount << 1;\n            from.totalAlpha = 0;\n            for (let i = 0; i < timelineCount; i++) {\n                let timeline = timelines[i];\n                let direction = MixDirection.mixOut;\n                let timelineBlend;\n                let alpha = 0;\n                switch (timelineMode[i]) {\n                    case SUBSEQUENT:\n                        if (!drawOrder && timeline instanceof DrawOrderTimeline)\n                            continue;\n                        timelineBlend = blend;\n                        alpha = alphaMix;\n                        break;\n                    case FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaMix;\n                        break;\n                    case HOLD_SUBSEQUENT:\n                        timelineBlend = blend;\n                        alpha = alphaHold;\n                        break;\n                    case HOLD_FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaHold;\n                        break;\n                    default:\n                        timelineBlend = MixBlend.setup;\n                        let holdMix = timelineHoldMix[i];\n                        alpha = alphaHold * Math.max(0, 1 - holdMix.mixTime / holdMix.mixDuration);\n                        break;\n                }\n                from.totalAlpha += alpha;\n                if (!shortestRotation && timeline instanceof RotateTimeline)\n                    this.applyRotateTimeline(timeline, skeleton, applyTime, alpha, timelineBlend, from.timelinesRotation, i << 1, firstFrame);\n                else if (timeline instanceof AttachmentTimeline)\n                    this.applyAttachmentTimeline(timeline, skeleton, applyTime, timelineBlend, attachments);\n                else {\n                    // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                    Utils.webkit602BugfixHelper(alpha, blend);\n                    if (drawOrder && timeline instanceof DrawOrderTimeline && timelineBlend == MixBlend.setup)\n                        direction = MixDirection.mixIn;\n                    timeline.apply(skeleton, animationLast, applyTime, events, alpha, timelineBlend, direction);\n                }\n            }\n        }\n        if (to.mixDuration > 0)\n            this.queueEvents(from, animationTime);\n        this.events.length = 0;\n        from.nextAnimationLast = animationTime;\n        from.nextTrackLast = from.trackTime;\n        return mix;\n    }\n    applyAttachmentTimeline(timeline, skeleton, time, blend, attachments) {\n        var slot = skeleton.slots[timeline.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (time < timeline.frames[0]) { // Time is before first frame.\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName, attachments);\n        }\n        else\n            this.setAttachment(skeleton, slot, timeline.attachmentNames[Timeline.search1(timeline.frames, time)], attachments);\n        // If an attachment wasn't set (ie before the first frame or attachments is false), set the setup attachment later.\n        if (slot.attachmentState <= this.unkeyedState)\n            slot.attachmentState = this.unkeyedState + SETUP;\n    }\n    setAttachment(skeleton, slot, attachmentName, attachments) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n        if (attachments)\n            slot.attachmentState = this.unkeyedState + CURRENT;\n    }\n    applyRotateTimeline(timeline, skeleton, time, alpha, blend, timelinesRotation, i, firstFrame) {\n        if (firstFrame)\n            timelinesRotation[i] = 0;\n        if (alpha == 1) {\n            timeline.apply(skeleton, 0, time, null, 1, blend, MixDirection.mixIn);\n            return;\n        }\n        let bone = skeleton.bones[timeline.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = timeline.frames;\n        let r1 = 0, r2 = 0;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.rotation = bone.data.rotation;\n                default:\n                    return;\n                case MixBlend.first:\n                    r1 = bone.rotation;\n                    r2 = bone.data.rotation;\n            }\n        }\n        else {\n            r1 = blend == MixBlend.setup ? bone.data.rotation : bone.rotation;\n            r2 = bone.data.rotation + timeline.getCurveValue(time);\n        }\n        // Mix between rotations using the direction of the shortest route on the first frame while detecting crosses.\n        let total = 0, diff = r2 - r1;\n        diff -= (16384 - ((16384.499999999996 - diff / 360) | 0)) * 360;\n        if (diff == 0) {\n            total = timelinesRotation[i];\n        }\n        else {\n            let lastTotal = 0, lastDiff = 0;\n            if (firstFrame) {\n                lastTotal = 0;\n                lastDiff = diff;\n            }\n            else {\n                lastTotal = timelinesRotation[i];\n                lastDiff = timelinesRotation[i + 1];\n            }\n            let loops = lastTotal - lastTotal % 360;\n            total = diff + loops;\n            let current = diff >= 0, dir = lastTotal >= 0;\n            if (Math.abs(lastDiff) <= 90 && MathUtils.signum(lastDiff) != MathUtils.signum(diff)) {\n                if (Math.abs(lastTotal - loops) > 180) {\n                    total += 360 * MathUtils.signum(lastTotal);\n                    dir = current;\n                }\n                else if (loops != 0)\n                    total -= 360 * MathUtils.signum(lastTotal);\n                else\n                    dir = current;\n            }\n            if (dir != current)\n                total += 360 * MathUtils.signum(lastTotal);\n            timelinesRotation[i] = total;\n        }\n        timelinesRotation[i + 1] = diff;\n        bone.rotation = r1 + total * alpha;\n    }\n    queueEvents(entry, animationTime) {\n        let animationStart = entry.animationStart, animationEnd = entry.animationEnd;\n        let duration = animationEnd - animationStart;\n        let trackLastWrapped = entry.trackLast % duration;\n        // Queue events before complete.\n        let events = this.events;\n        let i = 0, n = events.length;\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < trackLastWrapped)\n                break;\n            if (event.time > animationEnd)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n        // Queue complete if completed a loop iteration or the animation.\n        let complete = false;\n        if (entry.loop)\n            complete = duration == 0 || trackLastWrapped > entry.trackTime % duration;\n        else\n            complete = animationTime >= animationEnd && entry.animationLast < animationEnd;\n        if (complete)\n            this.queue.complete(entry);\n        // Queue events after complete.\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < animationStart)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n    }\n    /** Removes all animations from all tracks, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTracks() {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++)\n            this.clearTrack(i);\n        this.tracks.length = 0;\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    /** Removes all animations from the track, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTrack(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return;\n        let current = this.tracks[trackIndex];\n        if (!current)\n            return;\n        this.queue.end(current);\n        this.clearNext(current);\n        let entry = current;\n        while (true) {\n            let from = entry.mixingFrom;\n            if (!from)\n                break;\n            this.queue.end(from);\n            entry.mixingFrom = null;\n            entry.mixingTo = null;\n            entry = from;\n        }\n        this.tracks[current.trackIndex] = null;\n        this.queue.drain();\n    }\n    setCurrent(index, current, interrupt) {\n        let from = this.expandToIndex(index);\n        this.tracks[index] = current;\n        current.previous = null;\n        if (from) {\n            if (interrupt)\n                this.queue.interrupt(from);\n            current.mixingFrom = from;\n            from.mixingTo = current;\n            current.mixTime = 0;\n            // Store the interrupted mix percentage.\n            if (from.mixingFrom && from.mixDuration > 0)\n                current.interruptAlpha *= Math.min(1, from.mixTime / from.mixDuration);\n            from.timelinesRotation.length = 0; // Reset rotation for mixing out, in case entry was mixed in.\n        }\n        this.queue.start(current);\n    }\n    /** Sets an animation by name.\n      *\n      * See {@link #setAnimationWith()}. */\n    setAnimation(trackIndex, animationName, loop = false) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.setAnimationWith(trackIndex, animation, loop);\n    }\n    /** Sets the current animation for a track, discarding any queued animations. If the formerly current track entry was never\n     * applied to a skeleton, it is replaced (not mixed from).\n     * @param loop If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n     *           duration. In either case {@link TrackEntry#trackEnd} determines when the track is cleared.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    setAnimationWith(trackIndex, animation, loop = false) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let interrupt = true;\n        let current = this.expandToIndex(trackIndex);\n        if (current) {\n            if (current.nextTrackLast == -1) {\n                // Don't mix from an entry that was never applied.\n                this.tracks[trackIndex] = current.mixingFrom;\n                this.queue.interrupt(current);\n                this.queue.end(current);\n                this.clearNext(current);\n                current = current.mixingFrom;\n                interrupt = false;\n            }\n            else\n                this.clearNext(current);\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, current);\n        this.setCurrent(trackIndex, entry, interrupt);\n        this.queue.drain();\n        return entry;\n    }\n    /** Queues an animation by name.\n     *\n     * See {@link #addAnimationWith()}. */\n    addAnimation(trackIndex, animationName, loop = false, delay = 0) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.addAnimationWith(trackIndex, animation, loop, delay);\n    }\n    /** Adds an animation to be played after the current or last queued animation for a track. If the track is empty, it is\n     * equivalent to calling {@link #setAnimationWith()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration (from the {@link AnimationStateData}) plus the specified `delay` (ie the mix\n     *           ends at (`delay` = 0) or before (`delay` < 0) the previous track entry duration). If the\n     *           previous entry is looping, its next loop completion is used instead of its duration.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addAnimationWith(trackIndex, animation, loop = false, delay = 0) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let last = this.expandToIndex(trackIndex);\n        if (last) {\n            while (last.next)\n                last = last.next;\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, last);\n        if (!last) {\n            this.setCurrent(trackIndex, entry, true);\n            this.queue.drain();\n        }\n        else {\n            last.next = entry;\n            entry.previous = last;\n            if (delay <= 0)\n                delay += last.getTrackComplete() - entry.mixDuration;\n        }\n        entry.delay = delay;\n        return entry;\n    }\n    /** Sets an empty animation for a track, discarding any queued animations, and sets the track entry's\n     * {@link TrackEntry#mixduration}. An empty animation has no timelines and serves as a placeholder for mixing in or out.\n     *\n     * Mixing out is done by setting an empty animation with a mix duration using either {@link #setEmptyAnimation()},\n     * {@link #setEmptyAnimations()}, or {@link #addEmptyAnimation()}. Mixing to an empty animation causes\n     * the previous animation to be applied less and less over the mix duration. Properties keyed in the previous animation\n     * transition to the value from lower tracks or to the setup pose value if no lower tracks key the property. A mix duration of\n     * 0 still mixes out over one frame.\n     *\n     * Mixing in is done by first setting an empty animation, then adding an animation using\n     * {@link #addAnimation()} and on the returned track entry, set the\n     * {@link TrackEntry#setMixDuration()}. Mixing from an empty animation causes the new animation to be applied more and\n     * more over the mix duration. Properties keyed in the new animation transition from the value from lower tracks or from the\n     * setup pose value if no lower tracks key the property to the value keyed in the new animation. */\n    setEmptyAnimation(trackIndex, mixDuration = 0) {\n        let entry = this.setAnimationWith(trackIndex, AnimationState.emptyAnimation(), false);\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Adds an empty animation to be played after the current or last queued animation for a track, and sets the track entry's\n     * {@link TrackEntry#mixDuration}. If the track is empty, it is equivalent to calling\n     * {@link #setEmptyAnimation()}.\n     *\n     * See {@link #setEmptyAnimation()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration plus the specified `delay` (ie the mix ends at (`delay` = 0) or\n     *           before (`delay` < 0) the previous track entry duration). If the previous entry is looping, its next\n     *           loop completion is used instead of its duration.\n     * @return A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addEmptyAnimation(trackIndex, mixDuration = 0, delay = 0) {\n        let entry = this.addAnimationWith(trackIndex, AnimationState.emptyAnimation(), false, delay);\n        if (delay <= 0)\n            entry.delay += entry.mixDuration - mixDuration;\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Sets an empty animation for every track, discarding any queued animations, and mixes to it over the specified mix\n      * duration. */\n    setEmptyAnimations(mixDuration = 0) {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++) {\n            let current = this.tracks[i];\n            if (current)\n                this.setEmptyAnimation(current.trackIndex, mixDuration);\n        }\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    expandToIndex(index) {\n        if (index < this.tracks.length)\n            return this.tracks[index];\n        Utils.ensureArrayCapacity(this.tracks, index + 1, null);\n        this.tracks.length = index + 1;\n        return null;\n    }\n    /** @param last May be null. */\n    trackEntry(trackIndex, animation, loop, last) {\n        let entry = this.trackEntryPool.obtain();\n        entry.reset();\n        entry.trackIndex = trackIndex;\n        entry.animation = animation;\n        entry.loop = loop;\n        entry.holdPrevious = false;\n        entry.reverse = false;\n        entry.shortestRotation = false;\n        entry.eventThreshold = 0;\n        entry.attachmentThreshold = 0;\n        entry.drawOrderThreshold = 0;\n        entry.animationStart = 0;\n        entry.animationEnd = animation.duration;\n        entry.animationLast = -1;\n        entry.nextAnimationLast = -1;\n        entry.delay = 0;\n        entry.trackTime = 0;\n        entry.trackLast = -1;\n        entry.nextTrackLast = -1;\n        entry.trackEnd = Number.MAX_VALUE;\n        entry.timeScale = 1;\n        entry.alpha = 1;\n        entry.mixTime = 0;\n        entry.mixDuration = !last ? 0 : this.data.getMix(last.animation, animation);\n        entry.interruptAlpha = 1;\n        entry.totalAlpha = 0;\n        entry.mixBlend = MixBlend.replace;\n        return entry;\n    }\n    /** Removes the {@link TrackEntry#getNext() next entry} and all entries after it for the specified entry. */\n    clearNext(entry) {\n        let next = entry.next;\n        while (next) {\n            this.queue.dispose(next);\n            next = next.next;\n        }\n        entry.next = null;\n    }\n    _animationsChanged() {\n        this.animationsChanged = false;\n        this.propertyIDs.clear();\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let entry = tracks[i];\n            if (!entry)\n                continue;\n            while (entry.mixingFrom)\n                entry = entry.mixingFrom;\n            do {\n                if (!entry.mixingTo || entry.mixBlend != MixBlend.add)\n                    this.computeHold(entry);\n                entry = entry.mixingTo;\n            } while (entry);\n        }\n    }\n    computeHold(entry) {\n        let to = entry.mixingTo;\n        let timelines = entry.animation.timelines;\n        let timelinesCount = entry.animation.timelines.length;\n        let timelineMode = entry.timelineMode;\n        timelineMode.length = timelinesCount;\n        let timelineHoldMix = entry.timelineHoldMix;\n        timelineHoldMix.length = 0;\n        let propertyIDs = this.propertyIDs;\n        if (to && to.holdPrevious) {\n            for (let i = 0; i < timelinesCount; i++)\n                timelineMode[i] = propertyIDs.addAll(timelines[i].getPropertyIds()) ? HOLD_FIRST : HOLD_SUBSEQUENT;\n            return;\n        }\n        outer: for (let i = 0; i < timelinesCount; i++) {\n            let timeline = timelines[i];\n            let ids = timeline.getPropertyIds();\n            if (!propertyIDs.addAll(ids))\n                timelineMode[i] = SUBSEQUENT;\n            else if (!to || timeline instanceof AttachmentTimeline || timeline instanceof DrawOrderTimeline\n                || timeline instanceof EventTimeline || !to.animation.hasTimeline(ids)) {\n                timelineMode[i] = FIRST;\n            }\n            else {\n                for (let next = to.mixingTo; next; next = next.mixingTo) {\n                    if (next.animation.hasTimeline(ids))\n                        continue;\n                    if (entry.mixDuration > 0) {\n                        timelineMode[i] = HOLD_MIX;\n                        timelineHoldMix[i] = next;\n                        continue outer;\n                    }\n                    break;\n                }\n                timelineMode[i] = HOLD_FIRST;\n            }\n        }\n    }\n    /** Returns the track entry for the animation currently playing on the track, or null if no animation is currently playing. */\n    getCurrent(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return null;\n        return this.tracks[trackIndex];\n    }\n    /** Adds a listener to receive events for all track entries. */\n    addListener(listener) {\n        if (!listener)\n            throw new Error(\"listener cannot be null.\");\n        this.listeners.push(listener);\n    }\n    /** Removes the listener added with {@link #addListener()}. */\n    removeListener(listener) {\n        let index = this.listeners.indexOf(listener);\n        if (index >= 0)\n            this.listeners.splice(index, 1);\n    }\n    /** Removes all listeners added with {@link #addListener()}. */\n    clearListeners() {\n        this.listeners.length = 0;\n    }\n    /** Discards all listener notifications that have not yet been delivered. This can be useful to call from an\n     * {@link AnimationStateListener} when it is known that further notifications that may have been already queued for delivery\n     * are not wanted because new animations are being set. */\n    clearListenerNotifications() {\n        this.queue.clear();\n    }\n}\nAnimationState._emptyAnimation = new Animation(\"<empty>\", [], 0);\n/** Stores settings and other state for the playback of an animation on an {@link AnimationState} track.\n *\n * References to a track entry must not be kept after the {@link AnimationStateListener#dispose()} event occurs. */\nexport class TrackEntry {\n    constructor() {\n        /** The animation to apply for this track entry. */\n        this.animation = null;\n        this.previous = null;\n        /** The animation queued to start after this animation, or null. `next` makes up a linked list. */\n        this.next = null;\n        /** The track entry for the previous animation when mixing from the previous animation to this animation, or null if no\n         * mixing is currently occuring. When mixing from multiple animations, `mixingFrom` makes up a linked list. */\n        this.mixingFrom = null;\n        /** The track entry for the next animation when mixing from this animation to the next animation, or null if no mixing is\n         * currently occuring. When mixing to multiple animations, `mixingTo` makes up a linked list. */\n        this.mixingTo = null;\n        /** The listener for events generated by this track entry, or null.\n         *\n         * A track entry returned from {@link AnimationState#setAnimation()} is already the current animation\n         * for the track, so the track entry listener {@link AnimationStateListener#start()} will not be called. */\n        this.listener = null;\n        /** The index of the track where this track entry is either current or queued.\n         *\n         * See {@link AnimationState#getCurrent()}. */\n        this.trackIndex = 0;\n        /** If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n         * duration. */\n        this.loop = false;\n        /** If true, when mixing from the previous animation to this animation, the previous animation is applied as normal instead\n         * of being mixed out.\n         *\n         * When mixing between animations that key the same property, if a lower track also keys that property then the value will\n         * briefly dip toward the lower track value during the mix. This happens because the first animation mixes from 100% to 0%\n         * while the second animation mixes from 0% to 100%. Setting `holdPrevious` to true applies the first animation\n         * at 100% during the mix so the lower track value is overwritten. Such dipping does not occur on the lowest track which\n         * keys the property, only when a higher track also keys the property.\n         *\n         * Snapping will occur if `holdPrevious` is true and this animation does not key all the same properties as the\n         * previous animation. */\n        this.holdPrevious = false;\n        this.reverse = false;\n        this.shortestRotation = false;\n        /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\n         * `eventThreshold`, event timelines are applied while this animation is being mixed out. Defaults to 0, so event\n         * timelines are not applied while this animation is being mixed out. */\n        this.eventThreshold = 0;\n        /** When the mix percentage ({@link #mixtime} / {@link #mixDuration}) is less than the\n         * `attachmentThreshold`, attachment timelines are applied while this animation is being mixed out. Defaults to\n         * 0, so attachment timelines are not applied while this animation is being mixed out. */\n        this.attachmentThreshold = 0;\n        /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\n         * `drawOrderThreshold`, draw order timelines are applied while this animation is being mixed out. Defaults to 0,\n         * so draw order timelines are not applied while this animation is being mixed out. */\n        this.drawOrderThreshold = 0;\n        /** Seconds when this animation starts, both initially and after looping. Defaults to 0.\n         *\n         * When changing the `animationStart` time, it often makes sense to set {@link #animationLast} to the same\n         * value to prevent timeline keys before the start time from triggering. */\n        this.animationStart = 0;\n        /** Seconds for the last frame of this animation. Non-looping animations won't play past this time. Looping animations will\n         * loop back to {@link #animationStart} at this time. Defaults to the animation {@link Animation#duration}. */\n        this.animationEnd = 0;\n        /** The time in seconds this animation was last applied. Some timelines use this for one-time triggers. Eg, when this\n         * animation is applied, event timelines will fire all events between the `animationLast` time (exclusive) and\n         * `animationTime` (inclusive). Defaults to -1 to ensure triggers on frame 0 happen the first time this animation\n         * is applied. */\n        this.animationLast = 0;\n        this.nextAnimationLast = 0;\n        /** Seconds to postpone playing the animation. When this track entry is the current track entry, `delay`\n         * postpones incrementing the {@link #trackTime}. When this track entry is queued, `delay` is the time from\n         * the start of the previous animation to when this track entry will become the current track entry (ie when the previous\n         * track entry {@link TrackEntry#trackTime} >= this track entry's `delay`).\n         *\n         * {@link #timeScale} affects the delay. */\n        this.delay = 0;\n        /** Current time in seconds this track entry has been the current track entry. The track time determines\n         * {@link #animationTime}. The track time can be set to start the animation at a time other than 0, without affecting\n         * looping. */\n        this.trackTime = 0;\n        this.trackLast = 0;\n        this.nextTrackLast = 0;\n        /** The track time in seconds when this animation will be removed from the track. Defaults to the highest possible float\n         * value, meaning the animation will be applied until a new animation is set or the track is cleared. If the track end time\n         * is reached, no other animations are queued for playback, and mixing from any previous animations is complete, then the\n         * properties keyed by the animation are set to the setup pose and the track is cleared.\n         *\n         * It may be desired to use {@link AnimationState#addEmptyAnimation()} rather than have the animation\n         * abruptly cease being applied. */\n        this.trackEnd = 0;\n        /** Multiplier for the delta time when this track entry is updated, causing time for this animation to pass slower or\n         * faster. Defaults to 1.\n         *\n         * {@link #mixTime} is not affected by track entry time scale, so {@link #mixDuration} may need to be adjusted to\n         * match the animation speed.\n         *\n         * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n         * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, assuming time scale to be 1. If\n         * the time scale is not 1, the delay may need to be adjusted.\n         *\n         * See AnimationState {@link AnimationState#timeScale} for affecting all animations. */\n        this.timeScale = 0;\n        /** Values < 1 mix this animation with the skeleton's current pose (usually the pose resulting from lower tracks). Defaults\n         * to 1, which overwrites the skeleton's current pose with this animation.\n         *\n         * Typically track 0 is used to completely pose the skeleton, then alpha is used on higher tracks. It doesn't make sense to\n         * use alpha on track 0 if the skeleton pose is from the last frame render. */\n        this.alpha = 0;\n        /** Seconds from 0 to the {@link #getMixDuration()} when mixing from the previous animation to this animation. May be\n         * slightly more than `mixDuration` when the mix is complete. */\n        this.mixTime = 0;\n        /** Seconds for mixing from the previous animation to this animation. Defaults to the value provided by AnimationStateData\n         * {@link AnimationStateData#getMix()} based on the animation before this animation (if any).\n         *\n         * A mix duration of 0 still mixes out over one frame to provide the track entry being mixed out a chance to revert the\n         * properties it was animating.\n         *\n         * The `mixDuration` can be set manually rather than use the value from\n         * {@link AnimationStateData#getMix()}. In that case, the `mixDuration` can be set for a new\n         * track entry only before {@link AnimationState#update(float)} is first called.\n         *\n         * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n         * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, not a mix duration set\n         * afterward. */\n        this.mixDuration = 0;\n        this.interruptAlpha = 0;\n        this.totalAlpha = 0;\n        /** Controls how properties keyed in the animation are mixed with lower tracks. Defaults to {@link MixBlend#replace}, which\n         * replaces the values from the lower tracks with the animation values. {@link MixBlend#add} adds the animation values to\n         * the values from the lower tracks.\n         *\n         * The `mixBlend` can be set for a new track entry only before {@link AnimationState#apply()} is first\n         * called. */\n        this.mixBlend = MixBlend.replace;\n        this.timelineMode = new Array();\n        this.timelineHoldMix = new Array();\n        this.timelinesRotation = new Array();\n    }\n    reset() {\n        this.next = null;\n        this.previous = null;\n        this.mixingFrom = null;\n        this.mixingTo = null;\n        this.animation = null;\n        this.listener = null;\n        this.timelineMode.length = 0;\n        this.timelineHoldMix.length = 0;\n        this.timelinesRotation.length = 0;\n    }\n    /** Uses {@link #trackTime} to compute the `animationTime`, which is between {@link #animationStart}\n     * and {@link #animationEnd}. When the `trackTime` is 0, the `animationTime` is equal to the\n     * `animationStart` time. */\n    getAnimationTime() {\n        if (this.loop) {\n            let duration = this.animationEnd - this.animationStart;\n            if (duration == 0)\n                return this.animationStart;\n            return (this.trackTime % duration) + this.animationStart;\n        }\n        return Math.min(this.trackTime + this.animationStart, this.animationEnd);\n    }\n    setAnimationLast(animationLast) {\n        this.animationLast = animationLast;\n        this.nextAnimationLast = animationLast;\n    }\n    /** Returns true if at least one loop has been completed.\n     *\n     * See {@link AnimationStateListener#complete()}. */\n    isComplete() {\n        return this.trackTime >= this.animationEnd - this.animationStart;\n    }\n    /** Resets the rotation directions for mixing this entry's rotate timelines. This can be useful to avoid bones rotating the\n     * long way around when using {@link #alpha} and starting animations on other tracks.\n     *\n     * Mixing with {@link MixBlend#replace} involves finding a rotation between two others, which has two possible solutions:\n     * the short way or the long way around. The two rotations likely change over time, so which direction is the short or long\n     * way also changes. If the short way was always chosen, bones would flip to the other side when that direction became the\n     * long way. TrackEntry chooses the short way the first time it is applied and remembers that direction. */\n    resetRotationDirections() {\n        this.timelinesRotation.length = 0;\n    }\n    getTrackComplete() {\n        let duration = this.animationEnd - this.animationStart;\n        if (duration != 0) {\n            if (this.loop)\n                return duration * (1 + ((this.trackTime / duration) | 0)); // Completion of next loop.\n            if (this.trackTime < duration)\n                return duration; // Before duration.\n        }\n        return this.trackTime; // Next update.\n    }\n}\nexport class EventQueue {\n    constructor(animState) {\n        this.objects = [];\n        this.drainDisabled = false;\n        this.animState = animState;\n    }\n    start(entry) {\n        this.objects.push(EventType.start);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    interrupt(entry) {\n        this.objects.push(EventType.interrupt);\n        this.objects.push(entry);\n    }\n    end(entry) {\n        this.objects.push(EventType.end);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    dispose(entry) {\n        this.objects.push(EventType.dispose);\n        this.objects.push(entry);\n    }\n    complete(entry) {\n        this.objects.push(EventType.complete);\n        this.objects.push(entry);\n    }\n    event(entry, event) {\n        this.objects.push(EventType.event);\n        this.objects.push(entry);\n        this.objects.push(event);\n    }\n    drain() {\n        if (this.drainDisabled)\n            return;\n        this.drainDisabled = true;\n        let objects = this.objects;\n        let listeners = this.animState.listeners;\n        for (let i = 0; i < objects.length; i += 2) {\n            let type = objects[i];\n            let entry = objects[i + 1];\n            switch (type) {\n                case EventType.start:\n                    if (entry.listener && entry.listener.start)\n                        entry.listener.start(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.start)\n                            listener.start(entry);\n                    }\n                    break;\n                case EventType.interrupt:\n                    if (entry.listener && entry.listener.interrupt)\n                        entry.listener.interrupt(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.interrupt)\n                            listener.interrupt(entry);\n                    }\n                    break;\n                case EventType.end:\n                    if (entry.listener && entry.listener.end)\n                        entry.listener.end(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.end)\n                            listener.end(entry);\n                    }\n                // Fall through.\n                case EventType.dispose:\n                    if (entry.listener && entry.listener.dispose)\n                        entry.listener.dispose(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.dispose)\n                            listener.dispose(entry);\n                    }\n                    this.animState.trackEntryPool.free(entry);\n                    break;\n                case EventType.complete:\n                    if (entry.listener && entry.listener.complete)\n                        entry.listener.complete(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.complete)\n                            listener.complete(entry);\n                    }\n                    break;\n                case EventType.event:\n                    let event = objects[i++ + 2];\n                    if (entry.listener && entry.listener.event)\n                        entry.listener.event(entry, event);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.event)\n                            listener.event(entry, event);\n                    }\n                    break;\n            }\n        }\n        this.clear();\n        this.drainDisabled = false;\n    }\n    clear() {\n        this.objects.length = 0;\n    }\n}\nexport var EventType;\n(function (EventType) {\n    EventType[EventType[\"start\"] = 0] = \"start\";\n    EventType[EventType[\"interrupt\"] = 1] = \"interrupt\";\n    EventType[EventType[\"end\"] = 2] = \"end\";\n    EventType[EventType[\"dispose\"] = 3] = \"dispose\";\n    EventType[EventType[\"complete\"] = 4] = \"complete\";\n    EventType[EventType[\"event\"] = 5] = \"event\";\n})(EventType || (EventType = {}));\nexport class AnimationStateAdapter {\n    start(entry) {\n    }\n    interrupt(entry) {\n    }\n    end(entry) {\n    }\n    dispose(entry) {\n    }\n    complete(entry) {\n    }\n    event(entry, event) {\n    }\n}\n/** 1. A previously applied timeline has set this property.\n *\n * Result: Mix from the current pose to the timeline pose. */\nexport const SUBSEQUENT = 0;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry applied after this one does not have a timeline to set this property.\n *\n * Result: Mix from the setup pose to the timeline pose. */\nexport const FIRST = 1;\n/** 1) A previously applied timeline has set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the current pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading\n * animations that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_SUBSEQUENT = 2;\n/** 1) This is the first timeline to set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the setup pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading animations\n * that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_FIRST = 3;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry to be applied does have a timeline to set this property.\n * 3. The next track entry after that one does have a timeline to set this property.\n * 4. timelineHoldMix stores the first subsequent track entry that does not have a timeline to set this property.\n *\n * Result: The same as HOLD except the mix percentage from the timelineHoldMix track entry is used. This handles when more than\n * 2 track entries in a row have a timeline that sets the same property.\n *\n * Eg, A -> B -> C -> D where A, B, and C have a timeline setting same property, but D does not. When A is applied, to avoid\n * \"dipping\" A is not mixed out, however D (the first entry that doesn't set the property) mixing in is used to mix out A\n * (which affects B and C). Without using D to mix out, A would be applied fully until mixing completes, then snap into\n * place. */\nexport const HOLD_MIX = 4;\nexport const SETUP = 1;\nexport const CURRENT = 2;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores mix (crossfade) durations to be applied when {@link AnimationState} animations are changed. */\nexport class AnimationStateData {\n    constructor(skeletonData) {\n        this.animationToMixTime = {};\n        /** The mix duration to use when no mix duration has been defined between two animations. */\n        this.defaultMix = 0;\n        if (!skeletonData)\n            throw new Error(\"skeletonData cannot be null.\");\n        this.skeletonData = skeletonData;\n    }\n    /** Sets a mix duration by animation name.\n     *\n     * See {@link #setMixWith()}. */\n    setMix(fromName, toName, duration) {\n        let from = this.skeletonData.findAnimation(fromName);\n        if (!from)\n            throw new Error(\"Animation not found: \" + fromName);\n        let to = this.skeletonData.findAnimation(toName);\n        if (!to)\n            throw new Error(\"Animation not found: \" + toName);\n        this.setMixWith(from, to, duration);\n    }\n    /** Sets the mix duration when changing from the specified animation to the other.\n     *\n     * See {@link TrackEntry#mixDuration}. */\n    setMixWith(from, to, duration) {\n        if (!from)\n            throw new Error(\"from cannot be null.\");\n        if (!to)\n            throw new Error(\"to cannot be null.\");\n        let key = from.name + \".\" + to.name;\n        this.animationToMixTime[key] = duration;\n    }\n    /** Returns the mix duration to use when changing from the specified animation to the other, or the {@link #defaultMix} if\n      * no mix duration has been set. */\n    getMix(from, to) {\n        let key = from.name + \".\" + to.name;\n        let value = this.animationToMixTime[key];\n        return value === undefined ? this.defaultMix : value;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5pbWF0aW9uU3RhdGVEYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuaW1hdGlvblN0YXRlRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFPL0UseUdBQXlHO0FBQ3pHLE1BQU0sT0FBTyxrQkFBa0I7SUFTOUIsWUFBYSxZQUEwQjtRQUx2Qyx1QkFBa0IsR0FBc0IsRUFBRSxDQUFDO1FBRTNDLDRGQUE0RjtRQUM1RixlQUFVLEdBQUcsQ0FBQyxDQUFDO1FBR2QsSUFBSSxDQUFDLFlBQVk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFDbkUsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDbEMsQ0FBQztJQUVEOztvQ0FFZ0M7SUFDaEMsTUFBTSxDQUFFLFFBQWdCLEVBQUUsTUFBYyxFQUFFLFFBQWdCO1FBQ3pELElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsR0FBRyxRQUFRLENBQUMsQ0FBQztRQUMvRCxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsRUFBRTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsdUJBQXVCLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRDs7NkNBRXlDO0lBQ3pDLFVBQVUsQ0FBRSxJQUFlLEVBQUUsRUFBYSxFQUFFLFFBQWdCO1FBQzNELElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxFQUFFO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQy9DLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDcEMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQztJQUN6QyxDQUFDO0lBRUQ7d0NBQ29DO0lBQ3BDLE1BQU0sQ0FBRSxJQUFlLEVBQUUsRUFBYTtRQUNyQyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDO1FBQ3BDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6QyxPQUFPLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUN0RCxDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment with vertices that make up a polygon. Can be used for hit detection, creating physics bodies, spawning particle\n * effects, and more.\n *\n * See {@link SkeletonBounds} and [Bounding Boxes](http://esotericsoftware.com/spine-bounding-boxes) in the Spine User\n * Guide. */\nexport class BoundingBoxAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        this.color = new Color(1, 1, 1, 1);\n    }\n    copy() {\n        let copy = new BoundingBoxAttachment(this.name);\n        this.copyTo(copy);\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm91bmRpbmdCb3hBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0JvdW5kaW5nQm94QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNqQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxjQUFjLENBQUM7QUFFNUQ7Ozs7WUFJWTtBQUNaLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxnQkFBZ0I7SUFHMUQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUhiLFVBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUk5QixDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUkscUJBQXFCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment with vertices that make up a polygon used for clipping the rendering of other attachments. */\nexport class ClippingAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        /** Clipping is performed between the clipping polygon's slot and the end slot. Returns null if clipping is done until the end of\n         * the skeleton's rendering. */\n        this.endSlot = null;\n        // Nonessential.\n        /** The color of the clipping polygon as it was in Spine. Available only when nonessential data was exported. Clipping polygons\n         * are not usually rendered at runtime. */\n        this.color = new Color(0.2275, 0.2275, 0.8078, 1); // ce3a3aff\n    }\n    copy() {\n        let copy = new ClippingAttachment(this.name);\n        this.copyTo(copy);\n        copy.endSlot = this.endSlot;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpcHBpbmdBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0NsaXBwaW5nQXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNqQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxjQUFjLENBQUM7QUFFNUQsK0dBQStHO0FBQy9HLE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxnQkFBZ0I7SUFVdkQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQVZiO3VDQUMrQjtRQUMvQixZQUFPLEdBQW9CLElBQUksQ0FBQztRQUVoQyxnQkFBZ0I7UUFDaEI7a0RBQzBDO1FBQzFDLFVBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVc7SUFJekQsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class Texture {\n    constructor(image) {\n        this._image = image;\n    }\n    getImage() {\n        return this._image;\n    }\n}\nexport var TextureFilter;\n(function (TextureFilter) {\n    TextureFilter[TextureFilter[\"Nearest\"] = 9728] = \"Nearest\";\n    TextureFilter[TextureFilter[\"Linear\"] = 9729] = \"Linear\";\n    TextureFilter[TextureFilter[\"MipMap\"] = 9987] = \"MipMap\";\n    TextureFilter[TextureFilter[\"MipMapNearestNearest\"] = 9984] = \"MipMapNearestNearest\";\n    TextureFilter[TextureFilter[\"MipMapLinearNearest\"] = 9985] = \"MipMapLinearNearest\";\n    TextureFilter[TextureFilter[\"MipMapNearestLinear\"] = 9986] = \"MipMapNearestLinear\";\n    TextureFilter[TextureFilter[\"MipMapLinearLinear\"] = 9987] = \"MipMapLinearLinear\"; // WebGLRenderingContext.LINEAR_MIPMAP_LINEAR\n})(TextureFilter || (TextureFilter = {}));\nexport var TextureWrap;\n(function (TextureWrap) {\n    TextureWrap[TextureWrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\n    TextureWrap[TextureWrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\n    TextureWrap[TextureWrap[\"Repeat\"] = 10497] = \"Repeat\"; // WebGLRenderingContext.REPEAT\n})(TextureWrap || (TextureWrap = {}));\nexport class TextureRegion {\n    constructor() {\n        this.u = 0;\n        this.v = 0;\n        this.u2 = 0;\n        this.v2 = 0;\n        this.width = 0;\n        this.height = 0;\n        this.degrees = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.originalWidth = 0;\n        this.originalHeight = 0;\n    }\n}\nexport class FakeTexture extends Texture {\n    setFilters(minFilter, magFilter) { }\n    setWraps(uWrap, vWrap) { }\n    dispose() { }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9UZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxNQUFNLE9BQWdCLE9BQU87SUFHNUIsWUFBYSxLQUFxQztRQUNqRCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDO0lBRUQsUUFBUTtRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNwQixDQUFDO0NBS0Q7QUFFRCxNQUFNLENBQU4sSUFBWSxhQVFYO0FBUkQsV0FBWSxhQUFhO0lBQ3hCLDBEQUFjLENBQUE7SUFDZCx3REFBYSxDQUFBO0lBQ2Isd0RBQWEsQ0FBQTtJQUNiLG9GQUEyQixDQUFBO0lBQzNCLGtGQUEwQixDQUFBO0lBQzFCLGtGQUEwQixDQUFBO0lBQzFCLGdGQUF5QixDQUFBLENBQUMsNkNBQTZDO0FBQ3hFLENBQUMsRUFSVyxhQUFhLEtBQWIsYUFBYSxRQVF4QjtBQUVELE1BQU0sQ0FBTixJQUFZLFdBSVg7QUFKRCxXQUFZLFdBQVc7SUFDdEIscUVBQXNCLENBQUE7SUFDdEIsK0RBQW1CLENBQUE7SUFDbkIscURBQWMsQ0FBQSxDQUFDLCtCQUErQjtBQUMvQyxDQUFDLEVBSlcsV0FBVyxLQUFYLFdBQVcsUUFJdEI7QUFFRCxNQUFNLE9BQU8sYUFBYTtJQUExQjtRQUVDLE1BQUMsR0FBRyxDQUFDLENBQUM7UUFBQyxNQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsT0FBRSxHQUFHLENBQUMsQ0FBQztRQUFDLE9BQUUsR0FBRyxDQUFDLENBQUM7UUFDZixVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQUMsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUN0QixZQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ1osWUFBTyxHQUFHLENBQUMsQ0FBQztRQUFDLFlBQU8sR0FBRyxDQUFDLENBQUM7UUFDekIsa0JBQWEsR0FBRyxDQUFDLENBQUM7UUFBQyxtQkFBYyxHQUFHLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQUE7QUFFRCxNQUFNLE9BQU8sV0FBWSxTQUFRLE9BQU87SUFDdkMsVUFBVSxDQUFFLFNBQXdCLEVBQUUsU0FBd0IsSUFBSSxDQUFDO0lBQ25FLFFBQVEsQ0FBRSxLQUFrQixFQUFFLEtBQWtCLElBQUksQ0FBQztJQUNyRCxPQUFPLEtBQU0sQ0FBQztDQUNkIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils\";\n/** Stores the setup pose for a {@link Bone}. */\nexport class BoneData {\n    constructor(index, name, parent) {\n        /** The index of the bone in {@link Skeleton#getBones()}. */\n        this.index = 0;\n        /** @returns May be null. */\n        this.parent = null;\n        /** The bone's length. */\n        this.length = 0;\n        /** The local x translation. */\n        this.x = 0;\n        /** The local y translation. */\n        this.y = 0;\n        /** The local rotation. */\n        this.rotation = 0;\n        /** The local scaleX. */\n        this.scaleX = 1;\n        /** The local scaleY. */\n        this.scaleY = 1;\n        /** The local shearX. */\n        this.shearX = 0;\n        /** The local shearX. */\n        this.shearY = 0;\n        /** The transform mode for how parent world transforms affect this bone. */\n        this.transformMode = TransformMode.Normal;\n        /** When true, {@link Skeleton#updateWorldTransform()} only updates this bone if the {@link Skeleton#skin} contains this\n          * bone.\n          * @see Skin#bones */\n        this.skinRequired = false;\n        /** The color of the bone as it was in Spine. Available only when nonessential data was exported. Bones are not usually\n         * rendered at runtime. */\n        this.color = new Color();\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.parent = parent;\n    }\n}\n/** Determines how a bone inherits world transforms from parent bones. */\nexport var TransformMode;\n(function (TransformMode) {\n    TransformMode[TransformMode[\"Normal\"] = 0] = \"Normal\";\n    TransformMode[TransformMode[\"OnlyTranslation\"] = 1] = \"OnlyTranslation\";\n    TransformMode[TransformMode[\"NoRotationOrReflection\"] = 2] = \"NoRotationOrReflection\";\n    TransformMode[TransformMode[\"NoScale\"] = 3] = \"NoScale\";\n    TransformMode[TransformMode[\"NoScaleOrReflection\"] = 4] = \"NoScaleOrReflection\";\n})(TransformMode || (TransformMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm9uZURhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQm9uZURhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBOENwQixZQUFhLEtBQWEsRUFBRSxJQUFZLEVBQUUsTUFBdUI7UUE3Q2pFLDREQUE0RDtRQUM1RCxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBS2xCLDRCQUE0QjtRQUM1QixXQUFNLEdBQW9CLElBQUksQ0FBQztRQUUvQix5QkFBeUI7UUFDekIsV0FBTSxHQUFXLENBQUMsQ0FBQztRQUVuQiwrQkFBK0I7UUFDL0IsTUFBQyxHQUFHLENBQUMsQ0FBQztRQUVOLCtCQUErQjtRQUMvQixNQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRU4sMEJBQTBCO1FBQzFCLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFFYix3QkFBd0I7UUFDeEIsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUVYLHdCQUF3QjtRQUN4QixXQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRVgsd0JBQXdCO1FBQ3hCLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFFWCx3QkFBd0I7UUFDeEIsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUVYLDJFQUEyRTtRQUMzRSxrQkFBYSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7UUFFckM7OzhCQUVzQjtRQUN0QixpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUVyQjtrQ0FDMEI7UUFDMUIsVUFBSyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFHbkIsSUFBSSxLQUFLLEdBQUcsQ0FBQztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN0QixDQUFDO0NBQ0Q7QUFFRCx5RUFBeUU7QUFDekUsTUFBTSxDQUFOLElBQVksYUFBK0Y7QUFBM0csV0FBWSxhQUFhO0lBQUcscURBQU0sQ0FBQTtJQUFFLHVFQUFlLENBQUE7SUFBRSxxRkFBc0IsQ0FBQTtJQUFFLHVEQUFPLENBQUE7SUFBRSwrRUFBbUIsQ0FBQTtBQUFDLENBQUMsRUFBL0YsYUFBYSxLQUFiLGFBQWEsUUFBa0YifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData\";\n/** Stores the setup pose for a {@link PathConstraint}.\n *\n * See [path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraintData extends ConstraintData {\n    set target(slotData) { this._target = slotData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"SlotData not set.\");\n        else\n            return this._target;\n    }\n    constructor(name) {\n        super(name, 0, false);\n        /** The bones that will be modified by this path constraint. */\n        this.bones = new Array();\n        /** The slot whose path attachment will be used to constrained the bones. */\n        this._target = null;\n        /** The mode for positioning the first bone on the path. */\n        this.positionMode = PositionMode.Fixed;\n        /** The mode for positioning the bones after the first bone on the path. */\n        this.spacingMode = SpacingMode.Fixed;\n        /** The mode for adjusting the rotation of the bones. */\n        this.rotateMode = RotateMode.Chain;\n        /** An offset added to the constrained bone rotation. */\n        this.offsetRotation = 0;\n        /** The position along the path. */\n        this.position = 0;\n        /** The spacing between bones. */\n        this.spacing = 0;\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n    }\n}\n/** Controls how the first bone is positioned along the path.\n *\n * See [position](http://esotericsoftware.com/spine-path-constraints#Position) in the Spine User Guide. */\nexport var PositionMode;\n(function (PositionMode) {\n    PositionMode[PositionMode[\"Fixed\"] = 0] = \"Fixed\";\n    PositionMode[PositionMode[\"Percent\"] = 1] = \"Percent\";\n})(PositionMode || (PositionMode = {}));\n/** Controls how bones after the first bone are positioned along the path.\n *\n * See [spacing](http://esotericsoftware.com/spine-path-constraints#Spacing) in the Spine User Guide. */\nexport var SpacingMode;\n(function (SpacingMode) {\n    SpacingMode[SpacingMode[\"Length\"] = 0] = \"Length\";\n    SpacingMode[SpacingMode[\"Fixed\"] = 1] = \"Fixed\";\n    SpacingMode[SpacingMode[\"Percent\"] = 2] = \"Percent\";\n    SpacingMode[SpacingMode[\"Proportional\"] = 3] = \"Proportional\";\n})(SpacingMode || (SpacingMode = {}));\n/** Controls how bones are rotated, translated, and scaled to match the path.\n *\n * See [rotate mix](http://esotericsoftware.com/spine-path-constraints#Rotate-mix) in the Spine User Guide. */\nexport var RotateMode;\n(function (RotateMode) {\n    RotateMode[RotateMode[\"Tangent\"] = 0] = \"Tangent\";\n    RotateMode[RotateMode[\"Chain\"] = 1] = \"Chain\";\n    RotateMode[RotateMode[\"ChainScale\"] = 2] = \"ChainScale\";\n})(RotateMode || (RotateMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aENvbnN0cmFpbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1BhdGhDb25zdHJhaW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBSWxEOzt5R0FFeUc7QUFDekcsTUFBTSxPQUFPLGtCQUFtQixTQUFRLGNBQWM7SUFPckQsSUFBVyxNQUFNLENBQUUsUUFBa0IsSUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbkUsSUFBVyxNQUFNO1FBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQTs7WUFDbEQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUF3QkQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBbEN2QiwrREFBK0Q7UUFDL0QsVUFBSyxHQUFHLElBQUksS0FBSyxFQUFZLENBQUM7UUFFOUIsNEVBQTRFO1FBQ3BFLFlBQU8sR0FBb0IsSUFBSSxDQUFDO1FBT3hDLDJEQUEyRDtRQUMzRCxpQkFBWSxHQUFpQixZQUFZLENBQUMsS0FBSyxDQUFDO1FBRWhELDJFQUEyRTtRQUMzRSxnQkFBVyxHQUFnQixXQUFXLENBQUMsS0FBSyxDQUFDO1FBRTdDLHdEQUF3RDtRQUN4RCxlQUFVLEdBQWUsVUFBVSxDQUFDLEtBQUssQ0FBQztRQUUxQyx3REFBd0Q7UUFDeEQsbUJBQWMsR0FBVyxDQUFDLENBQUM7UUFFM0IsbUNBQW1DO1FBQ25DLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFFckIsaUNBQWlDO1FBQ2pDLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFFcEIsY0FBUyxHQUFHLENBQUMsQ0FBQztRQUNkLFNBQUksR0FBRyxDQUFDLENBQUM7UUFDVCxTQUFJLEdBQUcsQ0FBQyxDQUFDO0lBSVQsQ0FBQztDQUNEO0FBRUQ7OzBHQUUwRztBQUMxRyxNQUFNLENBQU4sSUFBWSxZQUErQjtBQUEzQyxXQUFZLFlBQVk7SUFBRyxpREFBSyxDQUFBO0lBQUUscURBQU8sQ0FBQTtBQUFDLENBQUMsRUFBL0IsWUFBWSxLQUFaLFlBQVksUUFBbUI7QUFFM0M7O3dHQUV3RztBQUN4RyxNQUFNLENBQU4sSUFBWSxXQUFvRDtBQUFoRSxXQUFZLFdBQVc7SUFBRyxpREFBTSxDQUFBO0lBQUUsK0NBQUssQ0FBQTtJQUFFLG1EQUFPLENBQUE7SUFBRSw2REFBWSxDQUFBO0FBQUMsQ0FBQyxFQUFwRCxXQUFXLEtBQVgsV0FBVyxRQUF5QztBQUVoRTs7OEdBRThHO0FBQzlHLE1BQU0sQ0FBTixJQUFZLFVBQXlDO0FBQXJELFdBQVksVUFBVTtJQUFHLGlEQUFPLENBQUE7SUFBRSw2Q0FBSyxDQUFBO0lBQUUsdURBQVUsQ0FBQTtBQUFDLENBQUMsRUFBekMsVUFBVSxLQUFWLFVBQVUsUUFBK0IifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils\";\n/** Stores the setup pose for a {@link Slot}. */\nexport class SlotData {\n    constructor(index, name, boneData) {\n        /** The index of the slot in {@link Skeleton#getSlots()}. */\n        this.index = 0;\n        /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\n         * color tinting. */\n        this.color = new Color(1, 1, 1, 1);\n        /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n         * color's alpha is not used. */\n        this.darkColor = null;\n        /** The name of the attachment that is visible for this slot in the setup pose, or null if no attachment is visible. */\n        this.attachmentName = null;\n        /** The blend mode for drawing the slot's attachment. */\n        this.blendMode = BlendMode.Normal;\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        if (!boneData)\n            throw new Error(\"boneData cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.boneData = boneData;\n    }\n}\n/** Determines how images are blended with existing pixels when drawn. */\nexport var BlendMode;\n(function (BlendMode) {\n    BlendMode[BlendMode[\"Normal\"] = 0] = \"Normal\";\n    BlendMode[BlendMode[\"Additive\"] = 1] = \"Additive\";\n    BlendMode[BlendMode[\"Multiply\"] = 2] = \"Multiply\";\n    BlendMode[BlendMode[\"Screen\"] = 3] = \"Screen\";\n})(BlendMode || (BlendMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2xvdERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRy9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBd0JwQixZQUFhLEtBQWEsRUFBRSxJQUFZLEVBQUUsUUFBa0I7UUF2QjVELDREQUE0RDtRQUM1RCxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBUWxCOzRCQUNvQjtRQUNwQixVQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFOUI7d0NBQ2dDO1FBQ2hDLGNBQVMsR0FBaUIsSUFBSSxDQUFDO1FBRS9CLHVIQUF1SDtRQUN2SCxtQkFBYyxHQUFrQixJQUFJLENBQUM7UUFFckMsd0RBQXdEO1FBQ3hELGNBQVMsR0FBYyxTQUFTLENBQUMsTUFBTSxDQUFDO1FBR3ZDLElBQUksS0FBSyxHQUFHLENBQUM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLFFBQVE7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDMUIsQ0FBQztDQUNEO0FBRUQseUVBQXlFO0FBQ3pFLE1BQU0sQ0FBTixJQUFZLFNBQWdEO0FBQTVELFdBQVksU0FBUztJQUFHLDZDQUFNLENBQUE7SUFBRSxpREFBUSxDQUFBO0lBQUUsaURBQVEsQ0FBQTtJQUFFLDZDQUFNLENBQUE7QUFBQyxDQUFDLEVBQWhELFNBQVMsS0FBVCxTQUFTLFFBQXVDIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, AttachmentTimeline, RGBATimeline, RGBTimeline, RGBA2Timeline, RGB2Timeline, AlphaTimeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline, SequenceTimeline } from \"./Animation\";\nimport { Sequence, SequenceModeValues } from \"./attachments/Sequence\";\nimport { BoneData } from \"./BoneData\";\nimport { Event } from \"./Event\";\nimport { EventData } from \"./EventData\";\nimport { IkConstraintData } from \"./IkConstraintData\";\nimport { PathConstraintData, PositionMode, SpacingMode } from \"./PathConstraintData\";\nimport { SkeletonData } from \"./SkeletonData\";\nimport { Skin } from \"./Skin\";\nimport { SlotData } from \"./SlotData\";\nimport { TransformConstraintData } from \"./TransformConstraintData\";\nimport { Color, Utils } from \"./Utils\";\n/** Loads skeleton data in the Spine binary format.\n *\n * See [Spine binary format](http://esotericsoftware.com/spine-binary-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonBinary {\n    constructor(attachmentLoader) {\n        /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n         * runtime than were used in Spine.\n         *\n         * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n        this.scale = 1;\n        this.linkedMeshes = new Array();\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(binary) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        skeletonData.name = \"\"; // BOZO\n        let input = new BinaryInput(binary);\n        let lowHash = input.readInt32();\n        let highHash = input.readInt32();\n        skeletonData.hash = highHash == 0 && lowHash == 0 ? null : highHash.toString(16) + lowHash.toString(16);\n        skeletonData.version = input.readString();\n        skeletonData.x = input.readFloat();\n        skeletonData.y = input.readFloat();\n        skeletonData.width = input.readFloat();\n        skeletonData.height = input.readFloat();\n        let nonessential = input.readBoolean();\n        if (nonessential) {\n            skeletonData.fps = input.readFloat();\n            skeletonData.imagesPath = input.readString();\n            skeletonData.audioPath = input.readString();\n        }\n        let n = 0;\n        // Strings.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let str = input.readString();\n            if (!str)\n                throw new Error(\"String in string table must not be null.\");\n            input.strings.push(str);\n        }\n        // Bones.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Bone name must not be null.\");\n            let parent = i == 0 ? null : skeletonData.bones[input.readInt(true)];\n            let data = new BoneData(i, name, parent);\n            data.rotation = input.readFloat();\n            data.x = input.readFloat() * scale;\n            data.y = input.readFloat() * scale;\n            data.scaleX = input.readFloat();\n            data.scaleY = input.readFloat();\n            data.shearX = input.readFloat();\n            data.shearY = input.readFloat();\n            data.length = input.readFloat() * scale;\n            data.transformMode = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            if (nonessential)\n                Color.rgba8888ToColor(data.color, input.readInt32());\n            skeletonData.bones.push(data);\n        }\n        // Slots.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let slotName = input.readString();\n            if (!slotName)\n                throw new Error(\"Slot name must not be null.\");\n            let boneData = skeletonData.bones[input.readInt(true)];\n            let data = new SlotData(i, slotName, boneData);\n            Color.rgba8888ToColor(data.color, input.readInt32());\n            let darkColor = input.readInt32();\n            if (darkColor != -1)\n                Color.rgb888ToColor(data.darkColor = new Color(), darkColor);\n            data.attachmentName = input.readStringRef();\n            data.blendMode = input.readInt(true);\n            skeletonData.slots.push(data);\n        }\n        // IK constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"IK constraint data name must not be null.\");\n            let data = new IkConstraintData(name);\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            data.mix = input.readFloat();\n            data.softness = input.readFloat() * scale;\n            data.bendDirection = input.readByte();\n            data.compress = input.readBoolean();\n            data.stretch = input.readBoolean();\n            data.uniform = input.readBoolean();\n            skeletonData.ikConstraints.push(data);\n        }\n        // Transform constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Transform constraint data name must not be null.\");\n            let data = new TransformConstraintData(name);\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            data.local = input.readBoolean();\n            data.relative = input.readBoolean();\n            data.offsetRotation = input.readFloat();\n            data.offsetX = input.readFloat() * scale;\n            data.offsetY = input.readFloat() * scale;\n            data.offsetScaleX = input.readFloat();\n            data.offsetScaleY = input.readFloat();\n            data.offsetShearY = input.readFloat();\n            data.mixRotate = input.readFloat();\n            data.mixX = input.readFloat();\n            data.mixY = input.readFloat();\n            data.mixScaleX = input.readFloat();\n            data.mixScaleY = input.readFloat();\n            data.mixShearY = input.readFloat();\n            skeletonData.transformConstraints.push(data);\n        }\n        // Path constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Path constraint data name must not be null.\");\n            let data = new PathConstraintData(name);\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.slots[input.readInt(true)];\n            data.positionMode = input.readInt(true);\n            data.spacingMode = input.readInt(true);\n            data.rotateMode = input.readInt(true);\n            data.offsetRotation = input.readFloat();\n            data.position = input.readFloat();\n            if (data.positionMode == PositionMode.Fixed)\n                data.position *= scale;\n            data.spacing = input.readFloat();\n            if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                data.spacing *= scale;\n            data.mixRotate = input.readFloat();\n            data.mixX = input.readFloat();\n            data.mixY = input.readFloat();\n            skeletonData.pathConstraints.push(data);\n        }\n        // Default skin.\n        let defaultSkin = this.readSkin(input, skeletonData, true, nonessential);\n        if (defaultSkin) {\n            skeletonData.defaultSkin = defaultSkin;\n            skeletonData.skins.push(defaultSkin);\n        }\n        // Skins.\n        {\n            let i = skeletonData.skins.length;\n            Utils.setArraySize(skeletonData.skins, n = i + input.readInt(true));\n            for (; i < n; i++) {\n                let skin = this.readSkin(input, skeletonData, false, nonessential);\n                if (!skin)\n                    throw new Error(\"readSkin() should not have returned null.\");\n                skeletonData.skins[i] = skin;\n            }\n        }\n        // Linked meshes.\n        n = this.linkedMeshes.length;\n        for (let i = 0; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n            if (!skin)\n                throw new Error(\"Not skin found for linked mesh.\");\n            if (!linkedMesh.parent)\n                throw new Error(\"Linked mesh parent must not be null\");\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            if (!parent)\n                throw new Error(`Parent mesh not found: ${linkedMesh.parent}`);\n            linkedMesh.mesh.timelineAttachment = linkedMesh.inheritTimeline ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            if (linkedMesh.mesh.region != null)\n                linkedMesh.mesh.updateRegion();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let eventName = input.readStringRef();\n            if (!eventName)\n                throw new Error;\n            let data = new EventData(eventName);\n            data.intValue = input.readInt(false);\n            data.floatValue = input.readFloat();\n            data.stringValue = input.readString();\n            data.audioPath = input.readString();\n            if (data.audioPath) {\n                data.volume = input.readFloat();\n                data.balance = input.readFloat();\n            }\n            skeletonData.events.push(data);\n        }\n        // Animations.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let animationName = input.readString();\n            if (!animationName)\n                throw new Error(\"Animatio name must not be null.\");\n            skeletonData.animations.push(this.readAnimation(input, animationName, skeletonData));\n        }\n        return skeletonData;\n    }\n    readSkin(input, skeletonData, defaultSkin, nonessential) {\n        let skin = null;\n        let slotCount = 0;\n        if (defaultSkin) {\n            slotCount = input.readInt(true);\n            if (slotCount == 0)\n                return null;\n            skin = new Skin(\"default\");\n        }\n        else {\n            let skinName = input.readStringRef();\n            if (!skinName)\n                throw new Error(\"Skin name must not be null.\");\n            skin = new Skin(skinName);\n            skin.bones.length = input.readInt(true);\n            for (let i = 0, n = skin.bones.length; i < n; i++)\n                skin.bones[i] = skeletonData.bones[input.readInt(true)];\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.ikConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.transformConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.pathConstraints[input.readInt(true)]);\n            slotCount = input.readInt(true);\n        }\n        for (let i = 0; i < slotCount; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let name = input.readStringRef();\n                if (!name)\n                    throw new Error(\"Attachment name must not be null\");\n                let attachment = this.readAttachment(input, skeletonData, skin, slotIndex, name, nonessential);\n                if (attachment)\n                    skin.setAttachment(slotIndex, name, attachment);\n            }\n        }\n        return skin;\n    }\n    readAttachment(input, skeletonData, skin, slotIndex, attachmentName, nonessential) {\n        let scale = this.scale;\n        let name = input.readStringRef();\n        if (!name)\n            name = attachmentName;\n        switch (input.readByte()) {\n            case AttachmentType.Region: {\n                let path = input.readStringRef();\n                let rotation = input.readFloat();\n                let x = input.readFloat();\n                let y = input.readFloat();\n                let scaleX = input.readFloat();\n                let scaleY = input.readFloat();\n                let width = input.readFloat();\n                let height = input.readFloat();\n                let color = input.readInt32();\n                let sequence = this.readSequence(input);\n                if (!path)\n                    path = name;\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path, sequence);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = x * scale;\n                region.y = y * scale;\n                region.scaleX = scaleX;\n                region.scaleY = scaleY;\n                region.rotation = rotation;\n                region.width = width * scale;\n                region.height = height * scale;\n                Color.rgba8888ToColor(region.color, color);\n                region.sequence = sequence;\n                if (sequence == null)\n                    region.updateRegion();\n                return region;\n            }\n            case AttachmentType.BoundingBox: {\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let color = nonessential ? input.readInt32() : 0;\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                box.worldVerticesLength = vertexCount << 1;\n                box.vertices = vertices.vertices;\n                box.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(box.color, color);\n                return box;\n            }\n            case AttachmentType.Mesh: {\n                let path = input.readStringRef();\n                let color = input.readInt32();\n                let vertexCount = input.readInt(true);\n                let uvs = this.readFloatArray(input, vertexCount << 1, 1);\n                let triangles = this.readShortArray(input);\n                let vertices = this.readVertices(input, vertexCount);\n                let hullLength = input.readInt(true);\n                let sequence = this.readSequence(input);\n                let edges = [];\n                let width = 0, height = 0;\n                if (nonessential) {\n                    edges = this.readShortArray(input);\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                if (!path)\n                    path = name;\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                mesh.bones = vertices.bones;\n                mesh.vertices = vertices.vertices;\n                mesh.worldVerticesLength = vertexCount << 1;\n                mesh.triangles = triangles;\n                mesh.regionUVs = uvs;\n                if (sequence == null)\n                    mesh.updateRegion();\n                mesh.hullLength = hullLength << 1;\n                mesh.sequence = sequence;\n                if (nonessential) {\n                    mesh.edges = edges;\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                return mesh;\n            }\n            case AttachmentType.LinkedMesh: {\n                let path = input.readStringRef();\n                let color = input.readInt32();\n                let skinName = input.readStringRef();\n                let parent = input.readStringRef();\n                let inheritTimelines = input.readBoolean();\n                let sequence = this.readSequence(input);\n                let width = 0, height = 0;\n                if (nonessential) {\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                if (!path)\n                    path = name;\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                mesh.sequence = sequence;\n                if (nonessential) {\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                this.linkedMeshes.push(new LinkedMesh(mesh, skinName, slotIndex, parent, inheritTimelines));\n                return mesh;\n            }\n            case AttachmentType.Path: {\n                let closed = input.readBoolean();\n                let constantSpeed = input.readBoolean();\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let lengths = Utils.newArray(vertexCount / 3, 0);\n                for (let i = 0, n = lengths.length; i < n; i++)\n                    lengths[i] = input.readFloat() * scale;\n                let color = nonessential ? input.readInt32() : 0;\n                let path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = closed;\n                path.constantSpeed = constantSpeed;\n                path.worldVerticesLength = vertexCount << 1;\n                path.vertices = vertices.vertices;\n                path.bones = vertices.bones;\n                path.lengths = lengths;\n                if (nonessential)\n                    Color.rgba8888ToColor(path.color, color);\n                return path;\n            }\n            case AttachmentType.Point: {\n                let rotation = input.readFloat();\n                let x = input.readFloat();\n                let y = input.readFloat();\n                let color = nonessential ? input.readInt32() : 0;\n                let point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = x * scale;\n                point.y = y * scale;\n                point.rotation = rotation;\n                if (nonessential)\n                    Color.rgba8888ToColor(point.color, color);\n                return point;\n            }\n            case AttachmentType.Clipping: {\n                let endSlotIndex = input.readInt(true);\n                let vertexCount = input.readInt(true);\n                let vertices = this.readVertices(input, vertexCount);\n                let color = nonessential ? input.readInt32() : 0;\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                clip.endSlot = skeletonData.slots[endSlotIndex];\n                clip.worldVerticesLength = vertexCount << 1;\n                clip.vertices = vertices.vertices;\n                clip.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(clip.color, color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readSequence(input) {\n        if (!input.readBoolean())\n            return null;\n        let sequence = new Sequence(input.readInt(true));\n        sequence.start = input.readInt(true);\n        sequence.digits = input.readInt(true);\n        sequence.setupIndex = input.readInt(true);\n        return sequence;\n    }\n    readVertices(input, vertexCount) {\n        let scale = this.scale;\n        let verticesLength = vertexCount << 1;\n        let vertices = new Vertices();\n        if (!input.readBoolean()) {\n            vertices.vertices = this.readFloatArray(input, verticesLength, scale);\n            return vertices;\n        }\n        let weights = new Array();\n        let bonesArray = new Array();\n        for (let i = 0; i < vertexCount; i++) {\n            let boneCount = input.readInt(true);\n            bonesArray.push(boneCount);\n            for (let ii = 0; ii < boneCount; ii++) {\n                bonesArray.push(input.readInt(true));\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat());\n            }\n        }\n        vertices.vertices = Utils.toFloatArray(weights);\n        vertices.bones = bonesArray;\n        return vertices;\n    }\n    readFloatArray(input, n, scale) {\n        let array = new Array(n);\n        if (scale == 1) {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat();\n        }\n        else {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat() * scale;\n        }\n        return array;\n    }\n    readShortArray(input) {\n        let n = input.readInt(true);\n        let array = new Array(n);\n        for (let i = 0; i < n; i++)\n            array[i] = input.readShort();\n        return array;\n    }\n    readAnimation(input, name, skeletonData) {\n        input.readInt(true); // Number of timelines.\n        let timelines = new Array();\n        let scale = this.scale;\n        let tempColor1 = new Color();\n        let tempColor2 = new Color();\n        // Slot timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let timelineType = input.readByte();\n                let frameCount = input.readInt(true);\n                let frameLast = frameCount - 1;\n                switch (timelineType) {\n                    case SLOT_ATTACHMENT: {\n                        let timeline = new AttachmentTimeline(frameCount, slotIndex);\n                        for (let frame = 0; frame < frameCount; frame++)\n                            timeline.setFrame(frame, input.readFloat(), input.readStringRef());\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBATimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            let a2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBTimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBA2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let na = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, na, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 6, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            a = na;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGB2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_ALPHA: {\n                        let timeline = new AlphaTimeline(frameCount, input.readInt(true), slotIndex);\n                        let time = input.readFloat(), a = input.readUnsignedByte() / 255;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let a2 = input.readUnsignedByte() / 255;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let boneIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let type = input.readByte(), frameCount = input.readInt(true), bezierCount = input.readInt(true);\n                switch (type) {\n                    case BONE_ROTATE:\n                        timelines.push(readTimeline1(input, new RotateTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_TRANSLATE:\n                        timelines.push(readTimeline2(input, new TranslateTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEX:\n                        timelines.push(readTimeline1(input, new TranslateXTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEY:\n                        timelines.push(readTimeline1(input, new TranslateYTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_SCALE:\n                        timelines.push(readTimeline2(input, new ScaleTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEX:\n                        timelines.push(readTimeline1(input, new ScaleXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEY:\n                        timelines.push(readTimeline1(input, new ScaleYTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEAR:\n                        timelines.push(readTimeline2(input, new ShearTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARX:\n                        timelines.push(readTimeline1(input, new ShearXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARY:\n                        timelines.push(readTimeline1(input, new ShearYTimeline(frameCount, bezierCount, boneIndex), 1));\n                }\n            }\n        }\n        // IK constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new IkConstraintTimeline(frameCount, input.readInt(true), index);\n            let time = input.readFloat(), mix = input.readFloat(), softness = input.readFloat() * scale;\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mix, softness, input.readByte(), input.readBoolean(), input.readBoolean());\n                if (frame == frameLast)\n                    break;\n                let time2 = input.readFloat(), mix2 = input.readFloat(), softness2 = input.readFloat() * scale;\n                switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                        timeline.setStepped(frame);\n                        break;\n                    case CURVE_BEZIER:\n                        setBezier(input, timeline, bezier++, frame, 0, time, time2, mix, mix2, 1);\n                        setBezier(input, timeline, bezier++, frame, 1, time, time2, softness, softness2, scale);\n                }\n                time = time2;\n                mix = mix2;\n                softness = softness2;\n            }\n            timelines.push(timeline);\n        }\n        // Transform constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new TransformConstraintTimeline(frameCount, input.readInt(true), index);\n            let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat(), mixScaleX = input.readFloat(), mixScaleY = input.readFloat(), mixShearY = input.readFloat();\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                if (frame == frameLast)\n                    break;\n                let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat(), mixScaleX2 = input.readFloat(), mixScaleY2 = input.readFloat(), mixShearY2 = input.readFloat();\n                switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                        timeline.setStepped(frame);\n                        break;\n                    case CURVE_BEZIER:\n                        setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                }\n                time = time2;\n                mixRotate = mixRotate2;\n                mixX = mixX2;\n                mixY = mixY2;\n                mixScaleX = mixScaleX2;\n                mixScaleY = mixScaleY2;\n                mixShearY = mixShearY2;\n            }\n            timelines.push(timeline);\n        }\n        // Path constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true);\n            let data = skeletonData.pathConstraints[index];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                switch (input.readByte()) {\n                    case PATH_POSITION:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintPositionTimeline(input.readInt(true), input.readInt(true), index), data.positionMode == PositionMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_SPACING:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintSpacingTimeline(input.readInt(true), input.readInt(true), index), data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_MIX:\n                        let timeline = new PathConstraintMixTimeline(input.readInt(true), input.readInt(true), index);\n                        let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat();\n                        for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat();\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                        }\n                        timelines.push(timeline);\n                }\n            }\n        }\n        // Deform timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let skin = skeletonData.skins[input.readInt(true)];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let slotIndex = input.readInt(true);\n                for (let iii = 0, nnn = input.readInt(true); iii < nnn; iii++) {\n                    let attachmentName = input.readStringRef();\n                    if (!attachmentName)\n                        throw new Error(\"attachmentName must not be null.\");\n                    let attachment = skin.getAttachment(slotIndex, attachmentName);\n                    let timelineType = input.readByte();\n                    let frameCount = input.readInt(true);\n                    let frameLast = frameCount - 1;\n                    switch (timelineType) {\n                        case ATTACHMENT_DEFORM: {\n                            let vertexAttachment = attachment;\n                            let weighted = vertexAttachment.bones;\n                            let vertices = vertexAttachment.vertices;\n                            let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                            let bezierCount = input.readInt(true);\n                            let timeline = new DeformTimeline(frameCount, bezierCount, slotIndex, vertexAttachment);\n                            let time = input.readFloat();\n                            for (let frame = 0, bezier = 0;; frame++) {\n                                let deform;\n                                let end = input.readInt(true);\n                                if (end == 0)\n                                    deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                                else {\n                                    deform = Utils.newFloatArray(deformLength);\n                                    let start = input.readInt(true);\n                                    end += start;\n                                    if (scale == 1) {\n                                        for (let v = start; v < end; v++)\n                                            deform[v] = input.readFloat();\n                                    }\n                                    else {\n                                        for (let v = start; v < end; v++)\n                                            deform[v] = input.readFloat() * scale;\n                                    }\n                                    if (!weighted) {\n                                        for (let v = 0, vn = deform.length; v < vn; v++)\n                                            deform[v] += vertices[v];\n                                    }\n                                }\n                                timeline.setFrame(frame, time, deform);\n                                if (frame == frameLast)\n                                    break;\n                                let time2 = input.readFloat();\n                                switch (input.readByte()) {\n                                    case CURVE_STEPPED:\n                                        timeline.setStepped(frame);\n                                        break;\n                                    case CURVE_BEZIER:\n                                        setBezier(input, timeline, bezier++, frame, 0, time, time2, 0, 1, 1);\n                                }\n                                time = time2;\n                            }\n                            timelines.push(timeline);\n                            break;\n                        }\n                        case ATTACHMENT_SEQUENCE: {\n                            let timeline = new SequenceTimeline(frameCount, slotIndex, attachment);\n                            for (let frame = 0; frame < frameCount; frame++) {\n                                let time = input.readFloat();\n                                let modeAndIndex = input.readInt32();\n                                timeline.setFrame(frame, time, SequenceModeValues[modeAndIndex & 0xf], modeAndIndex >> 4, input.readFloat());\n                            }\n                            timelines.push(timeline);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        // Draw order timeline.\n        let drawOrderCount = input.readInt(true);\n        if (drawOrderCount > 0) {\n            let timeline = new DrawOrderTimeline(drawOrderCount);\n            let slotCount = skeletonData.slots.length;\n            for (let i = 0; i < drawOrderCount; i++) {\n                let time = input.readFloat();\n                let offsetCount = input.readInt(true);\n                let drawOrder = Utils.newArray(slotCount, 0);\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    drawOrder[ii] = -1;\n                let unchanged = Utils.newArray(slotCount - offsetCount, 0);\n                let originalIndex = 0, unchangedIndex = 0;\n                for (let ii = 0; ii < offsetCount; ii++) {\n                    let slotIndex = input.readInt(true);\n                    // Collect unchanged items.\n                    while (originalIndex != slotIndex)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Set changed items.\n                    drawOrder[originalIndex + input.readInt(true)] = originalIndex++;\n                }\n                // Collect remaining unchanged items.\n                while (originalIndex < slotCount)\n                    unchanged[unchangedIndex++] = originalIndex++;\n                // Fill in unchanged items.\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    if (drawOrder[ii] == -1)\n                        drawOrder[ii] = unchanged[--unchangedIndex];\n                timeline.setFrame(i, time, drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timeline.\n        let eventCount = input.readInt(true);\n        if (eventCount > 0) {\n            let timeline = new EventTimeline(eventCount);\n            for (let i = 0; i < eventCount; i++) {\n                let time = input.readFloat();\n                let eventData = skeletonData.events[input.readInt(true)];\n                let event = new Event(time, eventData);\n                event.intValue = input.readInt(false);\n                event.floatValue = input.readFloat();\n                event.stringValue = input.readBoolean() ? input.readString() : eventData.stringValue;\n                if (event.data.audioPath) {\n                    event.volume = input.readFloat();\n                    event.balance = input.readFloat();\n                }\n                timeline.setFrame(i, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        return new Animation(name, timelines, duration);\n    }\n}\nexport class BinaryInput {\n    constructor(data, strings = new Array(), index = 0, buffer = new DataView(data.buffer)) {\n        this.strings = strings;\n        this.index = index;\n        this.buffer = buffer;\n    }\n    readByte() {\n        return this.buffer.getInt8(this.index++);\n    }\n    readUnsignedByte() {\n        return this.buffer.getUint8(this.index++);\n    }\n    readShort() {\n        let value = this.buffer.getInt16(this.index);\n        this.index += 2;\n        return value;\n    }\n    readInt32() {\n        let value = this.buffer.getInt32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readInt(optimizePositive) {\n        let b = this.readByte();\n        let result = b & 0x7F;\n        if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7F) << 7;\n            if ((b & 0x80) != 0) {\n                b = this.readByte();\n                result |= (b & 0x7F) << 14;\n                if ((b & 0x80) != 0) {\n                    b = this.readByte();\n                    result |= (b & 0x7F) << 21;\n                    if ((b & 0x80) != 0) {\n                        b = this.readByte();\n                        result |= (b & 0x7F) << 28;\n                    }\n                }\n            }\n        }\n        return optimizePositive ? result : ((result >>> 1) ^ -(result & 1));\n    }\n    readStringRef() {\n        let index = this.readInt(true);\n        return index == 0 ? null : this.strings[index - 1];\n    }\n    readString() {\n        let byteCount = this.readInt(true);\n        switch (byteCount) {\n            case 0:\n                return null;\n            case 1:\n                return \"\";\n        }\n        byteCount--;\n        let chars = \"\";\n        let charCount = 0;\n        for (let i = 0; i < byteCount;) {\n            let b = this.readUnsignedByte();\n            switch (b >> 4) {\n                case 12:\n                case 13:\n                    chars += String.fromCharCode(((b & 0x1F) << 6 | this.readByte() & 0x3F));\n                    i += 2;\n                    break;\n                case 14:\n                    chars += String.fromCharCode(((b & 0x0F) << 12 | (this.readByte() & 0x3F) << 6 | this.readByte() & 0x3F));\n                    i += 3;\n                    break;\n                default:\n                    chars += String.fromCharCode(b);\n                    i++;\n            }\n        }\n        return chars;\n    }\n    readFloat() {\n        let value = this.buffer.getFloat32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readBoolean() {\n        return this.readByte() != 0;\n    }\n}\nclass LinkedMesh {\n    constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skin = skin;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritTimeline = inheritDeform;\n    }\n}\nclass Vertices {\n    constructor(bones = null, vertices = null) {\n        this.bones = bones;\n        this.vertices = vertices;\n    }\n}\nvar AttachmentType;\n(function (AttachmentType) {\n    AttachmentType[AttachmentType[\"Region\"] = 0] = \"Region\";\n    AttachmentType[AttachmentType[\"BoundingBox\"] = 1] = \"BoundingBox\";\n    AttachmentType[AttachmentType[\"Mesh\"] = 2] = \"Mesh\";\n    AttachmentType[AttachmentType[\"LinkedMesh\"] = 3] = \"LinkedMesh\";\n    AttachmentType[AttachmentType[\"Path\"] = 4] = \"Path\";\n    AttachmentType[AttachmentType[\"Point\"] = 5] = \"Point\";\n    AttachmentType[AttachmentType[\"Clipping\"] = 6] = \"Clipping\";\n})(AttachmentType || (AttachmentType = {}));\nfunction readTimeline1(input, timeline, scale) {\n    let time = input.readFloat(), value = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), value2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value, value2, scale);\n        }\n        time = time2;\n        value = value2;\n    }\n    return timeline;\n}\nfunction readTimeline2(input, timeline, scale) {\n    let time = input.readFloat(), value1 = input.readFloat() * scale, value2 = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), nvalue1 = input.readFloat() * scale, nvalue2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value1, nvalue1, scale);\n                setBezier(input, timeline, bezier++, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n    }\n    return timeline;\n}\nfunction setBezier(input, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    timeline.setBezier(bezier, frame, value, time1, value1, input.readFloat(), input.readFloat() * scale, input.readFloat(), input.readFloat() * scale, time2, value2);\n}\nconst BONE_ROTATE = 0;\nconst BONE_TRANSLATE = 1;\nconst BONE_TRANSLATEX = 2;\nconst BONE_TRANSLATEY = 3;\nconst BONE_SCALE = 4;\nconst BONE_SCALEX = 5;\nconst BONE_SCALEY = 6;\nconst BONE_SHEAR = 7;\nconst BONE_SHEARX = 8;\nconst BONE_SHEARY = 9;\nconst SLOT_ATTACHMENT = 0;\nconst SLOT_RGBA = 1;\nconst SLOT_RGB = 2;\nconst SLOT_RGBA2 = 3;\nconst SLOT_RGB2 = 4;\nconst SLOT_ALPHA = 5;\nconst ATTACHMENT_DEFORM = 0;\nconst ATTACHMENT_SEQUENCE = 1;\nconst PATH_POSITION = 0;\nconst PATH_SPACING = 1;\nconst PATH_MIX = 2;\nconst CURVE_LINEAR = 0;\nconst CURVE_STEPPED = 1;\nconst CURVE_BEZIER = 2;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureFilter, TextureWrap, TextureRegion } from \"./Texture\";\nimport { Utils } from \"./Utils\";\nexport class TextureAtlas {\n    constructor(atlasText) {\n        this.pages = new Array();\n        this.regions = new Array();\n        let reader = new TextureAtlasReader(atlasText);\n        let entry = new Array(4);\n        let pageFields = {};\n        pageFields[\"size\"] = (page) => {\n            page.width = parseInt(entry[1]);\n            page.height = parseInt(entry[2]);\n        };\n        pageFields[\"format\"] = () => {\n            // page.format = Format[tuple[0]]; we don't need format in WebGL\n        };\n        pageFields[\"filter\"] = (page) => {\n            page.minFilter = Utils.enumValue(TextureFilter, entry[1]);\n            page.magFilter = Utils.enumValue(TextureFilter, entry[2]);\n        };\n        pageFields[\"repeat\"] = (page) => {\n            if (entry[1].indexOf('x') != -1)\n                page.uWrap = TextureWrap.Repeat;\n            if (entry[1].indexOf('y') != -1)\n                page.vWrap = TextureWrap.Repeat;\n        };\n        pageFields[\"pma\"] = (page) => {\n            page.pma = entry[1] == \"true\";\n        };\n        var regionFields = {};\n        regionFields[\"xy\"] = (region) => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n        };\n        regionFields[\"size\"] = (region) => {\n            region.width = parseInt(entry[1]);\n            region.height = parseInt(entry[2]);\n        };\n        regionFields[\"bounds\"] = (region) => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n            region.width = parseInt(entry[3]);\n            region.height = parseInt(entry[4]);\n        };\n        regionFields[\"offset\"] = (region) => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n        };\n        regionFields[\"orig\"] = (region) => {\n            region.originalWidth = parseInt(entry[1]);\n            region.originalHeight = parseInt(entry[2]);\n        };\n        regionFields[\"offsets\"] = (region) => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n            region.originalWidth = parseInt(entry[3]);\n            region.originalHeight = parseInt(entry[4]);\n        };\n        regionFields[\"rotate\"] = (region) => {\n            let value = entry[1];\n            if (value == \"true\")\n                region.degrees = 90;\n            else if (value != \"false\")\n                region.degrees = parseInt(value);\n        };\n        regionFields[\"index\"] = (region) => {\n            region.index = parseInt(entry[1]);\n        };\n        let line = reader.readLine();\n        // Ignore empty lines before first entry.\n        while (line && line.trim().length == 0)\n            line = reader.readLine();\n        // Header entries.\n        while (true) {\n            if (!line || line.trim().length == 0)\n                break;\n            if (reader.readEntry(entry, line) == 0)\n                break; // Silently ignore all header fields.\n            line = reader.readLine();\n        }\n        // Page and region entries.\n        let page = null;\n        let names = null;\n        let values = null;\n        while (true) {\n            if (line === null)\n                break;\n            if (line.trim().length == 0) {\n                page = null;\n                line = reader.readLine();\n            }\n            else if (!page) {\n                page = new TextureAtlasPage(line.trim());\n                while (true) {\n                    if (reader.readEntry(entry, line = reader.readLine()) == 0)\n                        break;\n                    let field = pageFields[entry[0]];\n                    if (field)\n                        field(page);\n                }\n                this.pages.push(page);\n            }\n            else {\n                let region = new TextureAtlasRegion(page, line);\n                while (true) {\n                    let count = reader.readEntry(entry, line = reader.readLine());\n                    if (count == 0)\n                        break;\n                    let field = regionFields[entry[0]];\n                    if (field)\n                        field(region);\n                    else {\n                        if (!names)\n                            names = [];\n                        if (!values)\n                            values = [];\n                        names.push(entry[0]);\n                        let entryValues = [];\n                        for (let i = 0; i < count; i++)\n                            entryValues.push(parseInt(entry[i + 1]));\n                        values.push(entryValues);\n                    }\n                }\n                if (region.originalWidth == 0 && region.originalHeight == 0) {\n                    region.originalWidth = region.width;\n                    region.originalHeight = region.height;\n                }\n                if (names && names.length > 0 && values && values.length > 0) {\n                    region.names = names;\n                    region.values = values;\n                    names = null;\n                    values = null;\n                }\n                region.u = region.x / page.width;\n                region.v = region.y / page.height;\n                if (region.degrees == 90) {\n                    region.u2 = (region.x + region.height) / page.width;\n                    region.v2 = (region.y + region.width) / page.height;\n                }\n                else {\n                    region.u2 = (region.x + region.width) / page.width;\n                    region.v2 = (region.y + region.height) / page.height;\n                }\n                this.regions.push(region);\n            }\n        }\n    }\n    findRegion(name) {\n        for (let i = 0; i < this.regions.length; i++) {\n            if (this.regions[i].name == name) {\n                return this.regions[i];\n            }\n        }\n        return null;\n    }\n    setTextures(assetManager, pathPrefix = \"\") {\n        for (let page of this.pages)\n            page.setTexture(assetManager.get(pathPrefix + page.name));\n    }\n    dispose() {\n        var _a;\n        for (let i = 0; i < this.pages.length; i++) {\n            (_a = this.pages[i].texture) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n    }\n}\nclass TextureAtlasReader {\n    constructor(text) {\n        this.index = 0;\n        this.lines = text.split(/\\r\\n|\\r|\\n/);\n    }\n    readLine() {\n        if (this.index >= this.lines.length)\n            return null;\n        return this.lines[this.index++];\n    }\n    readEntry(entry, line) {\n        if (!line)\n            return 0;\n        line = line.trim();\n        if (line.length == 0)\n            return 0;\n        let colon = line.indexOf(':');\n        if (colon == -1)\n            return 0;\n        entry[0] = line.substr(0, colon).trim();\n        for (let i = 1, lastMatch = colon + 1;; i++) {\n            let comma = line.indexOf(',', lastMatch);\n            if (comma == -1) {\n                entry[i] = line.substr(lastMatch).trim();\n                return i;\n            }\n            entry[i] = line.substr(lastMatch, comma - lastMatch).trim();\n            lastMatch = comma + 1;\n            if (i == 4)\n                return 4;\n        }\n    }\n}\nexport class TextureAtlasPage {\n    constructor(name) {\n        this.minFilter = TextureFilter.Nearest;\n        this.magFilter = TextureFilter.Nearest;\n        this.uWrap = TextureWrap.ClampToEdge;\n        this.vWrap = TextureWrap.ClampToEdge;\n        this.texture = null;\n        this.width = 0;\n        this.height = 0;\n        this.pma = false;\n        this.regions = new Array();\n        this.name = name;\n    }\n    setTexture(texture) {\n        this.texture = texture;\n        texture.setFilters(this.minFilter, this.magFilter);\n        texture.setWraps(this.uWrap, this.vWrap);\n        for (let region of this.regions)\n            region.texture = texture;\n    }\n}\nexport class TextureAtlasRegion extends TextureRegion {\n    constructor(page, name) {\n        super();\n        this.x = 0;\n        this.y = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.originalWidth = 0;\n        this.originalHeight = 0;\n        this.index = 0;\n        this.degrees = 0;\n        this.names = null;\n        this.values = null;\n        this.page = page;\n        this.name = name;\n        page.regions.push(this);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlasRegion } from \"../TextureAtlas\";\nimport { Color, Utils } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment that displays a textured mesh. A mesh has hull vertices and internal vertices within the hull. Holes are not\n * supported. Each vertex has UVs (texture coordinates) and triangles are used to map an image on to the mesh.\n *\n * See [Mesh attachments](http://esotericsoftware.com/spine-meshes) in the Spine User Guide. */\nexport class MeshAttachment extends VertexAttachment {\n    constructor(name, path) {\n        super(name);\n        this.region = null;\n        /** The UV pair for each vertex, normalized within the texture region. */\n        this.regionUVs = [];\n        /** The UV pair for each vertex, normalized within the entire texture.\n         *\n         * See {@link #updateUVs}. */\n        this.uvs = [];\n        /** Triplets of vertex indices which describe the mesh's triangulation. */\n        this.triangles = [];\n        /** The color to tint the mesh. */\n        this.color = new Color(1, 1, 1, 1);\n        /** The width of the mesh's image. Available only when nonessential data was exported. */\n        this.width = 0;\n        /** The height of the mesh's image. Available only when nonessential data was exported. */\n        this.height = 0;\n        /** The number of entries at the beginning of {@link #vertices} that make up the mesh hull. */\n        this.hullLength = 0;\n        /** Vertex index pairs describing edges for controling triangulation. Mesh triangles will never cross edges. Only available if\n         * nonessential data was exported. Triangulation is not performed at runtime. */\n        this.edges = [];\n        this.parentMesh = null;\n        this.sequence = null;\n        this.tempColor = new Color(0, 0, 0, 0);\n        this.path = path;\n    }\n    /** Calculates {@link #uvs} using the {@link #regionUVs} and region. Must be called if the region, the region's properties, or\n     * the {@link #regionUVs} are changed. */\n    updateRegion() {\n        if (!this.region)\n            throw new Error(\"Region not set.\");\n        let regionUVs = this.regionUVs;\n        if (!this.uvs || this.uvs.length != regionUVs.length)\n            this.uvs = Utils.newFloatArray(regionUVs.length);\n        let uvs = this.uvs;\n        let n = this.uvs.length;\n        let u = this.region.u, v = this.region.v, width = 0, height = 0;\n        if (this.region instanceof TextureAtlasRegion) {\n            let region = this.region, page = region.page;\n            let textureWidth = page.width, textureHeight = page.height;\n            switch (region.degrees) {\n                case 90:\n                    u -= (region.originalHeight - region.offsetY - region.height) / textureWidth;\n                    v -= (region.originalWidth - region.offsetX - region.width) / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + regionUVs[i + 1] * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i]) * height;\n                    }\n                    return;\n                case 180:\n                    u -= (region.originalWidth - region.offsetX - region.width) / textureWidth;\n                    v -= region.offsetY / textureHeight;\n                    width = region.originalWidth / textureWidth;\n                    height = region.originalHeight / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i]) * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i + 1]) * height;\n                    }\n                    return;\n                case 270:\n                    u -= region.offsetY / textureWidth;\n                    v -= region.offsetX / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i + 1]) * width;\n                        uvs[i + 1] = v + regionUVs[i] * height;\n                    }\n                    return;\n            }\n            u -= region.offsetX / textureWidth;\n            v -= (region.originalHeight - region.offsetY - region.height) / textureHeight;\n            width = region.originalWidth / textureWidth;\n            height = region.originalHeight / textureHeight;\n        }\n        else if (!this.region) {\n            u = v = 0;\n            width = height = 1;\n        }\n        else {\n            width = this.region.u2 - u;\n            height = this.region.v2 - v;\n        }\n        for (let i = 0; i < n; i += 2) {\n            uvs[i] = u + regionUVs[i] * width;\n            uvs[i + 1] = v + regionUVs[i + 1] * height;\n        }\n    }\n    /** The parent mesh if this is a linked mesh, else null. A linked mesh shares the {@link #bones}, {@link #vertices},\n     * {@link #regionUVs}, {@link #triangles}, {@link #hullLength}, {@link #edges}, {@link #width}, and {@link #height} with the\n     * parent mesh, but may have a different {@link #name} or {@link #path} (and therefore a different texture). */\n    getParentMesh() {\n        return this.parentMesh;\n    }\n    /** @param parentMesh May be null. */\n    setParentMesh(parentMesh) {\n        this.parentMesh = parentMesh;\n        if (parentMesh) {\n            this.bones = parentMesh.bones;\n            this.vertices = parentMesh.vertices;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n            this.regionUVs = parentMesh.regionUVs;\n            this.triangles = parentMesh.triangles;\n            this.hullLength = parentMesh.hullLength;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n        }\n    }\n    copy() {\n        if (this.parentMesh)\n            return this.newLinkedMesh();\n        let copy = new MeshAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.color.setFromColor(this.color);\n        this.copyTo(copy);\n        copy.regionUVs = new Array(this.regionUVs.length);\n        Utils.arrayCopy(this.regionUVs, 0, copy.regionUVs, 0, this.regionUVs.length);\n        copy.uvs = new Array(this.uvs.length);\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, this.uvs.length);\n        copy.triangles = new Array(this.triangles.length);\n        Utils.arrayCopy(this.triangles, 0, copy.triangles, 0, this.triangles.length);\n        copy.hullLength = this.hullLength;\n        copy.sequence = this.sequence != null ? this.sequence.copy() : null;\n        // Nonessential.\n        if (this.edges) {\n            copy.edges = new Array(this.edges.length);\n            Utils.arrayCopy(this.edges, 0, copy.edges, 0, this.edges.length);\n        }\n        copy.width = this.width;\n        copy.height = this.height;\n        return copy;\n    }\n    computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n        if (this.sequence != null)\n            this.sequence.apply(slot, this);\n        super.computeWorldVertices(slot, start, count, worldVertices, offset, stride);\n    }\n    /** Returns a new mesh with the {@link #parentMesh} set to this mesh's parent mesh, if any, else to this mesh. **/\n    newLinkedMesh() {\n        let copy = new MeshAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.color.setFromColor(this.color);\n        copy.timelineAttachment = this.timelineAttachment;\n        copy.setParentMesh(this.parentMesh ? this.parentMesh : this);\n        if (copy.region != null)\n            copy.updateRegion();\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Utils } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment whose vertices make up a composite Bezier curve.\n *\n * See {@link PathConstraint} and [Paths](http://esotericsoftware.com/spine-paths) in the Spine User Guide. */\nexport class PathAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        /** The lengths along the path in the setup pose from the start of the path to the end of each Bezier curve. */\n        this.lengths = [];\n        /** If true, the start and end knots are connected. */\n        this.closed = false;\n        /** If true, additional calculations are performed to make calculating positions along the path more accurate. If false, fewer\n         * calculations are performed but calculating positions along the path is less accurate. */\n        this.constantSpeed = false;\n        /** The color of the path as it was in Spine. Available only when nonessential data was exported. Paths are not usually\n         * rendered at runtime. */\n        this.color = new Color(1, 1, 1, 1);\n    }\n    copy() {\n        let copy = new PathAttachment(this.name);\n        this.copyTo(copy);\n        copy.lengths = new Array(this.lengths.length);\n        Utils.arrayCopy(this.lengths, 0, copy.lengths, 0, this.lengths.length);\n        copy.closed = closed;\n        copy.constantSpeed = this.constantSpeed;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aEF0dGFjaG1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvUGF0aEF0dGFjaG1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBYyxNQUFNLGNBQWMsQ0FBQztBQUU1RDs7OEdBRThHO0FBQzlHLE1BQU0sT0FBTyxjQUFlLFNBQVEsZ0JBQWdCO0lBZ0JuRCxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBZmIsK0dBQStHO1FBQy9HLFlBQU8sR0FBa0IsRUFBRSxDQUFDO1FBRTVCLHNEQUFzRDtRQUN0RCxXQUFNLEdBQUcsS0FBSyxDQUFDO1FBRWY7bUdBQzJGO1FBQzNGLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBRXRCO2tDQUMwQjtRQUMxQixVQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFJOUIsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxDQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils } from \"../Utils\";\nimport { VertexAttachment } from \"./Attachment\";\n/** An attachment which is a single point and a rotation. This can be used to spawn projectiles, particles, etc. A bone can be\n * used in similar ways, but a PointAttachment is slightly less expensive to compute and can be hidden, shown, and placed in a\n * skin.\n *\n * See [Point Attachments](http://esotericsoftware.com/spine-point-attachments) in the Spine User Guide. */\nexport class PointAttachment extends VertexAttachment {\n    constructor(name) {\n        super(name);\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        /** The color of the point attachment as it was in Spine. Available only when nonessential data was exported. Point attachments\n         * are not usually rendered at runtime. */\n        this.color = new Color(0.38, 0.94, 0, 1);\n    }\n    computeWorldPosition(bone, point) {\n        point.x = this.x * bone.a + this.y * bone.b + bone.worldX;\n        point.y = this.x * bone.c + this.y * bone.d + bone.worldY;\n        return point;\n    }\n    computeWorldRotation(bone) {\n        let cos = MathUtils.cosDeg(this.rotation), sin = MathUtils.sinDeg(this.rotation);\n        let x = cos * bone.a + sin * bone.b;\n        let y = cos * bone.c + sin * bone.d;\n        return Math.atan2(y, x) * MathUtils.radDeg;\n    }\n    copy() {\n        let copy = new PointAttachment(this.name);\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.rotation = this.rotation;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9pbnRBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL1BvaW50QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBVyxTQUFTLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDckQsT0FBTyxFQUFFLGdCQUFnQixFQUFjLE1BQU0sY0FBYyxDQUFDO0FBRTVEOzs7OzJHQUkyRztBQUMzRyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxnQkFBZ0I7SUFTcEQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQVRiLE1BQUMsR0FBVyxDQUFDLENBQUM7UUFDZCxNQUFDLEdBQVcsQ0FBQyxDQUFDO1FBQ2QsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUVyQjtrREFDMEM7UUFDMUMsVUFBSyxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBSXBDLENBQUM7SUFFRCxvQkFBb0IsQ0FBRSxJQUFVLEVBQUUsS0FBYztRQUMvQyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxRCxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUMxRCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFRCxvQkFBb0IsQ0FBRSxJQUFVO1FBQy9CLElBQUksR0FBRyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUM7SUFDNUMsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Utils } from \"../Utils\";\nimport { Attachment } from \"./Attachment\";\n/** An attachment that displays a textured quadrilateral.\n *\n * See [Region attachments](http://esotericsoftware.com/spine-regions) in the Spine User Guide. */\nexport class RegionAttachment extends Attachment {\n    constructor(name, path) {\n        super(name);\n        /** The local x translation. */\n        this.x = 0;\n        /** The local y translation. */\n        this.y = 0;\n        /** The local scaleX. */\n        this.scaleX = 1;\n        /** The local scaleY. */\n        this.scaleY = 1;\n        /** The local rotation. */\n        this.rotation = 0;\n        /** The width of the region attachment in Spine. */\n        this.width = 0;\n        /** The height of the region attachment in Spine. */\n        this.height = 0;\n        /** The color to tint the region attachment. */\n        this.color = new Color(1, 1, 1, 1);\n        this.region = null;\n        this.sequence = null;\n        /** For each of the 4 vertices, a pair of <code>x,y</code> values that is the local position of the vertex.\n         *\n         * See {@link #updateOffset()}. */\n        this.offset = Utils.newFloatArray(8);\n        this.uvs = Utils.newFloatArray(8);\n        this.tempColor = new Color(1, 1, 1, 1);\n        this.path = path;\n    }\n    /** Calculates the {@link #offset} using the region settings. Must be called after changing region settings. */\n    updateRegion() {\n        if (!this.region)\n            throw new Error(\"Region not set.\");\n        let region = this.region;\n        let uvs = this.uvs;\n        if (region == null) {\n            uvs[0] = 0;\n            uvs[1] = 0;\n            uvs[2] = 0;\n            uvs[3] = 1;\n            uvs[4] = 1;\n            uvs[5] = 1;\n            uvs[6] = 1;\n            uvs[7] = 0;\n            return;\n        }\n        let regionScaleX = this.width / this.region.originalWidth * this.scaleX;\n        let regionScaleY = this.height / this.region.originalHeight * this.scaleY;\n        let localX = -this.width / 2 * this.scaleX + this.region.offsetX * regionScaleX;\n        let localY = -this.height / 2 * this.scaleY + this.region.offsetY * regionScaleY;\n        let localX2 = localX + this.region.width * regionScaleX;\n        let localY2 = localY + this.region.height * regionScaleY;\n        let radians = this.rotation * Math.PI / 180;\n        let cos = Math.cos(radians);\n        let sin = Math.sin(radians);\n        let x = this.x, y = this.y;\n        let localXCos = localX * cos + x;\n        let localXSin = localX * sin;\n        let localYCos = localY * cos + y;\n        let localYSin = localY * sin;\n        let localX2Cos = localX2 * cos + x;\n        let localX2Sin = localX2 * sin;\n        let localY2Cos = localY2 * cos + y;\n        let localY2Sin = localY2 * sin;\n        let offset = this.offset;\n        offset[0] = localXCos - localYSin;\n        offset[1] = localYCos + localXSin;\n        offset[2] = localXCos - localY2Sin;\n        offset[3] = localY2Cos + localXSin;\n        offset[4] = localX2Cos - localY2Sin;\n        offset[5] = localY2Cos + localX2Sin;\n        offset[6] = localX2Cos - localYSin;\n        offset[7] = localYCos + localX2Sin;\n        if (region.degrees == 90) {\n            uvs[0] = region.u2;\n            uvs[1] = region.v2;\n            uvs[2] = region.u;\n            uvs[3] = region.v2;\n            uvs[4] = region.u;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v;\n        }\n        else {\n            uvs[0] = region.u;\n            uvs[1] = region.v2;\n            uvs[2] = region.u;\n            uvs[3] = region.v;\n            uvs[4] = region.u2;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v2;\n        }\n    }\n    /** Transforms the attachment's four vertices to world coordinates. If the attachment has a {@link #sequence}, the region may\n     * be changed.\n     * <p>\n     * See <a href=\"http://esotericsoftware.com/spine-runtime-skeletons#World-transforms\">World transforms</a> in the Spine\n     * Runtimes Guide.\n     * @param worldVertices The output world vertices. Must have a length >= <code>offset</code> + 8.\n     * @param offset The <code>worldVertices</code> index to begin writing values.\n     * @param stride The number of <code>worldVertices</code> entries between the value pairs written. */\n    computeWorldVertices(slot, worldVertices, offset, stride) {\n        if (this.sequence != null)\n            this.sequence.apply(slot, this);\n        let bone = slot.bone;\n        let vertexOffset = this.offset;\n        let x = bone.worldX, y = bone.worldY;\n        let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n        let offsetX = 0, offsetY = 0;\n        offsetX = vertexOffset[0];\n        offsetY = vertexOffset[1];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // br\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[2];\n        offsetY = vertexOffset[3];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // bl\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[4];\n        offsetY = vertexOffset[5];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ul\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[6];\n        offsetY = vertexOffset[7];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ur\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n    }\n    copy() {\n        let copy = new RegionAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.scaleX = this.scaleX;\n        copy.scaleY = this.scaleY;\n        copy.rotation = this.rotation;\n        copy.width = this.width;\n        copy.height = this.height;\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, 8);\n        Utils.arrayCopy(this.offset, 0, copy.offset, 0, 8);\n        copy.color.setFromColor(this.color);\n        copy.sequence = this.sequence != null ? this.sequence.copy() : null;\n        return copy;\n    }\n}\nRegionAttachment.X1 = 0;\nRegionAttachment.Y1 = 1;\nRegionAttachment.C1R = 2;\nRegionAttachment.C1G = 3;\nRegionAttachment.C1B = 4;\nRegionAttachment.C1A = 5;\nRegionAttachment.U1 = 6;\nRegionAttachment.V1 = 7;\nRegionAttachment.X2 = 8;\nRegionAttachment.Y2 = 9;\nRegionAttachment.C2R = 10;\nRegionAttachment.C2G = 11;\nRegionAttachment.C2B = 12;\nRegionAttachment.C2A = 13;\nRegionAttachment.U2 = 14;\nRegionAttachment.V2 = 15;\nRegionAttachment.X3 = 16;\nRegionAttachment.Y3 = 17;\nRegionAttachment.C3R = 18;\nRegionAttachment.C3G = 19;\nRegionAttachment.C3B = 20;\nRegionAttachment.C3A = 21;\nRegionAttachment.U3 = 22;\nRegionAttachment.V3 = 23;\nRegionAttachment.X4 = 24;\nRegionAttachment.Y4 = 25;\nRegionAttachment.C4R = 26;\nRegionAttachment.C4G = 27;\nRegionAttachment.C4B = 28;\nRegionAttachment.C4A = 29;\nRegionAttachment.U4 = 30;\nRegionAttachment.V4 = 31;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment\";\nimport { ClippingAttachment } from \"./attachments/ClippingAttachment\";\nimport { MeshAttachment } from \"./attachments/MeshAttachment\";\nimport { PathAttachment } from \"./attachments/PathAttachment\";\nimport { PointAttachment } from \"./attachments/PointAttachment\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment\";\n/** An {@link AttachmentLoader} that configures attachments using texture regions from an {@link TextureAtlas}.\n *\n * See [Loading skeleton data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the\n * Spine Runtimes Guide. */\nexport class AtlasAttachmentLoader {\n    constructor(atlas) {\n        this.atlas = atlas;\n    }\n    loadSequence(name, basePath, sequence) {\n        let regions = sequence.regions;\n        for (let i = 0, n = regions.length; i < n; i++) {\n            let path = sequence.getPath(basePath, i);\n            let region = this.atlas.findRegion(path);\n            if (region == null)\n                throw new Error(\"Region not found in atlas: \" + path + \" (sequence: \" + name + \")\");\n            regions[i] = region;\n        }\n    }\n    newRegionAttachment(skin, name, path, sequence) {\n        let attachment = new RegionAttachment(name, path);\n        if (sequence != null) {\n            this.loadSequence(name, path, sequence);\n        }\n        else {\n            let region = this.atlas.findRegion(path);\n            if (!region)\n                throw new Error(\"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\");\n            attachment.region = region;\n        }\n        return attachment;\n    }\n    newMeshAttachment(skin, name, path, sequence) {\n        let attachment = new MeshAttachment(name, path);\n        if (sequence != null) {\n            this.loadSequence(name, path, sequence);\n        }\n        else {\n            let region = this.atlas.findRegion(path);\n            if (!region)\n                throw new Error(\"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\");\n            attachment.region = region;\n        }\n        return attachment;\n    }\n    newBoundingBoxAttachment(skin, name) {\n        return new BoundingBoxAttachment(name);\n    }\n    newPathAttachment(skin, name) {\n        return new PathAttachment(name);\n    }\n    newPointAttachment(skin, name) {\n        return new PointAttachment(name);\n    }\n    newClippingAttachment(skin, name) {\n        return new ClippingAttachment(name);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXRsYXNBdHRhY2htZW50TG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0F0bGFzQXR0YWNobWVudExvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFLbEU7OzsyQkFHMkI7QUFDM0IsTUFBTSxPQUFPLHFCQUFxQjtJQUdqQyxZQUFhLEtBQW1CO1FBQy9CLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxZQUFZLENBQUUsSUFBWSxFQUFFLFFBQWdCLEVBQUUsUUFBa0I7UUFDL0QsSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQztRQUMvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQy9DLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3pDLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3pDLElBQUksTUFBTSxJQUFJLElBQUk7Z0JBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsR0FBRyxJQUFJLEdBQUcsY0FBYyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztZQUN4RyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1NBQ3BCO0lBQ0YsQ0FBQztJQUVELG1CQUFtQixDQUFFLElBQVUsRUFBRSxJQUFZLEVBQUUsSUFBWSxFQUFFLFFBQWtCO1FBQzlFLElBQUksVUFBVSxHQUFHLElBQUksZ0JBQWdCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2xELElBQUksUUFBUSxJQUFJLElBQUksRUFBRTtZQUNyQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDeEM7YUFBTTtZQUNOLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxNQUFNO2dCQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNkJBQTZCLEdBQUcsSUFBSSxHQUFHLHVCQUF1QixHQUFHLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztZQUMxRyxVQUFVLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUMzQjtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFFRCxpQkFBaUIsQ0FBRSxJQUFVLEVBQUUsSUFBWSxFQUFFLElBQVksRUFBRSxRQUFrQjtRQUM1RSxJQUFJLFVBQVUsR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxRQUFRLElBQUksSUFBSSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztTQUN4QzthQUFNO1lBQ04sSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekMsSUFBSSxDQUFDLE1BQU07Z0JBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsR0FBRyxJQUFJLEdBQUcscUJBQXFCLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ3hHLFVBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1NBQzNCO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDbkIsQ0FBQztJQUVELHdCQUF3QixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQ2pELE9BQU8sSUFBSSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsaUJBQWlCLENBQUUsSUFBVSxFQUFFLElBQVk7UUFDMUMsT0FBTyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsa0JBQWtCLENBQUUsSUFBVSxFQUFFLElBQVk7UUFDM0MsT0FBTyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQscUJBQXFCLENBQUUsSUFBVSxFQUFFLElBQVk7UUFDOUMsT0FBTyxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TransformMode } from \"./BoneData\";\nimport { MathUtils } from \"./Utils\";\n/** Stores a bone's current pose.\n *\n * A bone has a local transform which is used to compute its world transform. A bone also has an applied transform, which is a\n * local transform that can be applied to compute the world transform. The local transform and applied transform may differ if a\n * constraint or application code modifies the world transform after it was computed from the local transform. */\nexport class Bone {\n    /** @param parent May be null. */\n    constructor(data, skeleton, parent) {\n        /** The parent bone, or null if this is the root bone. */\n        this.parent = null;\n        /** The immediate children of this bone. */\n        this.children = new Array();\n        /** The local x translation. */\n        this.x = 0;\n        /** The local y translation. */\n        this.y = 0;\n        /** The local rotation in degrees, counter clockwise. */\n        this.rotation = 0;\n        /** The local scaleX. */\n        this.scaleX = 0;\n        /** The local scaleY. */\n        this.scaleY = 0;\n        /** The local shearX. */\n        this.shearX = 0;\n        /** The local shearY. */\n        this.shearY = 0;\n        /** The applied local x translation. */\n        this.ax = 0;\n        /** The applied local y translation. */\n        this.ay = 0;\n        /** The applied local rotation in degrees, counter clockwise. */\n        this.arotation = 0;\n        /** The applied local scaleX. */\n        this.ascaleX = 0;\n        /** The applied local scaleY. */\n        this.ascaleY = 0;\n        /** The applied local shearX. */\n        this.ashearX = 0;\n        /** The applied local shearY. */\n        this.ashearY = 0;\n        /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.a = 0;\n        /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.b = 0;\n        /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.c = 0;\n        /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.d = 0;\n        /** The world X position. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.worldY = 0;\n        /** The world Y position. If changed, {@link #updateAppliedTransform()} should be called. */\n        this.worldX = 0;\n        this.sorted = false;\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.skeleton = skeleton;\n        this.parent = parent;\n        this.setToSetupPose();\n    }\n    /** Returns false when the bone has not been computed because {@link BoneData#skinRequired} is true and the\n      * {@link Skeleton#skin active skin} does not {@link Skin#bones contain} this bone. */\n    isActive() {\n        return this.active;\n    }\n    /** Computes the world transform using the parent bone and this bone's local applied transform. */\n    update() {\n        this.updateWorldTransformWith(this.ax, this.ay, this.arotation, this.ascaleX, this.ascaleY, this.ashearX, this.ashearY);\n    }\n    /** Computes the world transform using the parent bone and this bone's local transform.\n     *\n     * See {@link #updateWorldTransformWith()}. */\n    updateWorldTransform() {\n        this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);\n    }\n    /** Computes the world transform using the parent bone and the specified local transform. The applied transform is set to the\n     * specified local transform. Child bones are not updated.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransformWith(x, y, rotation, scaleX, scaleY, shearX, shearY) {\n        this.ax = x;\n        this.ay = y;\n        this.arotation = rotation;\n        this.ascaleX = scaleX;\n        this.ascaleY = scaleY;\n        this.ashearX = shearX;\n        this.ashearY = shearY;\n        let parent = this.parent;\n        if (!parent) { // Root bone.\n            let skeleton = this.skeleton;\n            let rotationY = rotation + 90 + shearY;\n            let sx = skeleton.scaleX;\n            let sy = skeleton.scaleY;\n            this.a = MathUtils.cosDeg(rotation + shearX) * scaleX * sx;\n            this.b = MathUtils.cosDeg(rotationY) * scaleY * sx;\n            this.c = MathUtils.sinDeg(rotation + shearX) * scaleX * sy;\n            this.d = MathUtils.sinDeg(rotationY) * scaleY * sy;\n            this.worldX = x * sx + skeleton.x;\n            this.worldY = y * sy + skeleton.y;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        this.worldX = pa * x + pb * y + parent.worldX;\n        this.worldY = pc * x + pd * y + parent.worldY;\n        switch (this.data.transformMode) {\n            case TransformMode.Normal: {\n                let rotationY = rotation + 90 + shearY;\n                let la = MathUtils.cosDeg(rotation + shearX) * scaleX;\n                let lb = MathUtils.cosDeg(rotationY) * scaleY;\n                let lc = MathUtils.sinDeg(rotation + shearX) * scaleX;\n                let ld = MathUtils.sinDeg(rotationY) * scaleY;\n                this.a = pa * la + pb * lc;\n                this.b = pa * lb + pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                return;\n            }\n            case TransformMode.OnlyTranslation: {\n                let rotationY = rotation + 90 + shearY;\n                this.a = MathUtils.cosDeg(rotation + shearX) * scaleX;\n                this.b = MathUtils.cosDeg(rotationY) * scaleY;\n                this.c = MathUtils.sinDeg(rotation + shearX) * scaleX;\n                this.d = MathUtils.sinDeg(rotationY) * scaleY;\n                break;\n            }\n            case TransformMode.NoRotationOrReflection: {\n                let s = pa * pa + pc * pc;\n                let prx = 0;\n                if (s > 0.0001) {\n                    s = Math.abs(pa * pd - pb * pc) / s;\n                    pa /= this.skeleton.scaleX;\n                    pc /= this.skeleton.scaleY;\n                    pb = pc * s;\n                    pd = pa * s;\n                    prx = Math.atan2(pc, pa) * MathUtils.radDeg;\n                }\n                else {\n                    pa = 0;\n                    pc = 0;\n                    prx = 90 - Math.atan2(pd, pb) * MathUtils.radDeg;\n                }\n                let rx = rotation + shearX - prx;\n                let ry = rotation + shearY - prx + 90;\n                let la = MathUtils.cosDeg(rx) * scaleX;\n                let lb = MathUtils.cosDeg(ry) * scaleY;\n                let lc = MathUtils.sinDeg(rx) * scaleX;\n                let ld = MathUtils.sinDeg(ry) * scaleY;\n                this.a = pa * la - pb * lc;\n                this.b = pa * lb - pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                break;\n            }\n            case TransformMode.NoScale:\n            case TransformMode.NoScaleOrReflection: {\n                let cos = MathUtils.cosDeg(rotation);\n                let sin = MathUtils.sinDeg(rotation);\n                let za = (pa * cos + pb * sin) / this.skeleton.scaleX;\n                let zc = (pc * cos + pd * sin) / this.skeleton.scaleY;\n                let s = Math.sqrt(za * za + zc * zc);\n                if (s > 0.00001)\n                    s = 1 / s;\n                za *= s;\n                zc *= s;\n                s = Math.sqrt(za * za + zc * zc);\n                if (this.data.transformMode == TransformMode.NoScale\n                    && (pa * pd - pb * pc < 0) != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0))\n                    s = -s;\n                let r = Math.PI / 2 + Math.atan2(zc, za);\n                let zb = Math.cos(r) * s;\n                let zd = Math.sin(r) * s;\n                let la = MathUtils.cosDeg(shearX) * scaleX;\n                let lb = MathUtils.cosDeg(90 + shearY) * scaleY;\n                let lc = MathUtils.sinDeg(shearX) * scaleX;\n                let ld = MathUtils.sinDeg(90 + shearY) * scaleY;\n                this.a = za * la + zb * lc;\n                this.b = za * lb + zb * ld;\n                this.c = zc * la + zd * lc;\n                this.d = zc * lb + zd * ld;\n                break;\n            }\n        }\n        this.a *= this.skeleton.scaleX;\n        this.b *= this.skeleton.scaleX;\n        this.c *= this.skeleton.scaleY;\n        this.d *= this.skeleton.scaleY;\n    }\n    /** Sets this bone's local transform to the setup pose. */\n    setToSetupPose() {\n        let data = this.data;\n        this.x = data.x;\n        this.y = data.y;\n        this.rotation = data.rotation;\n        this.scaleX = data.scaleX;\n        this.scaleY = data.scaleY;\n        this.shearX = data.shearX;\n        this.shearY = data.shearY;\n    }\n    /** The world rotation for the X axis, calculated using {@link #a} and {@link #c}. */\n    getWorldRotationX() {\n        return Math.atan2(this.c, this.a) * MathUtils.radDeg;\n    }\n    /** The world rotation for the Y axis, calculated using {@link #b} and {@link #d}. */\n    getWorldRotationY() {\n        return Math.atan2(this.d, this.b) * MathUtils.radDeg;\n    }\n    /** The magnitude (always positive) of the world scale X, calculated using {@link #a} and {@link #c}. */\n    getWorldScaleX() {\n        return Math.sqrt(this.a * this.a + this.c * this.c);\n    }\n    /** The magnitude (always positive) of the world scale Y, calculated using {@link #b} and {@link #d}. */\n    getWorldScaleY() {\n        return Math.sqrt(this.b * this.b + this.d * this.d);\n    }\n    /** Computes the applied transform values from the world transform.\n     *\n     * If the world transform is modified (by a constraint, {@link #rotateWorld(float)}, etc) then this method should be called so\n     * the applied transform matches the world transform. The applied transform may be needed by other code (eg to apply other\n     * constraints).\n     *\n     * Some information is ambiguous in the world transform, such as -1,-1 scale versus 180 rotation. The applied transform after\n     * calling this method is equivalent to the local transform used to compute the world transform, but may not be identical. */\n    updateAppliedTransform() {\n        let parent = this.parent;\n        if (!parent) {\n            this.ax = this.worldX - this.skeleton.x;\n            this.ay = this.worldY - this.skeleton.y;\n            this.arotation = Math.atan2(this.c, this.a) * MathUtils.radDeg;\n            this.ascaleX = Math.sqrt(this.a * this.a + this.c * this.c);\n            this.ascaleY = Math.sqrt(this.b * this.b + this.d * this.d);\n            this.ashearX = 0;\n            this.ashearY = Math.atan2(this.a * this.b + this.c * this.d, this.a * this.d - this.b * this.c) * MathUtils.radDeg;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        let pid = 1 / (pa * pd - pb * pc);\n        let ia = pd * pid, ib = pb * pid, ic = pc * pid, id = pa * pid;\n        let dx = this.worldX - parent.worldX, dy = this.worldY - parent.worldY;\n        this.ax = (dx * ia - dy * ib);\n        this.ay = (dy * id - dx * ic);\n        let ra, rb, rc, rd;\n        if (this.data.transformMode == TransformMode.OnlyTranslation) {\n            ra = this.a;\n            rb = this.b;\n            rc = this.c;\n            rd = this.d;\n        }\n        else {\n            switch (this.data.transformMode) {\n                case TransformMode.NoRotationOrReflection: {\n                    let s = Math.abs(pa * pd - pb * pc) / (pa * pa + pc * pc);\n                    let sa = pa / this.skeleton.scaleX;\n                    let sc = pc / this.skeleton.scaleY;\n                    pb = -sc * s * this.skeleton.scaleX;\n                    pd = sa * s * this.skeleton.scaleY;\n                    pid = 1 / (pa * pd - pb * pc);\n                    ia = pd * pid;\n                    ib = pb * pid;\n                    break;\n                }\n                case TransformMode.NoScale:\n                case TransformMode.NoScaleOrReflection:\n                    let cos = MathUtils.cosDeg(this.rotation), sin = MathUtils.sinDeg(this.rotation);\n                    pa = (pa * cos + pb * sin) / this.skeleton.scaleX;\n                    pc = (pc * cos + pd * sin) / this.skeleton.scaleY;\n                    let s = Math.sqrt(pa * pa + pc * pc);\n                    if (s > 0.00001)\n                        s = 1 / s;\n                    pa *= s;\n                    pc *= s;\n                    s = Math.sqrt(pa * pa + pc * pc);\n                    if (this.data.transformMode == TransformMode.NoScale && pid < 0 != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0))\n                        s = -s;\n                    let r = MathUtils.PI / 2 + Math.atan2(pc, pa);\n                    pb = Math.cos(r) * s;\n                    pd = Math.sin(r) * s;\n                    pid = 1 / (pa * pd - pb * pc);\n                    ia = pd * pid;\n                    ib = pb * pid;\n                    ic = pc * pid;\n                    id = pa * pid;\n            }\n            ra = ia * this.a - ib * this.c;\n            rb = ia * this.b - ib * this.d;\n            rc = id * this.c - ic * this.a;\n            rd = id * this.d - ic * this.b;\n        }\n        this.ashearX = 0;\n        this.ascaleX = Math.sqrt(ra * ra + rc * rc);\n        if (this.ascaleX > 0.0001) {\n            let det = ra * rd - rb * rc;\n            this.ascaleY = det / this.ascaleX;\n            this.ashearY = -Math.atan2(ra * rb + rc * rd, det) * MathUtils.radDeg;\n            this.arotation = Math.atan2(rc, ra) * MathUtils.radDeg;\n        }\n        else {\n            this.ascaleX = 0;\n            this.ascaleY = Math.sqrt(rb * rb + rd * rd);\n            this.ashearY = 0;\n            this.arotation = 90 - Math.atan2(rd, rb) * MathUtils.radDeg;\n        }\n    }\n    /** Transforms a point from world coordinates to the bone's local coordinates. */\n    worldToLocal(world) {\n        let invDet = 1 / (this.a * this.d - this.b * this.c);\n        let x = world.x - this.worldX, y = world.y - this.worldY;\n        world.x = x * this.d * invDet - y * this.b * invDet;\n        world.y = y * this.a * invDet - x * this.c * invDet;\n        return world;\n    }\n    /** Transforms a point from the bone's local coordinates to world coordinates. */\n    localToWorld(local) {\n        let x = local.x, y = local.y;\n        local.x = x * this.a + y * this.b + this.worldX;\n        local.y = x * this.c + y * this.d + this.worldY;\n        return local;\n    }\n    /** Transforms a world rotation to a local rotation. */\n    worldToLocalRotation(worldRotation) {\n        let sin = MathUtils.sinDeg(worldRotation), cos = MathUtils.cosDeg(worldRotation);\n        return Math.atan2(this.a * sin - this.c * cos, this.d * cos - this.b * sin) * MathUtils.radDeg + this.rotation - this.shearX;\n    }\n    /** Transforms a local rotation to a world rotation. */\n    localToWorldRotation(localRotation) {\n        localRotation -= this.rotation - this.shearX;\n        let sin = MathUtils.sinDeg(localRotation), cos = MathUtils.cosDeg(localRotation);\n        return Math.atan2(cos * this.c + sin * this.d, cos * this.a + sin * this.b) * MathUtils.radDeg;\n    }\n    /** Rotates the world transform the specified amount.\n     * <p>\n     * After changes are made to the world transform, {@link #updateAppliedTransform()} should be called and {@link #update()} will\n     * need to be called on any child bones, recursively. */\n    rotateWorld(degrees) {\n        let a = this.a, b = this.b, c = this.c, d = this.d;\n        let cos = MathUtils.cosDeg(degrees), sin = MathUtils.sinDeg(degrees);\n        this.a = cos * a - sin * c;\n        this.b = cos * b - sin * d;\n        this.c = sin * a + cos * c;\n        this.d = sin * b + cos * d;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TransformMode } from \"./BoneData\";\nimport { MathUtils } from \"./Utils\";\n/** Stores the current pose for an IK constraint. An IK constraint adjusts the rotation of 1 or 2 constrained bones so the tip of\n * the last bone is as close to the target bone as possible.\n *\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraint {\n    constructor(data, skeleton) {\n        /** Controls the bend direction of the IK bones, either 1 or -1. */\n        this.bendDirection = 0;\n        /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n        this.compress = false;\n        /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n         * and the parent bone has local nonuniform scale, stretch is not applied. */\n        this.stretch = false;\n        /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n        this.mix = 1;\n        /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n        this.softness = 0;\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.mix = data.mix;\n        this.softness = data.softness;\n        this.bendDirection = data.bendDirection;\n        this.compress = data.compress;\n        this.stretch = data.stretch;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findBone(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find bone ${data.target.name}`);\n        this.target = target;\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        if (this.mix == 0)\n            return;\n        let target = this.target;\n        let bones = this.bones;\n        switch (bones.length) {\n            case 1:\n                this.apply1(bones[0], target.worldX, target.worldY, this.compress, this.stretch, this.data.uniform, this.mix);\n                break;\n            case 2:\n                this.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.stretch, this.data.uniform, this.softness, this.mix);\n                break;\n        }\n    }\n    /** Applies 1 bone IK. The target is specified in the world coordinate system. */\n    apply1(bone, targetX, targetY, compress, stretch, uniform, alpha) {\n        let p = bone.parent;\n        if (!p)\n            throw new Error(\"IK bone must have parent.\");\n        let pa = p.a, pb = p.b, pc = p.c, pd = p.d;\n        let rotationIK = -bone.ashearX - bone.arotation, tx = 0, ty = 0;\n        switch (bone.data.transformMode) {\n            case TransformMode.OnlyTranslation:\n                tx = targetX - bone.worldX;\n                ty = targetY - bone.worldY;\n                break;\n            case TransformMode.NoRotationOrReflection:\n                let s = Math.abs(pa * pd - pb * pc) / Math.max(0.0001, pa * pa + pc * pc);\n                let sa = pa / bone.skeleton.scaleX;\n                let sc = pc / bone.skeleton.scaleY;\n                pb = -sc * s * bone.skeleton.scaleX;\n                pd = sa * s * bone.skeleton.scaleY;\n                rotationIK += Math.atan2(sc, sa) * MathUtils.radDeg;\n            // Fall through\n            default:\n                let x = targetX - p.worldX, y = targetY - p.worldY;\n                let d = pa * pd - pb * pc;\n                if (Math.abs(d) <= 0.0001) {\n                    tx = 0;\n                    ty = 0;\n                }\n                else {\n                    tx = (x * pd - y * pb) / d - bone.ax;\n                    ty = (y * pa - x * pc) / d - bone.ay;\n                }\n        }\n        rotationIK += Math.atan2(ty, tx) * MathUtils.radDeg;\n        if (bone.ascaleX < 0)\n            rotationIK += 180;\n        if (rotationIK > 180)\n            rotationIK -= 360;\n        else if (rotationIK < -180)\n            rotationIK += 360;\n        let sx = bone.ascaleX, sy = bone.ascaleY;\n        if (compress || stretch) {\n            switch (bone.data.transformMode) {\n                case TransformMode.NoScale:\n                case TransformMode.NoScaleOrReflection:\n                    tx = targetX - bone.worldX;\n                    ty = targetY - bone.worldY;\n            }\n            let b = bone.data.length * sx, dd = Math.sqrt(tx * tx + ty * ty);\n            if ((compress && dd < b) || (stretch && dd > b) && b > 0.0001) {\n                let s = (dd / b - 1) * alpha + 1;\n                sx *= s;\n                if (uniform)\n                    sy *= s;\n            }\n        }\n        bone.updateWorldTransformWith(bone.ax, bone.ay, bone.arotation + rotationIK * alpha, sx, sy, bone.ashearX, bone.ashearY);\n    }\n    /** Applies 2 bone IK. The target is specified in the world coordinate system.\n     * @param child A direct descendant of the parent bone. */\n    apply2(parent, child, targetX, targetY, bendDir, stretch, uniform, softness, alpha) {\n        let px = parent.ax, py = parent.ay, psx = parent.ascaleX, psy = parent.ascaleY, sx = psx, sy = psy, csx = child.ascaleX;\n        let os1 = 0, os2 = 0, s2 = 0;\n        if (psx < 0) {\n            psx = -psx;\n            os1 = 180;\n            s2 = -1;\n        }\n        else {\n            os1 = 0;\n            s2 = 1;\n        }\n        if (psy < 0) {\n            psy = -psy;\n            s2 = -s2;\n        }\n        if (csx < 0) {\n            csx = -csx;\n            os2 = 180;\n        }\n        else\n            os2 = 0;\n        let cx = child.ax, cy = 0, cwx = 0, cwy = 0, a = parent.a, b = parent.b, c = parent.c, d = parent.d;\n        let u = Math.abs(psx - psy) <= 0.0001;\n        if (!u || stretch) {\n            cy = 0;\n            cwx = a * cx + parent.worldX;\n            cwy = c * cx + parent.worldY;\n        }\n        else {\n            cy = child.ay;\n            cwx = a * cx + b * cy + parent.worldX;\n            cwy = c * cx + d * cy + parent.worldY;\n        }\n        let pp = parent.parent;\n        if (!pp)\n            throw new Error(\"IK parent must itself have a parent.\");\n        a = pp.a;\n        b = pp.b;\n        c = pp.c;\n        d = pp.d;\n        let id = a * d - b * c, x = cwx - pp.worldX, y = cwy - pp.worldY;\n        id = Math.abs(id) <= 0.0001 ? 0 : 1 / id;\n        let dx = (x * d - y * b) * id - px, dy = (y * a - x * c) * id - py;\n        let l1 = Math.sqrt(dx * dx + dy * dy), l2 = child.data.length * csx, a1, a2;\n        if (l1 < 0.0001) {\n            this.apply1(parent, targetX, targetY, false, stretch, false, alpha);\n            child.updateWorldTransformWith(cx, cy, 0, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n            return;\n        }\n        x = targetX - pp.worldX;\n        y = targetY - pp.worldY;\n        let tx = (x * d - y * b) * id - px, ty = (y * a - x * c) * id - py;\n        let dd = tx * tx + ty * ty;\n        if (softness != 0) {\n            softness *= psx * (csx + 1) * 0.5;\n            let td = Math.sqrt(dd), sd = td - l1 - l2 * psx + softness;\n            if (sd > 0) {\n                let p = Math.min(1, sd / (softness * 2)) - 1;\n                p = (sd - softness * (1 - p * p)) / td;\n                tx -= p * tx;\n                ty -= p * ty;\n                dd = tx * tx + ty * ty;\n            }\n        }\n        outer: if (u) {\n            l2 *= psx;\n            let cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);\n            if (cos < -1) {\n                cos = -1;\n                a2 = Math.PI * bendDir;\n            }\n            else if (cos > 1) {\n                cos = 1;\n                a2 = 0;\n                if (stretch) {\n                    a = (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;\n                    sx *= a;\n                    if (uniform)\n                        sy *= a;\n                }\n            }\n            else\n                a2 = Math.acos(cos) * bendDir;\n            a = l1 + l2 * cos;\n            b = l2 * Math.sin(a2);\n            a1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\n        }\n        else {\n            a = psx * l2;\n            b = psy * l2;\n            let aa = a * a, bb = b * b, ta = Math.atan2(ty, tx);\n            c = bb * l1 * l1 + aa * dd - aa * bb;\n            let c1 = -2 * bb * l1, c2 = bb - aa;\n            d = c1 * c1 - 4 * c2 * c;\n            if (d >= 0) {\n                let q = Math.sqrt(d);\n                if (c1 < 0)\n                    q = -q;\n                q = -(c1 + q) * 0.5;\n                let r0 = q / c2, r1 = c / q;\n                let r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\n                if (r * r <= dd) {\n                    y = Math.sqrt(dd - r * r) * bendDir;\n                    a1 = ta - Math.atan2(y, r);\n                    a2 = Math.atan2(y / psy, (r - l1) / psx);\n                    break outer;\n                }\n            }\n            let minAngle = MathUtils.PI, minX = l1 - a, minDist = minX * minX, minY = 0;\n            let maxAngle = 0, maxX = l1 + a, maxDist = maxX * maxX, maxY = 0;\n            c = -a * l1 / (aa - bb);\n            if (c >= -1 && c <= 1) {\n                c = Math.acos(c);\n                x = a * Math.cos(c) + l1;\n                y = b * Math.sin(c);\n                d = x * x + y * y;\n                if (d < minDist) {\n                    minAngle = c;\n                    minDist = d;\n                    minX = x;\n                    minY = y;\n                }\n                if (d > maxDist) {\n                    maxAngle = c;\n                    maxDist = d;\n                    maxX = x;\n                    maxY = y;\n                }\n            }\n            if (dd <= (minDist + maxDist) * 0.5) {\n                a1 = ta - Math.atan2(minY * bendDir, minX);\n                a2 = minAngle * bendDir;\n            }\n            else {\n                a1 = ta - Math.atan2(maxY * bendDir, maxX);\n                a2 = maxAngle * bendDir;\n            }\n        }\n        let os = Math.atan2(cy, cx) * s2;\n        let rotation = parent.arotation;\n        a1 = (a1 - os) * MathUtils.radDeg + os1 - rotation;\n        if (a1 > 180)\n            a1 -= 360;\n        else if (a1 < -180) //\n            a1 += 360;\n        parent.updateWorldTransformWith(px, py, rotation + a1 * alpha, sx, sy, 0, 0);\n        rotation = child.arotation;\n        a2 = ((a2 + os) * MathUtils.radDeg - child.ashearX) * s2 + os2 - rotation;\n        if (a2 > 180)\n            a2 -= 360;\n        else if (a2 < -180) //\n            a2 += 360;\n        child.updateWorldTransformWith(cx, cy, rotation + a2 * alpha, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWtDb25zdHJhaW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0lrQ29uc3RyYWludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUkzQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXBDOzs7cUdBR3FHO0FBQ3JHLE1BQU0sT0FBTyxZQUFZO0lBMkJ4QixZQUFhLElBQXNCLEVBQUUsUUFBa0I7UUFqQnZELG1FQUFtRTtRQUNuRSxrQkFBYSxHQUFHLENBQUMsQ0FBQztRQUVsQix5SEFBeUg7UUFDekgsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQjtxRkFDNkU7UUFDN0UsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVoQixvR0FBb0c7UUFDcEcsUUFBRyxHQUFHLENBQUMsQ0FBQztRQUVSLGlHQUFpRztRQUNqRyxhQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUdkLElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxRQUFRO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUNwQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM5QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FB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UUFDN0IsSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFO1lBQ1osR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO1lBQ1gsR0FBRyxHQUFHLEdBQUcsQ0FBQztZQUNWLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNSO2FBQU07WUFDTixHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ1IsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUNQO1FBQ0QsSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFO1lBQ1osR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO1lBQ1gsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDO1NBQ1Q7UUFDRCxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUU7WUFDWixHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUM7WUFDWCxHQUFHLEdBQUcsR0FBRyxDQUFDO1NBQ1Y7O1lBQ0EsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNULElBQUksRUFBRSxHQUFHLEtBQUssQ0FBQyxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDcEcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLElBQUksTUFBTSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxDQUFDLElBQUksT0FBTyxFQUFFO1lBQ2xCLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDUCxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQzdCLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7U0FDN0I7YUFBTTtZQUNOLEVBQUUsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ2QsR0FBRyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ3RDLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztTQUN0QztRQUNELElBQUksRUFBRSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDdkIsSUFBSSxDQUFDLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDakUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDVCxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNULENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ1QsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDVCxJQUFJLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQztRQUNqRSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN6QyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNuRSxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUM1RSxJQUFJLEVBQUUsR0FBRyxNQUFNLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztZQUNwRSxLQUFLLENBQUMsd0JBQXdCLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3RHLE9BQU87U0FDUDtRQUNELENBQUMsR0FBRyxPQUFPLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQztRQUN4QixDQUFDLEdBQUcsT0FBTyxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDeEIsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDbkUsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQzNCLElBQUksUUFBUSxJQUFJLENBQUMsRUFBRTtZQUNsQixRQUFRLElBQUksR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztZQUNsQyxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDO1lBQzNELElBQUksRUFBRSxHQUFHLENBQUMsRUFBRTtnQkFDWCxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQzdDLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO2dCQUN2QyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDYixFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDYixFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDO2FBQ3ZCO1NBQ0Q7UUFDRCxLQUFLLEVBQ0wsSUFBSSxDQUFDLEVBQUU7WUFDTixFQUFFLElBQUksR0FBRyxDQUFDO1lBQ1YsSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ25ELElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFO2dCQUNiLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDVCxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUM7YUFDdkI7aUJBQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFO2dCQUNuQixHQUFHLEdBQUcsQ0FBQyxDQUFDO2dCQUNSLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ1AsSUFBSSxPQUFPLEVBQUU7b0JBQ1osQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDO29CQUNoRCxFQUFFLElBQUksQ0FBQyxDQUFDO29CQUNSLElBQUksT0FBTzt3QkFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUNyQjthQUNEOztnQkFDQSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUM7WUFDL0IsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFDO1lBQ2xCLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN0QixFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDbEQ7YUFBTTtZQUNOLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO1lBQ2IsQ0FBQyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUM7WUFDYixJQUFJLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNwRCxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDO1lBQ3JDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFDcEMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNYLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLElBQUksRUFBRSxHQUFHLENBQUM7b0JBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNuQixDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7Z0JBQ3BCLElBQUksRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7Z0JBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQUU7b0JBQ2hCLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDO29CQUNwQyxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUMzQixFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO29CQUN6QyxNQUFNLEtBQUssQ0FBQztpQkFDWjthQUNEO1lBQ0QsSUFBSSxRQUFRLEdBQUcsU0FBUyxDQUFDLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxPQUFPLEdBQUcsSUFBSSxHQUFHLElBQUksRUFBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDO1lBQzVFLElBQUksUUFBUSxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxPQUFPLEdBQUcsSUFBSSxHQUFHLElBQUksRUFBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDO1lBQ2pFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDdEIsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7Z0JBQ3pCLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEIsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDbEIsSUFBSSxDQUFDLEdBQUcsT0FBTyxFQUFFO29CQUNoQixRQUFRLEdBQUcsQ0FBQyxDQUFDO29CQUNiLE9BQU8sR0FBRyxDQUFDLENBQUM7b0JBQ1osSUFBSSxHQUFHLENBQUMsQ0FBQztvQkFDVCxJQUFJLEdBQUcsQ0FBQyxDQUFDO2lCQUNUO2dCQUNELElBQUksQ0FBQyxHQUFHLE9BQU8sRUFBRTtvQkFDaEIsUUFBUSxHQUFHLENBQUMsQ0FBQztvQkFDYixPQUFPLEdBQUcsQ0FBQyxDQUFDO29CQUNaLElBQUksR0FBRyxDQUFDLENBQUM7b0JBQ1QsSUFBSSxHQUFHLENBQUMsQ0FBQztpQkFDVDthQUNEO1lBQ0QsSUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsR0FBRyxFQUFFO2dCQUNwQyxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDM0MsRUFBRSxHQUFHLFFBQVEsR0FBRyxPQUFPLENBQUM7YUFDeEI7aUJBQU07Z0JBQ04sRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQzNDLEVBQUUsR0FBRyxRQUFRLEdBQUcsT0FBTyxDQUFDO2FBQ3hCO1NBQ0Q7UUFDRCxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDakMsSUFBSSxRQUFRLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUNoQyxFQUFFLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDO1FBQ25ELElBQUksRUFBRSxHQUFHLEdBQUc7WUFDWCxFQUFFLElBQUksR0FBRyxDQUFDO2FBQ04sSUFBSSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNyQixFQUFFLElBQUksR0FBRyxDQUFDO1FBQ1gsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsUUFBUSxHQUFHLEVBQUUsR0FBRyxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDN0UsUUFBUSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUM7UUFDM0IsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUM7UUFDMUUsSUFBSSxFQUFFLEdBQUcsR0FBRztZQUNYLEVBQUUsSUFBSSxHQUFHLENBQUM7YUFDTixJQUFJLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ3JCLEVBQUUsSUFBSSxHQUFHLENBQUM7UUFDWCxLQUFLLENBQUMsd0JBQXdCLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxRQUFRLEdBQUcsRUFBRSxHQUFHLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0gsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** The base class for all constraint datas. */\nexport class ConstraintData {\n    constructor(name, order, skinRequired) {\n        this.name = name;\n        this.order = order;\n        this.skinRequired = skinRequired;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLCtDQUErQztBQUMvQyxNQUFNLE9BQWdCLGNBQWM7SUFDbkMsWUFBb0IsSUFBWSxFQUFTLEtBQWEsRUFBUyxZQUFxQjtRQUFoRSxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVMsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUFTLGlCQUFZLEdBQVosWUFBWSxDQUFTO0lBQUksQ0FBQztDQUN6RiJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { PathAttachment } from \"./attachments/PathAttachment\";\nimport { RotateMode, SpacingMode, PositionMode } from \"./PathConstraintData\";\nimport { Utils, MathUtils } from \"./Utils\";\n/** Stores the current pose for a path constraint. A path constraint adjusts the rotation, translation, and scale of the\n * constrained bones so they follow a {@link PathAttachment}.\n *\n * See [Path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraint {\n    constructor(data, skeleton) {\n        /** The position along the path. */\n        this.position = 0;\n        /** The spacing between bones. */\n        this.spacing = 0;\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n        this.spaces = new Array();\n        this.positions = new Array();\n        this.world = new Array();\n        this.curves = new Array();\n        this.lengths = new Array();\n        this.segments = new Array();\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0, n = data.bones.length; i < n; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}.`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findSlot(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find target bone ${data.target.name}`);\n        this.target = target;\n        this.position = data.position;\n        this.spacing = data.spacing;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        let attachment = this.target.getAttachment();\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY;\n        if (mixRotate == 0 && mixX == 0 && mixY == 0)\n            return;\n        let data = this.data;\n        let tangents = data.rotateMode == RotateMode.Tangent, scale = data.rotateMode == RotateMode.ChainScale;\n        let bones = this.bones;\n        let boneCount = bones.length, spacesCount = tangents ? boneCount : boneCount + 1;\n        let spaces = Utils.setArraySize(this.spaces, spacesCount), lengths = scale ? this.lengths = Utils.setArraySize(this.lengths, boneCount) : [];\n        let spacing = this.spacing;\n        switch (data.spacingMode) {\n            case SpacingMode.Percent:\n                if (scale) {\n                    for (let i = 0, n = spacesCount - 1; i < n; i++) {\n                        let bone = bones[i];\n                        let setupLength = bone.data.length;\n                        if (setupLength < PathConstraint.epsilon)\n                            lengths[i] = 0;\n                        else {\n                            let x = setupLength * bone.a, y = setupLength * bone.c;\n                            lengths[i] = Math.sqrt(x * x + y * y);\n                        }\n                    }\n                }\n                Utils.arrayFill(spaces, 1, spacesCount, spacing);\n                break;\n            case SpacingMode.Proportional:\n                let sum = 0;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = length;\n                        sum += length;\n                    }\n                }\n                if (sum > 0) {\n                    sum = spacesCount / sum * spacing;\n                    for (let i = 1; i < spacesCount; i++)\n                        spaces[i] *= sum;\n                }\n                break;\n            default:\n                let lengthSpacing = data.spacingMode == SpacingMode.Length;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = (lengthSpacing ? setupLength + spacing : spacing) * length / setupLength;\n                    }\n                }\n        }\n        let positions = this.computeWorldPositions(attachment, spacesCount, tangents);\n        let boneX = positions[0], boneY = positions[1], offsetRotation = data.offsetRotation;\n        let tip = false;\n        if (offsetRotation == 0)\n            tip = data.rotateMode == RotateMode.Chain;\n        else {\n            tip = false;\n            let p = this.target.bone;\n            offsetRotation *= p.a * p.d - p.b * p.c > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        }\n        for (let i = 0, p = 3; i < boneCount; i++, p += 3) {\n            let bone = bones[i];\n            bone.worldX += (boneX - bone.worldX) * mixX;\n            bone.worldY += (boneY - bone.worldY) * mixY;\n            let x = positions[p], y = positions[p + 1], dx = x - boneX, dy = y - boneY;\n            if (scale) {\n                let length = lengths[i];\n                if (length != 0) {\n                    let s = (Math.sqrt(dx * dx + dy * dy) / length - 1) * mixRotate + 1;\n                    bone.a *= s;\n                    bone.c *= s;\n                }\n            }\n            boneX = x;\n            boneY = y;\n            if (mixRotate > 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d, r = 0, cos = 0, sin = 0;\n                if (tangents)\n                    r = positions[p - 1];\n                else if (spaces[i + 1] == 0)\n                    r = positions[p + 2];\n                else\n                    r = Math.atan2(dy, dx);\n                r -= Math.atan2(c, a);\n                if (tip) {\n                    cos = Math.cos(r);\n                    sin = Math.sin(r);\n                    let length = bone.data.length;\n                    boneX += (length * (cos * a - sin * c) - dx) * mixRotate;\n                    boneY += (length * (sin * a + cos * c) - dy) * mixRotate;\n                }\n                else {\n                    r += offsetRotation;\n                }\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                cos = Math.cos(r);\n                sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    computeWorldPositions(path, spacesCount, tangents) {\n        let target = this.target;\n        let position = this.position;\n        let spaces = this.spaces, out = Utils.setArraySize(this.positions, spacesCount * 3 + 2), world = this.world;\n        let closed = path.closed;\n        let verticesLength = path.worldVerticesLength, curveCount = verticesLength / 6, prevCurve = PathConstraint.NONE;\n        if (!path.constantSpeed) {\n            let lengths = path.lengths;\n            curveCount -= closed ? 1 : 2;\n            let pathLength = lengths[curveCount];\n            if (this.data.positionMode == PositionMode.Percent)\n                position *= pathLength;\n            let multiplier;\n            switch (this.data.spacingMode) {\n                case SpacingMode.Percent:\n                    multiplier = pathLength;\n                    break;\n                case SpacingMode.Proportional:\n                    multiplier = pathLength / spacesCount;\n                    break;\n                default:\n                    multiplier = 1;\n            }\n            world = Utils.setArraySize(this.world, 8);\n            for (let i = 0, o = 0, curve = 0; i < spacesCount; i++, o += 3) {\n                let space = spaces[i] * multiplier;\n                position += space;\n                let p = position;\n                if (closed) {\n                    p %= pathLength;\n                    if (p < 0)\n                        p += pathLength;\n                    curve = 0;\n                }\n                else if (p < 0) {\n                    if (prevCurve != PathConstraint.BEFORE) {\n                        prevCurve = PathConstraint.BEFORE;\n                        path.computeWorldVertices(target, 2, 4, world, 0, 2);\n                    }\n                    this.addBeforePosition(p, world, 0, out, o);\n                    continue;\n                }\n                else if (p > pathLength) {\n                    if (prevCurve != PathConstraint.AFTER) {\n                        prevCurve = PathConstraint.AFTER;\n                        path.computeWorldVertices(target, verticesLength - 6, 4, world, 0, 2);\n                    }\n                    this.addAfterPosition(p - pathLength, world, 0, out, o);\n                    continue;\n                }\n                // Determine curve containing position.\n                for (;; curve++) {\n                    let length = lengths[curve];\n                    if (p > length)\n                        continue;\n                    if (curve == 0)\n                        p /= length;\n                    else {\n                        let prev = lengths[curve - 1];\n                        p = (p - prev) / (length - prev);\n                    }\n                    break;\n                }\n                if (curve != prevCurve) {\n                    prevCurve = curve;\n                    if (closed && curve == curveCount) {\n                        path.computeWorldVertices(target, verticesLength - 4, 4, world, 0, 2);\n                        path.computeWorldVertices(target, 0, 4, world, 4, 2);\n                    }\n                    else\n                        path.computeWorldVertices(target, curve * 6 + 2, 8, world, 0, 2);\n                }\n                this.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || (i > 0 && space == 0));\n            }\n            return out;\n        }\n        // World vertices.\n        if (closed) {\n            verticesLength += 2;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength - 4, world, 0, 2);\n            path.computeWorldVertices(target, 0, 2, world, verticesLength - 4, 2);\n            world[verticesLength - 2] = world[0];\n            world[verticesLength - 1] = world[1];\n        }\n        else {\n            curveCount--;\n            verticesLength -= 4;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength, world, 0, 2);\n        }\n        // Curve lengths.\n        let curves = Utils.setArraySize(this.curves, curveCount);\n        let pathLength = 0;\n        let x1 = world[0], y1 = world[1], cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0, x2 = 0, y2 = 0;\n        let tmpx = 0, tmpy = 0, dddfx = 0, dddfy = 0, ddfx = 0, ddfy = 0, dfx = 0, dfy = 0;\n        for (let i = 0, w = 2; i < curveCount; i++, w += 6) {\n            cx1 = world[w];\n            cy1 = world[w + 1];\n            cx2 = world[w + 2];\n            cy2 = world[w + 3];\n            x2 = world[w + 4];\n            y2 = world[w + 5];\n            tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\n            tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\n            dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\n            dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\n            ddfx = tmpx * 2 + dddfx;\n            ddfy = tmpy * 2 + dddfy;\n            dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\n            dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx + dddfx;\n            dfy += ddfy + dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            curves[i] = pathLength;\n            x1 = x2;\n            y1 = y2;\n        }\n        if (this.data.positionMode == PositionMode.Percent)\n            position *= pathLength;\n        let multiplier;\n        switch (this.data.spacingMode) {\n            case SpacingMode.Percent:\n                multiplier = pathLength;\n                break;\n            case SpacingMode.Proportional:\n                multiplier = pathLength / spacesCount;\n                break;\n            default:\n                multiplier = 1;\n        }\n        let segments = this.segments;\n        let curveLength = 0;\n        for (let i = 0, o = 0, curve = 0, segment = 0; i < spacesCount; i++, o += 3) {\n            let space = spaces[i] * multiplier;\n            position += space;\n            let p = position;\n            if (closed) {\n                p %= pathLength;\n                if (p < 0)\n                    p += pathLength;\n                curve = 0;\n            }\n            else if (p < 0) {\n                this.addBeforePosition(p, world, 0, out, o);\n                continue;\n            }\n            else if (p > pathLength) {\n                this.addAfterPosition(p - pathLength, world, verticesLength - 4, out, o);\n                continue;\n            }\n            // Determine curve containing position.\n            for (;; curve++) {\n                let length = curves[curve];\n                if (p > length)\n                    continue;\n                if (curve == 0)\n                    p /= length;\n                else {\n                    let prev = curves[curve - 1];\n                    p = (p - prev) / (length - prev);\n                }\n                break;\n            }\n            // Curve segment lengths.\n            if (curve != prevCurve) {\n                prevCurve = curve;\n                let ii = curve * 6;\n                x1 = world[ii];\n                y1 = world[ii + 1];\n                cx1 = world[ii + 2];\n                cy1 = world[ii + 3];\n                cx2 = world[ii + 4];\n                cy2 = world[ii + 5];\n                x2 = world[ii + 6];\n                y2 = world[ii + 7];\n                tmpx = (x1 - cx1 * 2 + cx2) * 0.03;\n                tmpy = (y1 - cy1 * 2 + cy2) * 0.03;\n                dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\n                dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\n                ddfx = tmpx * 2 + dddfx;\n                ddfy = tmpy * 2 + dddfy;\n                dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\n                dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\n                curveLength = Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[0] = curveLength;\n                for (ii = 1; ii < 8; ii++) {\n                    dfx += ddfx;\n                    dfy += ddfy;\n                    ddfx += dddfx;\n                    ddfy += dddfy;\n                    curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[ii] = curveLength;\n                }\n                dfx += ddfx;\n                dfy += ddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[8] = curveLength;\n                dfx += ddfx + dddfx;\n                dfy += ddfy + dddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[9] = curveLength;\n                segment = 0;\n            }\n            // Weight by segment length.\n            p *= curveLength;\n            for (;; segment++) {\n                let length = segments[segment];\n                if (p > length)\n                    continue;\n                if (segment == 0)\n                    p /= length;\n                else {\n                    let prev = segments[segment - 1];\n                    p = segment + (p - prev) / (length - prev);\n                }\n                break;\n            }\n            this.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents || (i > 0 && space == 0));\n        }\n        return out;\n    }\n    addBeforePosition(p, temp, i, out, o) {\n        let x1 = temp[i], y1 = temp[i + 1], dx = temp[i + 2] - x1, dy = temp[i + 3] - y1, r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addAfterPosition(p, temp, i, out, o) {\n        let x1 = temp[i + 2], y1 = temp[i + 3], dx = x1 - temp[i], dy = y1 - temp[i + 1], r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addCurvePosition(p, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents) {\n        if (p == 0 || isNaN(p)) {\n            out[o] = x1;\n            out[o + 1] = y1;\n            out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            return;\n        }\n        let tt = p * p, ttt = tt * p, u = 1 - p, uu = u * u, uuu = uu * u;\n        let ut = u * p, ut3 = ut * 3, uut3 = u * ut3, utt3 = ut3 * p;\n        let x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt, y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\n        out[o] = x;\n        out[o + 1] = y;\n        if (tangents) {\n            if (p < 0.001)\n                out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            else\n                out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\n        }\n    }\n}\nPathConstraint.NONE = -1;\nPathConstraint.BEFORE = -2;\nPathConstraint.AFTER = -3;\nPathConstraint.epsilon = 0.00001;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment\";\nimport { Color } from \"./Utils\";\n/** Stores a slot's current pose. Slots organize attachments for {@link Skeleton#drawOrder} purposes and provide a place to store\n * state for an attachment. State cannot be stored in an attachment itself because attachments are stateless and may be shared\n * across multiple skeletons. */\nexport class Slot {\n    constructor(data, bone) {\n        /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n         * color's alpha is not used. */\n        this.darkColor = null;\n        this.attachment = null;\n        this.attachmentState = 0;\n        /** The index of the texture region to display when the slot's attachment has a {@link Sequence}. -1 represents the\n         * {@link Sequence#getSetupIndex()}. */\n        this.sequenceIndex = -1;\n        /** Values to deform the slot's attachment. For an unweighted mesh, the entries are local positions for each vertex. For a\n         * weighted mesh, the entries are an offset for each vertex which will be added to the mesh's local vertex positions.\n         *\n         * See {@link VertexAttachment#computeWorldVertices()} and {@link DeformTimeline}. */\n        this.deform = new Array();\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!bone)\n            throw new Error(\"bone cannot be null.\");\n        this.data = data;\n        this.bone = bone;\n        this.color = new Color();\n        this.darkColor = !data.darkColor ? null : new Color();\n        this.setToSetupPose();\n    }\n    /** The skeleton this slot belongs to. */\n    getSkeleton() {\n        return this.bone.skeleton;\n    }\n    /** The current attachment for the slot, or null if the slot has no attachment. */\n    getAttachment() {\n        return this.attachment;\n    }\n    /** Sets the slot's attachment and, if the attachment changed, resets {@link #sequenceIndex} and clears the {@link #deform}.\n     * The deform is not cleared if the old attachment has the same {@link VertexAttachment#getTimelineAttachment()} as the\n     * specified attachment. */\n    setAttachment(attachment) {\n        if (this.attachment == attachment)\n            return;\n        if (!(attachment instanceof VertexAttachment) || !(this.attachment instanceof VertexAttachment)\n            || attachment.timelineAttachment != this.attachment.timelineAttachment) {\n            this.deform.length = 0;\n        }\n        this.attachment = attachment;\n        this.sequenceIndex = -1;\n    }\n    /** Sets this slot to the setup pose. */\n    setToSetupPose() {\n        this.color.setFromColor(this.data.color);\n        if (this.darkColor)\n            this.darkColor.setFromColor(this.data.darkColor);\n        if (!this.data.attachmentName)\n            this.attachment = null;\n        else {\n            this.attachment = null;\n            this.setAttachment(this.bone.skeleton.getAttachment(this.data.index, this.data.attachmentName));\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9TbG90LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQWMsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUl4RSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRWhDOztnQ0FFZ0M7QUFDaEMsTUFBTSxPQUFPLElBQUk7SUE2QmhCLFlBQWEsSUFBYyxFQUFFLElBQVU7UUFsQnZDO3dDQUNnQztRQUNoQyxjQUFTLEdBQWlCLElBQUksQ0FBQztRQUUvQixlQUFVLEdBQXNCLElBQUksQ0FBQztRQUVyQyxvQkFBZSxHQUFXLENBQUMsQ0FBQztRQUU1QjsrQ0FDdUM7UUFDdkMsa0JBQWEsR0FBVyxDQUFDLENBQUMsQ0FBQztRQUUzQjs7OzZGQUdxRjtRQUNyRixXQUFNLEdBQUcsSUFBSSxLQUFLLEVBQVUsQ0FBQztRQUc1QixJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUN0RCxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELHlDQUF5QztJQUN6QyxXQUFXO1FBQ1YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBRUQsa0ZBQWtGO0lBQ2xGLGFBQWE7UUFDWixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDeEIsQ0FBQztJQUVEOzsrQkFFMkI7SUFDM0IsYUFBYSxDQUFFLFVBQTZCO1FBQzNDLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxVQUFVO1lBQUUsT0FBTztRQUMxQyxJQUFJLENBQUMsQ0FBQyxVQUFVLFlBQVksZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsWUFBWSxnQkFBZ0IsQ0FBQztlQUN4RSxVQUFXLENBQUMsa0JBQWtCLElBQXVCLElBQUksQ0FBQyxVQUFXLENBQUMsa0JBQWtCLEVBQUU7WUFDaEgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1NBQ3ZCO1FBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsd0NBQXdDO0lBQ3hDLGNBQWM7UUFDYixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLElBQUksSUFBSSxDQUFDLFNBQVM7WUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVUsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWM7WUFDNUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7YUFDbkI7WUFDSixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztZQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7U0FDaEc7SUFDRixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector2, MathUtils } from \"./Utils\";\n/** Stores the current pose for a transform constraint. A transform constraint adjusts the world transform of the constrained\n * bones to match that of the target bone.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraint {\n    constructor(data, skeleton) {\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n        this.mixScaleX = 0;\n        this.mixScaleY = 0;\n        this.mixShearY = 0;\n        this.temp = new Vector2();\n        this.active = false;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n        this.mixScaleX = data.mixScaleX;\n        this.mixScaleY = data.mixScaleY;\n        this.mixShearY = data.mixShearY;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}.`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findBone(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find target bone ${data.target.name}.`);\n        this.target = target;\n    }\n    isActive() {\n        return this.active;\n    }\n    update() {\n        if (this.mixRotate == 0 && this.mixX == 0 && this.mixY == 0 && this.mixScaleX == 0 && this.mixScaleY == 0 && this.mixShearY == 0)\n            return;\n        if (this.data.local) {\n            if (this.data.relative)\n                this.applyRelativeLocal();\n            else\n                this.applyAbsoluteLocal();\n        }\n        else {\n            if (this.data.relative)\n                this.applyRelativeWorld();\n            else\n                this.applyAbsoluteWorld();\n        }\n    }\n    applyAbsoluteWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect;\n        let offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) - Math.atan2(c, a) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += (temp.x - bone.worldX) * mixX;\n                bone.worldY += (temp.y - bone.worldY) * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);\n                if (s != 0)\n                    s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = Math.sqrt(bone.b * bone.b + bone.d * bone.d);\n                if (s != 0)\n                    s = (s + (Math.sqrt(tb * tb + td * td) - s + this.data.offsetScaleY) * mixScaleY) / s;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let b = bone.b, d = bone.d;\n                let by = Math.atan2(d, b);\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(bone.c, bone.a));\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r = by + (r + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyRelativeWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect, offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += temp.x * mixX;\n                bone.worldY += temp.y * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta);\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                let b = bone.b, d = bone.d;\n                r = Math.atan2(d, b) + (r - MathUtils.PI / 2 + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyAbsoluteLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation;\n            if (mixRotate != 0) {\n                let r = target.arotation - rotation + this.data.offsetRotation;\n                r -= (16384 - ((16384.499999999996 - r / 360) | 0)) * 360;\n                rotation += r * mixRotate;\n            }\n            let x = bone.ax, y = bone.ay;\n            x += (target.ax - x + this.data.offsetX) * mixX;\n            y += (target.ay - y + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX, scaleY = bone.ascaleY;\n            if (mixScaleX != 0 && scaleX != 0)\n                scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;\n            if (mixScaleY != 0 && scaleY != 0)\n                scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;\n            let shearY = bone.ashearY;\n            if (mixShearY != 0) {\n                let r = target.ashearY - shearY + this.data.offsetShearY;\n                r -= (16384 - ((16384.499999999996 - r / 360) | 0)) * 360;\n                shearY += r * mixShearY;\n            }\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n    applyRelativeLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;\n            let x = bone.ax + (target.ax + this.data.offsetX) * mixX;\n            let y = bone.ay + (target.ay + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX * (((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX) + 1);\n            let scaleY = bone.ascaleY * (((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY) + 1);\n            let shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MeshAttachment } from \"./attachments/MeshAttachment\";\nimport { PathAttachment } from \"./attachments/PathAttachment\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment\";\nimport { Bone } from \"./Bone\";\nimport { IkConstraint } from \"./IkConstraint\";\nimport { PathConstraint } from \"./PathConstraint\";\nimport { Slot } from \"./Slot\";\nimport { TransformConstraint } from \"./TransformConstraint\";\nimport { Color, Utils, MathUtils, Vector2 } from \"./Utils\";\n/** Stores the current pose for a skeleton.\n *\n * See [Instance objects](http://esotericsoftware.com/spine-runtime-architecture#Instance-objects) in the Spine Runtimes Guide. */\nexport class Skeleton {\n    ;\n    get scaleY() {\n        return Skeleton.yDown ? -this._scaleY : this._scaleY;\n    }\n    set scaleY(scaleY) {\n        this._scaleY = scaleY;\n    }\n    constructor(data) {\n        /** The list of bones and constraints, sorted in the order they should be updated, as computed by {@link #updateCache()}. */\n        this._updateCache = new Array();\n        /** The skeleton's current skin. May be null. */\n        this.skin = null;\n        /** Scales the entire skeleton on the X axis. This affects all bones, even if the bone's transform mode disallows scale\n          * inheritance. */\n        this.scaleX = 1;\n        /** Scales the entire skeleton on the Y axis. This affects all bones, even if the bone's transform mode disallows scale\n          * inheritance. */\n        this._scaleY = 1;\n        /** Sets the skeleton X position, which is added to the root bone worldX position. */\n        this.x = 0;\n        /** Sets the skeleton Y position, which is added to the root bone worldY position. */\n        this.y = 0;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let boneData = data.bones[i];\n            let bone;\n            if (!boneData.parent)\n                bone = new Bone(boneData, this, null);\n            else {\n                let parent = this.bones[boneData.parent.index];\n                bone = new Bone(boneData, this, parent);\n                parent.children.push(bone);\n            }\n            this.bones.push(bone);\n        }\n        this.slots = new Array();\n        this.drawOrder = new Array();\n        for (let i = 0; i < data.slots.length; i++) {\n            let slotData = data.slots[i];\n            let bone = this.bones[slotData.boneData.index];\n            let slot = new Slot(slotData, bone);\n            this.slots.push(slot);\n            this.drawOrder.push(slot);\n        }\n        this.ikConstraints = new Array();\n        for (let i = 0; i < data.ikConstraints.length; i++) {\n            let ikConstraintData = data.ikConstraints[i];\n            this.ikConstraints.push(new IkConstraint(ikConstraintData, this));\n        }\n        this.transformConstraints = new Array();\n        for (let i = 0; i < data.transformConstraints.length; i++) {\n            let transformConstraintData = data.transformConstraints[i];\n            this.transformConstraints.push(new TransformConstraint(transformConstraintData, this));\n        }\n        this.pathConstraints = new Array();\n        for (let i = 0; i < data.pathConstraints.length; i++) {\n            let pathConstraintData = data.pathConstraints[i];\n            this.pathConstraints.push(new PathConstraint(pathConstraintData, this));\n        }\n        this.color = new Color(1, 1, 1, 1);\n        this.updateCache();\n    }\n    /** Caches information about bones and constraints. Must be called if the {@link #getSkin()} is modified or if bones,\n     * constraints, or weighted path attachments are added or removed. */\n    updateCache() {\n        let updateCache = this._updateCache;\n        updateCache.length = 0;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.sorted = bone.data.skinRequired;\n            bone.active = !bone.sorted;\n        }\n        if (this.skin) {\n            let skinBones = this.skin.bones;\n            for (let i = 0, n = this.skin.bones.length; i < n; i++) {\n                let bone = this.bones[skinBones[i].index];\n                do {\n                    bone.sorted = false;\n                    bone.active = true;\n                    bone = bone.parent;\n                } while (bone);\n            }\n        }\n        // IK first, lowest hierarchy depth first.\n        let ikConstraints = this.ikConstraints;\n        let transformConstraints = this.transformConstraints;\n        let pathConstraints = this.pathConstraints;\n        let ikCount = ikConstraints.length, transformCount = transformConstraints.length, pathCount = pathConstraints.length;\n        let constraintCount = ikCount + transformCount + pathCount;\n        outer: for (let i = 0; i < constraintCount; i++) {\n            for (let ii = 0; ii < ikCount; ii++) {\n                let constraint = ikConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortIkConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < transformCount; ii++) {\n                let constraint = transformConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortTransformConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < pathCount; ii++) {\n                let constraint = pathConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortPathConstraint(constraint);\n                    continue outer;\n                }\n            }\n        }\n        for (let i = 0, n = bones.length; i < n; i++)\n            this.sortBone(bones[i]);\n    }\n    sortIkConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let target = constraint.target;\n        this.sortBone(target);\n        let constrained = constraint.bones;\n        let parent = constrained[0];\n        this.sortBone(parent);\n        if (constrained.length == 1) {\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n        }\n        else {\n            let child = constrained[constrained.length - 1];\n            this.sortBone(child);\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n            child.sorted = true;\n        }\n    }\n    sortPathConstraint(constraint) {\n        constraint.active = constraint.target.bone.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let slot = constraint.target;\n        let slotIndex = slot.data.index;\n        let slotBone = slot.bone;\n        if (this.skin)\n            this.sortPathConstraintAttachment(this.skin, slotIndex, slotBone);\n        if (this.data.defaultSkin && this.data.defaultSkin != this.skin)\n            this.sortPathConstraintAttachment(this.data.defaultSkin, slotIndex, slotBone);\n        for (let i = 0, n = this.data.skins.length; i < n; i++)\n            this.sortPathConstraintAttachment(this.data.skins[i], slotIndex, slotBone);\n        let attachment = slot.getAttachment();\n        if (attachment instanceof PathAttachment)\n            this.sortPathConstraintAttachmentWith(attachment, slotBone);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        for (let i = 0; i < boneCount; i++)\n            this.sortBone(constrained[i]);\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortTransformConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        this.sortBone(constraint.target);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        if (constraint.data.local) {\n            for (let i = 0; i < boneCount; i++) {\n                let child = constrained[i];\n                this.sortBone(child.parent);\n                this.sortBone(child);\n            }\n        }\n        else {\n            for (let i = 0; i < boneCount; i++) {\n                this.sortBone(constrained[i]);\n            }\n        }\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortPathConstraintAttachment(skin, slotIndex, slotBone) {\n        let attachments = skin.attachments[slotIndex];\n        if (!attachments)\n            return;\n        for (let key in attachments) {\n            this.sortPathConstraintAttachmentWith(attachments[key], slotBone);\n        }\n    }\n    sortPathConstraintAttachmentWith(attachment, slotBone) {\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let pathBones = attachment.bones;\n        if (!pathBones)\n            this.sortBone(slotBone);\n        else {\n            let bones = this.bones;\n            for (let i = 0, n = pathBones.length; i < n;) {\n                let nn = pathBones[i++];\n                nn += i;\n                while (i < nn)\n                    this.sortBone(bones[pathBones[i++]]);\n            }\n        }\n    }\n    sortBone(bone) {\n        if (!bone)\n            return;\n        if (bone.sorted)\n            return;\n        let parent = bone.parent;\n        if (parent)\n            this.sortBone(parent);\n        bone.sorted = true;\n        this._updateCache.push(bone);\n    }\n    sortReset(bones) {\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (!bone.active)\n                continue;\n            if (bone.sorted)\n                this.sortReset(bone.children);\n            bone.sorted = false;\n        }\n    }\n    /** Updates the world transform for each bone and applies all constraints.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransform() {\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.ax = bone.x;\n            bone.ay = bone.y;\n            bone.arotation = bone.rotation;\n            bone.ascaleX = bone.scaleX;\n            bone.ascaleY = bone.scaleY;\n            bone.ashearX = bone.shearX;\n            bone.ashearY = bone.shearY;\n        }\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++)\n            updateCache[i].update();\n    }\n    updateWorldTransformWith(parent) {\n        // Apply the parent bone transform to the root bone. The root bone always inherits scale, rotation and reflection.\n        let rootBone = this.getRootBone();\n        if (!rootBone)\n            throw new Error(\"Root bone must not be null.\");\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        rootBone.worldX = pa * this.x + pb * this.y + parent.worldX;\n        rootBone.worldY = pc * this.x + pd * this.y + parent.worldY;\n        let rotationY = rootBone.rotation + 90 + rootBone.shearY;\n        let la = MathUtils.cosDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n        let lb = MathUtils.cosDeg(rotationY) * rootBone.scaleY;\n        let lc = MathUtils.sinDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n        let ld = MathUtils.sinDeg(rotationY) * rootBone.scaleY;\n        rootBone.a = (pa * la + pb * lc) * this.scaleX;\n        rootBone.b = (pa * lb + pb * ld) * this.scaleX;\n        rootBone.c = (pc * la + pd * lc) * this.scaleY;\n        rootBone.d = (pc * lb + pd * ld) * this.scaleY;\n        // Update everything except root bone.\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++) {\n            let updatable = updateCache[i];\n            if (updatable != rootBone)\n                updatable.update();\n        }\n    }\n    /** Sets the bones, constraints, and slots to their setup pose values. */\n    setToSetupPose() {\n        this.setBonesToSetupPose();\n        this.setSlotsToSetupPose();\n    }\n    /** Sets the bones and constraints to their setup pose values. */\n    setBonesToSetupPose() {\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++)\n            bones[i].setToSetupPose();\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let constraint = ikConstraints[i];\n            constraint.mix = constraint.data.mix;\n            constraint.softness = constraint.data.softness;\n            constraint.bendDirection = constraint.data.bendDirection;\n            constraint.compress = constraint.data.compress;\n            constraint.stretch = constraint.data.stretch;\n        }\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate;\n            constraint.mixX = data.mixX;\n            constraint.mixY = data.mixY;\n            constraint.mixScaleX = data.mixScaleX;\n            constraint.mixScaleY = data.mixScaleY;\n            constraint.mixShearY = data.mixShearY;\n        }\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            let data = constraint.data;\n            constraint.position = data.position;\n            constraint.spacing = data.spacing;\n            constraint.mixRotate = data.mixRotate;\n            constraint.mixX = data.mixX;\n            constraint.mixY = data.mixY;\n        }\n    }\n    /** Sets the slots and draw order to their setup pose values. */\n    setSlotsToSetupPose() {\n        let slots = this.slots;\n        Utils.arrayCopy(slots, 0, this.drawOrder, 0, slots.length);\n        for (let i = 0, n = slots.length; i < n; i++)\n            slots[i].setToSetupPose();\n    }\n    /** @returns May return null. */\n    getRootBone() {\n        if (this.bones.length == 0)\n            return null;\n        return this.bones[0];\n    }\n    /** @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.data.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * repeatedly.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Sets a skin by name.\n     *\n     * See {@link #setSkin()}. */\n    setSkinByName(skinName) {\n        let skin = this.data.findSkin(skinName);\n        if (!skin)\n            throw new Error(\"Skin not found: \" + skinName);\n        this.setSkin(skin);\n    }\n    /** Sets the skin used to look up attachments before looking in the {@link SkeletonData#defaultSkin default skin}. If the\n     * skin is changed, {@link #updateCache()} is called.\n     *\n     * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was no\n     * old skin, each slot's setup mode attachment is attached from the new skin.\n     *\n     * After changing the skin, the visible attachments can be reset to those attached in the setup pose by calling\n     * {@link #setSlotsToSetupPose()}. Also, often {@link AnimationState#apply()} is called before the next time the\n     * skeleton is rendered to allow any attachment keys in the current animation(s) to hide or show attachments from the new skin.\n     * @param newSkin May be null. */\n    setSkin(newSkin) {\n        if (newSkin == this.skin)\n            return;\n        if (newSkin) {\n            if (this.skin)\n                newSkin.attachAll(this, this.skin);\n            else {\n                let slots = this.slots;\n                for (let i = 0, n = slots.length; i < n; i++) {\n                    let slot = slots[i];\n                    let name = slot.data.attachmentName;\n                    if (name) {\n                        let attachment = newSkin.getAttachment(i, name);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                    }\n                }\n            }\n        }\n        this.skin = newSkin;\n        this.updateCache();\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot name and attachment\n     * name.\n     *\n     * See {@link #getAttachment()}.\n     * @returns May be null. */\n    getAttachmentByName(slotName, attachmentName) {\n        let slot = this.data.findSlot(slotName);\n        if (!slot)\n            throw new Error(`Can't find slot with name ${slotName}`);\n        return this.getAttachment(slot.index, attachmentName);\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot index and\n     * attachment name. First the skin is checked and if the attachment was not found, the default skin is checked.\n     *\n     * See [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide.\n     * @returns May be null. */\n    getAttachment(slotIndex, attachmentName) {\n        if (!attachmentName)\n            throw new Error(\"attachmentName cannot be null.\");\n        if (this.skin) {\n            let attachment = this.skin.getAttachment(slotIndex, attachmentName);\n            if (attachment)\n                return attachment;\n        }\n        if (this.data.defaultSkin)\n            return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\n        return null;\n    }\n    /** A convenience method to set an attachment by finding the slot with {@link #findSlot()}, finding the attachment with\n     * {@link #getAttachment()}, then setting the slot's {@link Slot#attachment}.\n     * @param attachmentName May be null to clear the slot's attachment. */\n    setAttachment(slotName, attachmentName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName) {\n                let attachment = null;\n                if (attachmentName) {\n                    attachment = this.getAttachment(i, attachmentName);\n                    if (!attachment)\n                        throw new Error(\"Attachment not found: \" + attachmentName + \", for slot: \" + slotName);\n                }\n                slot.setAttachment(attachment);\n                return;\n            }\n        }\n        throw new Error(\"Slot not found: \" + slotName);\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let ikConstraint = ikConstraints[i];\n            if (ikConstraint.data.name == constraintName)\n                return ikConstraint;\n        }\n        return null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it repeatedly.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            if (constraint.data.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            if (constraint.data.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose as `{ x: number, y: number, width: number, height: number }`.\n     * Note that this method will create temporary objects which can add to garbage collection pressure. Use `getBounds()` if garbage collection is a concern. */\n    getBoundsRect() {\n        let offset = new Vector2();\n        let size = new Vector2();\n        this.getBounds(offset, size);\n        return { x: offset.x, y: offset.y, width: size.x, height: size.y };\n    }\n    /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose.\n     * @param offset An output value, the distance from the skeleton origin to the bottom left corner of the AABB.\n     * @param size An output value, the width and height of the AABB.\n     * @param temp Working memory to temporarily store attachments' computed world vertices. */\n    getBounds(offset, size, temp = new Array(2)) {\n        if (!offset)\n            throw new Error(\"offset cannot be null.\");\n        if (!size)\n            throw new Error(\"size cannot be null.\");\n        let drawOrder = this.drawOrder;\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            if (!slot.bone.active)\n                continue;\n            let verticesLength = 0;\n            let vertices = null;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof RegionAttachment) {\n                verticesLength = 8;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                attachment.computeWorldVertices(slot, vertices, 0, 2);\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                verticesLength = mesh.worldVerticesLength;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                mesh.computeWorldVertices(slot, 0, verticesLength, vertices, 0, 2);\n            }\n            if (vertices) {\n                for (let ii = 0, nn = vertices.length; ii < nn; ii += 2) {\n                    let x = vertices[ii], y = vertices[ii + 1];\n                    minX = Math.min(minX, x);\n                    minY = Math.min(minY, y);\n                    maxX = Math.max(maxX, x);\n                    maxY = Math.max(maxY, y);\n                }\n            }\n        }\n        offset.set(minX, minY);\n        size.set(maxX - minX, maxY - minY);\n    }\n}\nSkeleton.yDown = false;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the current pose values for an {@link Event}.\n *\n * See Timeline {@link Timeline#apply()},\n * AnimationStateListener {@link AnimationStateListener#event()}, and\n * [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class Event {\n    constructor(time, data) {\n        this.intValue = 0;\n        this.floatValue = 0;\n        this.stringValue = null;\n        this.time = 0;\n        this.volume = 0;\n        this.balance = 0;\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.time = time;\n        this.data = data;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvRXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSS9FOzs7O2lGQUlpRjtBQUNqRixNQUFNLE9BQU8sS0FBSztJQVNqQixZQUFhLElBQVksRUFBRSxJQUFlO1FBUDFDLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFDckIsZUFBVSxHQUFXLENBQUMsQ0FBQztRQUN2QixnQkFBVyxHQUFrQixJQUFJLENBQUM7UUFDbEMsU0FBSSxHQUFXLENBQUMsQ0FBQztRQUNqQixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBQ25CLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFHbkIsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbEIsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose values for an {@link Event}.\n *\n * See [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class EventData {\n    constructor(name) {\n        this.intValue = 0;\n        this.floatValue = 0;\n        this.stringValue = null;\n        this.audioPath = null;\n        this.volume = 0;\n        this.balance = 0;\n        this.name = name;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0V2ZW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0U7O3FGQUVxRjtBQUNyRixNQUFNLE9BQU8sU0FBUztJQVNyQixZQUFhLElBQVk7UUFQekIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLGdCQUFXLEdBQWtCLElBQUksQ0FBQztRQUNsQyxjQUFTLEdBQWtCLElBQUksQ0FBQztRQUNoQyxXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBQ25CLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFHbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbEIsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData\";\n/** Stores the setup pose for an {@link IkConstraint}.\n * <p>\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraintData extends ConstraintData {\n    set target(boneData) { this._target = boneData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"BoneData not set.\");\n        else\n            return this._target;\n    }\n    constructor(name) {\n        super(name, 0, false);\n        /** The bones that are constrained by this IK constraint. */\n        this.bones = new Array();\n        /** The bone that is the IK target. */\n        this._target = null;\n        /** Controls the bend direction of the IK bones, either 1 or -1. */\n        this.bendDirection = 1;\n        /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n        this.compress = false;\n        /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n         * and the parent bone has local nonuniform scale, stretch is not applied. */\n        this.stretch = false;\n        /** When true, only a single bone is being constrained, and {@link #getCompress()} or {@link #getStretch()} is used, the bone\n         * is scaled on both the X and Y axes. */\n        this.uniform = false;\n        /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n        this.mix = 1;\n        /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n        this.softness = 0;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWtDb25zdHJhaW50RGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ja0NvbnN0cmFpbnREYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHbEQ7O3FHQUVxRztBQUNyRyxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsY0FBYztJQU1uRCxJQUFXLE1BQU0sQ0FBRSxRQUFrQixJQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNuRSxJQUFXLE1BQU07UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBOztZQUNsRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDMUIsQ0FBQztJQXNCRCxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFoQ3ZCLDREQUE0RDtRQUM1RCxVQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQztRQUU5QixzQ0FBc0M7UUFDOUIsWUFBTyxHQUFvQixJQUFJLENBQUM7UUFPeEMsbUVBQW1FO1FBQ25FLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO1FBRWxCLHlIQUF5SDtRQUN6SCxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCO3FGQUM2RTtRQUM3RSxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRWhCO2lEQUN5QztRQUN6QyxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRWhCLG9HQUFvRztRQUNwRyxRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBRVIsaUdBQWlHO1FBQ2pHLGFBQVEsR0FBRyxDQUFDLENBQUM7SUFJYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose and all of the stateless data for a skeleton.\n *\n * See [Data objects](http://esotericsoftware.com/spine-runtime-architecture#Data-objects) in the Spine Runtimes\n * Guide. */\nexport class SkeletonData {\n    constructor() {\n        /** The skeleton's name, which by default is the name of the skeleton data file, if possible. May be null. */\n        this.name = null;\n        /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n        this.bones = new Array(); // Ordered parents first.\n        /** The skeleton's slots. */\n        this.slots = new Array(); // Setup pose draw order.\n        this.skins = new Array();\n        /** The skeleton's default skin. By default this skin contains all attachments that were not in a skin in Spine.\n         *\n         * See {@link Skeleton#getAttachmentByName()}.\n         * May be null. */\n        this.defaultSkin = null;\n        /** The skeleton's events. */\n        this.events = new Array();\n        /** The skeleton's animations. */\n        this.animations = new Array();\n        /** The skeleton's IK constraints. */\n        this.ikConstraints = new Array();\n        /** The skeleton's transform constraints. */\n        this.transformConstraints = new Array();\n        /** The skeleton's path constraints. */\n        this.pathConstraints = new Array();\n        /** The X coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n        this.x = 0;\n        /** The Y coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n        this.y = 0;\n        /** The width of the skeleton's axis aligned bounding box in the setup pose. */\n        this.width = 0;\n        /** The height of the skeleton's axis aligned bounding box in the setup pose. */\n        this.height = 0;\n        /** The Spine version used to export the skeleton data, or null. */\n        this.version = null;\n        /** The skeleton data hash. This value will change if any of the skeleton data has changed. May be null. */\n        this.hash = null;\n        // Nonessential\n        /** The dopesheet FPS in Spine. Available only when nonessential data was exported. */\n        this.fps = 0;\n        /** The path to the images directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n        this.imagesPath = null;\n        /** The path to the audio directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n        this.audioPath = null;\n    }\n    /** Finds a bone by comparing each bone's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Finds a skin by comparing each skin's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSkin(skinName) {\n        if (!skinName)\n            throw new Error(\"skinName cannot be null.\");\n        let skins = this.skins;\n        for (let i = 0, n = skins.length; i < n; i++) {\n            let skin = skins[i];\n            if (skin.name == skinName)\n                return skin;\n        }\n        return null;\n    }\n    /** Finds an event by comparing each events's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findEvent(eventDataName) {\n        if (!eventDataName)\n            throw new Error(\"eventDataName cannot be null.\");\n        let events = this.events;\n        for (let i = 0, n = events.length; i < n; i++) {\n            let event = events[i];\n            if (event.name == eventDataName)\n                return event;\n        }\n        return null;\n    }\n    /** Finds an animation by comparing each animation's name. It is more efficient to cache the results of this method than to\n     * call it multiple times.\n     * @returns May be null. */\n    findAnimation(animationName) {\n        if (!animationName)\n            throw new Error(\"animationName cannot be null.\");\n        let animations = this.animations;\n        for (let i = 0, n = animations.length; i < n; i++) {\n            let animation = animations[i];\n            if (animation.name == animationName)\n                return animation;\n        }\n        return null;\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            let constraint = ikConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it multiple times.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            let constraint = transformConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        let pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            let constraint = pathConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25EYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1NrZWxldG9uRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFXL0U7OztZQUdZO0FBQ1osTUFBTSxPQUFPLFlBQVk7SUFBekI7UUFFQyw2R0FBNkc7UUFDN0csU0FBSSxHQUFrQixJQUFJLENBQUM7UUFFM0IseUZBQXlGO1FBQ3pGLFVBQUssR0FBRyxJQUFJLEtBQUssRUFBWSxDQUFDLENBQUMseUJBQXlCO1FBRXhELDRCQUE0QjtRQUM1QixVQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQyxDQUFDLHlCQUF5QjtRQUN4RCxVQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVEsQ0FBQztRQUUxQjs7OzBCQUdrQjtRQUNsQixnQkFBVyxHQUFnQixJQUFJLENBQUM7UUFFaEMsNkJBQTZCO1FBQzdCLFdBQU0sR0FBRyxJQUFJLEtBQUssRUFBYSxDQUFDO1FBRWhDLGlDQUFpQztRQUNqQyxlQUFVLEdBQUcsSUFBSSxLQUFLLEVBQWEsQ0FBQztRQUVwQyxxQ0FBcUM7UUFDckMsa0JBQWEsR0FBRyxJQUFJLEtBQUssRUFBb0IsQ0FBQztRQUU5Qyw0Q0FBNEM7UUFDNUMseUJBQW9CLEdBQUcsSUFBSSxLQUFLLEVBQTJCLENBQUM7UUFFNUQsdUNBQXVDO1FBQ3ZDLG9CQUFlLEdBQUcsSUFBSSxLQUFLLEVBQXNCLENBQUM7UUFFbEQsc0ZBQXNGO1FBQ3RGLE1BQUMsR0FBVyxDQUFDLENBQUM7UUFFZCxzRkFBc0Y7UUFDdEYsTUFBQyxHQUFXLENBQUMsQ0FBQztRQUVkLCtFQUErRTtRQUMvRSxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBRWxCLGdGQUFnRjtRQUNoRixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBRW5CLG1FQUFtRTtRQUNuRSxZQUFPLEdBQWtCLElBQUksQ0FBQztRQUU5QiwyR0FBMkc7UUFDM0csU0FB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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MeshAttachment } from \"./attachments/MeshAttachment\";\n/** Stores an entry in the skin consisting of the slot index, name, and attachment **/\nexport class SkinEntry {\n    constructor(slotIndex = 0, name, attachment) {\n        this.slotIndex = slotIndex;\n        this.name = name;\n        this.attachment = attachment;\n    }\n}\n/** Stores attachments by slot index and attachment name.\n *\n * See SkeletonData {@link SkeletonData#defaultSkin}, Skeleton {@link Skeleton#skin}, and\n * [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide. */\nexport class Skin {\n    constructor(name) {\n        this.attachments = new Array();\n        this.bones = Array();\n        this.constraints = new Array();\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n    /** Adds an attachment to the skin for the specified slot index and name. */\n    setAttachment(slotIndex, name, attachment) {\n        if (!attachment)\n            throw new Error(\"attachment cannot be null.\");\n        let attachments = this.attachments;\n        if (slotIndex >= attachments.length)\n            attachments.length = slotIndex + 1;\n        if (!attachments[slotIndex])\n            attachments[slotIndex] = {};\n        attachments[slotIndex][name] = attachment;\n    }\n    /** Adds all attachments, bones, and constraints from the specified skin to this skin. */\n    addSkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n        }\n    }\n    /** Adds all bones and constraints and copies of all attachments from the specified skin to this skin. Mesh attachments are not\n     * copied, instead a new linked mesh is created. The attachment copies can be modified without affecting the originals. */\n    copySkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            if (!attachment.attachment)\n                continue;\n            if (attachment.attachment instanceof MeshAttachment) {\n                attachment.attachment = attachment.attachment.newLinkedMesh();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n            else {\n                attachment.attachment = attachment.attachment.copy();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n        }\n    }\n    /** Returns the attachment for the specified slot index and name, or null. */\n    getAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        return dictionary ? dictionary[name] : null;\n    }\n    /** Removes the attachment in the skin for the specified slot index and name, if any. */\n    removeAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        if (dictionary)\n            delete dictionary[name];\n    }\n    /** Returns all attachments in this skin. */\n    getAttachments() {\n        let entries = new Array();\n        for (var i = 0; i < this.attachments.length; i++) {\n            let slotAttachments = this.attachments[i];\n            if (slotAttachments) {\n                for (let name in slotAttachments) {\n                    let attachment = slotAttachments[name];\n                    if (attachment)\n                        entries.push(new SkinEntry(i, name, attachment));\n                }\n            }\n        }\n        return entries;\n    }\n    /** Returns all attachments in this skin for the specified slot index. */\n    getAttachmentsForSlot(slotIndex, attachments) {\n        let slotAttachments = this.attachments[slotIndex];\n        if (slotAttachments) {\n            for (let name in slotAttachments) {\n                let attachment = slotAttachments[name];\n                if (attachment)\n                    attachments.push(new SkinEntry(slotIndex, name, attachment));\n            }\n        }\n    }\n    /** Clears all attachments, bones, and constraints. */\n    clear() {\n        this.attachments.length = 0;\n        this.bones.length = 0;\n        this.constraints.length = 0;\n    }\n    /** Attach each attachment in this skin if the corresponding attachment in the old skin is currently attached. */\n    attachAll(skeleton, oldSkin) {\n        let slotIndex = 0;\n        for (let i = 0; i < skeleton.slots.length; i++) {\n            let slot = skeleton.slots[i];\n            let slotAttachment = slot.getAttachment();\n            if (slotAttachment && slotIndex < oldSkin.attachments.length) {\n                let dictionary = oldSkin.attachments[slotIndex];\n                for (let key in dictionary) {\n                    let skinAttachment = dictionary[key];\n                    if (slotAttachment == skinAttachment) {\n                        let attachment = this.getAttachment(slotIndex, key);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                        break;\n                    }\n                }\n            }\n            slotIndex++;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFNOUQsc0ZBQXNGO0FBQ3RGLE1BQU0sT0FBTyxTQUFTO0lBQ3JCLFlBQW9CLFlBQW9CLENBQUMsRUFBUyxJQUFZLEVBQVMsVUFBc0I7UUFBekUsY0FBUyxHQUFULFNBQVMsQ0FBWTtRQUFTLFNBQUksR0FBSixJQUFJLENBQVE7UUFBUyxlQUFVLEdBQVYsVUFBVSxDQUFZO0lBQUksQ0FBQztDQUNsRztBQUVEOzs7bUdBR21HO0FBQ25HLE1BQU0sT0FBTyxJQUFJO0lBUWhCLFlBQWEsSUFBWTtRQUp6QixnQkFBVyxHQUFHLElBQUksS0FBSyxFQUF5QixDQUFDO1FBQ2pELFVBQUssR0FBRyxLQUFLLEVBQVksQ0FBQztRQUMxQixnQkFBVyxHQUFHLElBQUksS0FBSyxFQUFrQixDQUFDO1FBR3pDLElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ2xCLENBQUM7SUFFRCw0RUFBNEU7SUFDNUUsYUFBYSxDQUFFLFNBQWlCLEVBQUUsSUFBWSxFQUFFLFVBQXNCO1FBQ3JFLElBQUksQ0FBQyxVQUFVO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1FBQy9ELElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDbkMsSUFBSSxTQUFTLElBQUksV0FBVyxDQUFDLE1BQU07WUFBRSxXQUFXLENBQUMsTUFBTSxHQUFHLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUM7WUFBRSxX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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData\";\n/** Stores the setup pose for a {@link TransformConstraint}.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraintData extends ConstraintData {\n    set target(boneData) { this._target = boneData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"BoneData not set.\");\n        else\n            return this._target;\n    }\n    constructor(name) {\n        super(name, 0, false);\n        /** The bones that will be modified by this transform constraint. */\n        this.bones = new Array();\n        /** The target bone whose world transform will be copied to the constrained bones. */\n        this._target = null;\n        this.mixRotate = 0;\n        this.mixX = 0;\n        this.mixY = 0;\n        this.mixScaleX = 0;\n        this.mixScaleY = 0;\n        this.mixShearY = 0;\n        /** An offset added to the constrained bone rotation. */\n        this.offsetRotation = 0;\n        /** An offset added to the constrained bone X translation. */\n        this.offsetX = 0;\n        /** An offset added to the constrained bone Y translation. */\n        this.offsetY = 0;\n        /** An offset added to the constrained bone scaleX. */\n        this.offsetScaleX = 0;\n        /** An offset added to the constrained bone scaleY. */\n        this.offsetScaleY = 0;\n        /** An offset added to the constrained bone shearY. */\n        this.offsetShearY = 0;\n        this.relative = false;\n        this.local = false;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNmb3JtQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvVHJhbnNmb3JtQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUdsRDs7bUhBRW1IO0FBQ25ILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxjQUFjO0lBTzFELElBQVcsTUFBTSxDQUFFLFFBQWtCLElBQUksSUFBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ25FLElBQVcsTUFBTTtRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU87WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUE7O1lBQ2xELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMxQixDQUFDO0lBOEJELFlBQWEsSUFBWTtRQUN4QixLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQXhDdkIsb0VBQW9FO1FBQ3BFLFVBQUssR0FBRyxJQUFJLEtBQUssRUFBWSxDQUFDO1FBRTlCLHFGQUFxRjtRQUM3RSxZQUFPLEdBQW9CLElBQUksQ0FBQztRQU94QyxjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsU0FBSSxHQUFHLENBQUMsQ0FBQztRQUNULFNBQUksR0FBRyxDQUFDLENBQUM7UUFDVCxjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsY0FBUyxHQUFHLENBQUMsQ0FBQztRQUNkLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFFZCx3REFBd0Q7UUFDeEQsbUJBQWMsR0FBRyxDQUFDLENBQUM7UUFFbkIsNkRBQTZEO1FBQzdELFlBQU8sR0FBRyxDQUFDLENBQUM7UUFFWiw2REFBNkQ7UUFDN0QsWUFBTyxHQUFHLENBQUMsQ0FBQztRQUVaLHNEQUFzRDtRQUN0RCxpQkFBWSxHQUFHLENBQUMsQ0FBQztRQUVqQixzREFBc0Q7UUFDdEQsaUJBQVksR0FBRyxDQUFDLENBQUM7UUFFakIsc0RBQXNEO1FBQ3RELGlCQUFZLEdBQUcsQ0FBQyxDQUFDO1FBRWpCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsVUFBSyxHQUFHLEtBQUssQ0FBQztJQUlkLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment\";\nimport { Pool, Utils } from \"./Utils\";\n/** Collects each visible {@link BoundingBoxAttachment} and computes the world vertices for its polygon. The polygon vertices are\n * provided along with convenience methods for doing hit detection. */\nexport class SkeletonBounds {\n    constructor() {\n        /** The left edge of the axis aligned bounding box. */\n        this.minX = 0;\n        /** The bottom edge of the axis aligned bounding box. */\n        this.minY = 0;\n        /** The right edge of the axis aligned bounding box. */\n        this.maxX = 0;\n        /** The top edge of the axis aligned bounding box. */\n        this.maxY = 0;\n        /** The visible bounding boxes. */\n        this.boundingBoxes = new Array();\n        /** The world vertices for the bounding box polygons. */\n        this.polygons = new Array();\n        this.polygonPool = new Pool(() => {\n            return Utils.newFloatArray(16);\n        });\n    }\n    /** Clears any previous polygons, finds all visible bounding box attachments, and computes the world vertices for each bounding\n     * box's polygon.\n     * @param updateAabb If true, the axis aligned bounding box containing all the polygons is computed. If false, the\n     *           SkeletonBounds AABB methods will always return true. */\n    update(skeleton, updateAabb) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        let boundingBoxes = this.boundingBoxes;\n        let polygons = this.polygons;\n        let polygonPool = this.polygonPool;\n        let slots = skeleton.slots;\n        let slotCount = slots.length;\n        boundingBoxes.length = 0;\n        polygonPool.freeAll(polygons);\n        polygons.length = 0;\n        for (let i = 0; i < slotCount; i++) {\n            let slot = slots[i];\n            if (!slot.bone.active)\n                continue;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof BoundingBoxAttachment) {\n                let boundingBox = attachment;\n                boundingBoxes.push(boundingBox);\n                let polygon = polygonPool.obtain();\n                if (polygon.length != boundingBox.worldVerticesLength) {\n                    polygon = Utils.newFloatArray(boundingBox.worldVerticesLength);\n                }\n                polygons.push(polygon);\n                boundingBox.computeWorldVertices(slot, 0, boundingBox.worldVerticesLength, polygon, 0, 2);\n            }\n        }\n        if (updateAabb) {\n            this.aabbCompute();\n        }\n        else {\n            this.minX = Number.POSITIVE_INFINITY;\n            this.minY = Number.POSITIVE_INFINITY;\n            this.maxX = Number.NEGATIVE_INFINITY;\n            this.maxY = Number.NEGATIVE_INFINITY;\n        }\n    }\n    aabbCompute() {\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++) {\n            let polygon = polygons[i];\n            let vertices = polygon;\n            for (let ii = 0, nn = polygon.length; ii < nn; ii += 2) {\n                let x = vertices[ii];\n                let y = vertices[ii + 1];\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n                maxX = Math.max(maxX, x);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n    /** Returns true if the axis aligned bounding box contains the point. */\n    aabbContainsPoint(x, y) {\n        return x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\n    }\n    /** Returns true if the axis aligned bounding box intersects the line segment. */\n    aabbIntersectsSegment(x1, y1, x2, y2) {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n        if ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\n            return false;\n        let m = (y2 - y1) / (x2 - x1);\n        let y = m * (minX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        y = m * (maxX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        let x = (minY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        x = (maxY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        return false;\n    }\n    /** Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds. */\n    aabbIntersectsSkeleton(bounds) {\n        return this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY && this.maxY > bounds.minY;\n    }\n    /** Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\n     * efficient to only call this method if {@link #aabbContainsPoint(float, float)} returns true. */\n    containsPoint(x, y) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.containsPointPolygon(polygons[i], x, y))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains the point. */\n    containsPointPolygon(polygon, x, y) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let prevIndex = nn - 2;\n        let inside = false;\n        for (let ii = 0; ii < nn; ii += 2) {\n            let vertexY = vertices[ii + 1];\n            let prevY = vertices[prevIndex + 1];\n            if ((vertexY < y && prevY >= y) || (prevY < y && vertexY >= y)) {\n                let vertexX = vertices[ii];\n                if (vertexX + (y - vertexY) / (prevY - vertexY) * (vertices[prevIndex] - vertexX) < x)\n                    inside = !inside;\n            }\n            prevIndex = ii;\n        }\n        return inside;\n    }\n    /** Returns the first bounding box attachment that contains any part of the line segment, or null. When doing many checks, it\n     * is usually more efficient to only call this method if {@link #aabbIntersectsSegment()} returns\n     * true. */\n    intersectsSegment(x1, y1, x2, y2) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.intersectsSegmentPolygon(polygons[i], x1, y1, x2, y2))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains any part of the line segment. */\n    intersectsSegmentPolygon(polygon, x1, y1, x2, y2) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let width12 = x1 - x2, height12 = y1 - y2;\n        let det1 = x1 * y2 - y1 * x2;\n        let x3 = vertices[nn - 2], y3 = vertices[nn - 1];\n        for (let ii = 0; ii < nn; ii += 2) {\n            let x4 = vertices[ii], y4 = vertices[ii + 1];\n            let det2 = x3 * y4 - y3 * x4;\n            let width34 = x3 - x4, height34 = y3 - y4;\n            let det3 = width12 * height34 - height12 * width34;\n            let x = (det1 * width34 - width12 * det2) / det3;\n            if (((x >= x3 && x <= x4) || (x >= x4 && x <= x3)) && ((x >= x1 && x <= x2) || (x >= x2 && x <= x1))) {\n                let y = (det1 * height34 - height12 * det2) / det3;\n                if (((y >= y3 && y <= y4) || (y >= y4 && y <= y3)) && ((y >= y1 && y <= y2) || (y >= y2 && y <= y1)))\n                    return true;\n            }\n            x3 = x4;\n            y3 = y4;\n        }\n        return false;\n    }\n    /** Returns the polygon for the specified bounding box, or null. */\n    getPolygon(boundingBox) {\n        if (!boundingBox)\n            throw new Error(\"boundingBox cannot be null.\");\n        let index = this.boundingBoxes.indexOf(boundingBox);\n        return index == -1 ? null : this.polygons[index];\n    }\n    /** The width of the axis aligned bounding box. */\n    getWidth() {\n        return this.maxX - this.minX;\n    }\n    /** The height of the axis aligned bounding box. */\n    getHeight() {\n        return this.maxY - this.minY;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Pool } from \"./Utils\";\nexport class Triangulator {\n    constructor() {\n        this.convexPolygons = new Array();\n        this.convexPolygonsIndices = new Array();\n        this.indicesArray = new Array();\n        this.isConcaveArray = new Array();\n        this.triangles = new Array();\n        this.polygonPool = new Pool(() => {\n            return new Array();\n        });\n        this.polygonIndicesPool = new Pool(() => {\n            return new Array();\n        });\n    }\n    triangulate(verticesArray) {\n        let vertices = verticesArray;\n        let vertexCount = verticesArray.length >> 1;\n        let indices = this.indicesArray;\n        indices.length = 0;\n        for (let i = 0; i < vertexCount; i++)\n            indices[i] = i;\n        let isConcave = this.isConcaveArray;\n        isConcave.length = 0;\n        for (let i = 0, n = vertexCount; i < n; ++i)\n            isConcave[i] = Triangulator.isConcave(i, vertexCount, vertices, indices);\n        let triangles = this.triangles;\n        triangles.length = 0;\n        while (vertexCount > 3) {\n            // Find ear tip.\n            let previous = vertexCount - 1, i = 0, next = 1;\n            while (true) {\n                outer: if (!isConcave[i]) {\n                    let p1 = indices[previous] << 1, p2 = indices[i] << 1, p3 = indices[next] << 1;\n                    let p1x = vertices[p1], p1y = vertices[p1 + 1];\n                    let p2x = vertices[p2], p2y = vertices[p2 + 1];\n                    let p3x = vertices[p3], p3y = vertices[p3 + 1];\n                    for (let ii = (next + 1) % vertexCount; ii != previous; ii = (ii + 1) % vertexCount) {\n                        if (!isConcave[ii])\n                            continue;\n                        let v = indices[ii] << 1;\n                        let vx = vertices[v], vy = vertices[v + 1];\n                        if (Triangulator.positiveArea(p3x, p3y, p1x, p1y, vx, vy)) {\n                            if (Triangulator.positiveArea(p1x, p1y, p2x, p2y, vx, vy)) {\n                                if (Triangulator.positiveArea(p2x, p2y, p3x, p3y, vx, vy))\n                                    break outer;\n                            }\n                        }\n                    }\n                    break;\n                }\n                if (next == 0) {\n                    do {\n                        if (!isConcave[i])\n                            break;\n                        i--;\n                    } while (i > 0);\n                    break;\n                }\n                previous = i;\n                i = next;\n                next = (next + 1) % vertexCount;\n            }\n            // Cut ear tip.\n            triangles.push(indices[(vertexCount + i - 1) % vertexCount]);\n            triangles.push(indices[i]);\n            triangles.push(indices[(i + 1) % vertexCount]);\n            indices.splice(i, 1);\n            isConcave.splice(i, 1);\n            vertexCount--;\n            let previousIndex = (vertexCount + i - 1) % vertexCount;\n            let nextIndex = i == vertexCount ? 0 : i;\n            isConcave[previousIndex] = Triangulator.isConcave(previousIndex, vertexCount, vertices, indices);\n            isConcave[nextIndex] = Triangulator.isConcave(nextIndex, vertexCount, vertices, indices);\n        }\n        if (vertexCount == 3) {\n            triangles.push(indices[2]);\n            triangles.push(indices[0]);\n            triangles.push(indices[1]);\n        }\n        return triangles;\n    }\n    decompose(verticesArray, triangles) {\n        let vertices = verticesArray;\n        let convexPolygons = this.convexPolygons;\n        this.polygonPool.freeAll(convexPolygons);\n        convexPolygons.length = 0;\n        let convexPolygonsIndices = this.convexPolygonsIndices;\n        this.polygonIndicesPool.freeAll(convexPolygonsIndices);\n        convexPolygonsIndices.length = 0;\n        let polygonIndices = this.polygonIndicesPool.obtain();\n        polygonIndices.length = 0;\n        let polygon = this.polygonPool.obtain();\n        polygon.length = 0;\n        // Merge subsequent triangles if they form a triangle fan.\n        let fanBaseIndex = -1, lastWinding = 0;\n        for (let i = 0, n = triangles.length; i < n; i += 3) {\n            let t1 = triangles[i] << 1, t2 = triangles[i + 1] << 1, t3 = triangles[i + 2] << 1;\n            let x1 = vertices[t1], y1 = vertices[t1 + 1];\n            let x2 = vertices[t2], y2 = vertices[t2 + 1];\n            let x3 = vertices[t3], y3 = vertices[t3 + 1];\n            // If the base of the last triangle is the same as this triangle, check if they form a convex polygon (triangle fan).\n            let merged = false;\n            if (fanBaseIndex == t1) {\n                let o = polygon.length - 4;\n                let winding1 = Triangulator.winding(polygon[o], polygon[o + 1], polygon[o + 2], polygon[o + 3], x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, polygon[0], polygon[1], polygon[2], polygon[3]);\n                if (winding1 == lastWinding && winding2 == lastWinding) {\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(t3);\n                    merged = true;\n                }\n            }\n            // Otherwise make this triangle the new base.\n            if (!merged) {\n                if (polygon.length > 0) {\n                    convexPolygons.push(polygon);\n                    convexPolygonsIndices.push(polygonIndices);\n                }\n                else {\n                    this.polygonPool.free(polygon);\n                    this.polygonIndicesPool.free(polygonIndices);\n                }\n                polygon = this.polygonPool.obtain();\n                polygon.length = 0;\n                polygon.push(x1);\n                polygon.push(y1);\n                polygon.push(x2);\n                polygon.push(y2);\n                polygon.push(x3);\n                polygon.push(y3);\n                polygonIndices = this.polygonIndicesPool.obtain();\n                polygonIndices.length = 0;\n                polygonIndices.push(t1);\n                polygonIndices.push(t2);\n                polygonIndices.push(t3);\n                lastWinding = Triangulator.winding(x1, y1, x2, y2, x3, y3);\n                fanBaseIndex = t1;\n            }\n        }\n        if (polygon.length > 0) {\n            convexPolygons.push(polygon);\n            convexPolygonsIndices.push(polygonIndices);\n        }\n        // Go through the list of polygons and try to merge the remaining triangles with the found triangle fans.\n        for (let i = 0, n = convexPolygons.length; i < n; i++) {\n            polygonIndices = convexPolygonsIndices[i];\n            if (polygonIndices.length == 0)\n                continue;\n            let firstIndex = polygonIndices[0];\n            let lastIndex = polygonIndices[polygonIndices.length - 1];\n            polygon = convexPolygons[i];\n            let o = polygon.length - 4;\n            let prevPrevX = polygon[o], prevPrevY = polygon[o + 1];\n            let prevX = polygon[o + 2], prevY = polygon[o + 3];\n            let firstX = polygon[0], firstY = polygon[1];\n            let secondX = polygon[2], secondY = polygon[3];\n            let winding = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, firstX, firstY);\n            for (let ii = 0; ii < n; ii++) {\n                if (ii == i)\n                    continue;\n                let otherIndices = convexPolygonsIndices[ii];\n                if (otherIndices.length != 3)\n                    continue;\n                let otherFirstIndex = otherIndices[0];\n                let otherSecondIndex = otherIndices[1];\n                let otherLastIndex = otherIndices[2];\n                let otherPoly = convexPolygons[ii];\n                let x3 = otherPoly[otherPoly.length - 2], y3 = otherPoly[otherPoly.length - 1];\n                if (otherFirstIndex != firstIndex || otherSecondIndex != lastIndex)\n                    continue;\n                let winding1 = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, firstX, firstY, secondX, secondY);\n                if (winding1 == winding && winding2 == winding) {\n                    otherPoly.length = 0;\n                    otherIndices.length = 0;\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(otherLastIndex);\n                    prevPrevX = prevX;\n                    prevPrevY = prevY;\n                    prevX = x3;\n                    prevY = y3;\n                    ii = 0;\n                }\n            }\n        }\n        // Remove empty polygons that resulted from the merge step above.\n        for (let i = convexPolygons.length - 1; i >= 0; i--) {\n            polygon = convexPolygons[i];\n            if (polygon.length == 0) {\n                convexPolygons.splice(i, 1);\n                this.polygonPool.free(polygon);\n                polygonIndices = convexPolygonsIndices[i];\n                convexPolygonsIndices.splice(i, 1);\n                this.polygonIndicesPool.free(polygonIndices);\n            }\n        }\n        return convexPolygons;\n    }\n    static isConcave(index, vertexCount, vertices, indices) {\n        let previous = indices[(vertexCount + index - 1) % vertexCount] << 1;\n        let current = indices[index] << 1;\n        let next = indices[(index + 1) % vertexCount] << 1;\n        return !this.positiveArea(vertices[previous], vertices[previous + 1], vertices[current], vertices[current + 1], vertices[next], vertices[next + 1]);\n    }\n    static positiveArea(p1x, p1y, p2x, p2y, p3x, p3y) {\n        return p1x * (p3y - p2y) + p2x * (p1y - p3y) + p3x * (p2y - p1y) >= 0;\n    }\n    static winding(p1x, p1y, p2x, p2y, p3x, p3y) {\n        let px = p2x - p1x, py = p2y - p1y;\n        return p3x * py - p3y * px + px * p1y - p1x * py >= 0 ? 1 : -1;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Triangulator } from \"./Triangulator\";\nimport { Utils } from \"./Utils\";\nexport class SkeletonClipping {\n    constructor() {\n        this.triangulator = new Triangulator();\n        this.clippingPolygon = new Array();\n        this.clipOutput = new Array();\n        this.clippedVertices = new Array();\n        this.clippedTriangles = new Array();\n        this.scratch = new Array();\n        this.clipAttachment = null;\n        this.clippingPolygons = null;\n    }\n    clipStart(slot, clip) {\n        if (this.clipAttachment)\n            return 0;\n        this.clipAttachment = clip;\n        let n = clip.worldVerticesLength;\n        let vertices = Utils.setArraySize(this.clippingPolygon, n);\n        clip.computeWorldVertices(slot, 0, n, vertices, 0, 2);\n        let clippingPolygon = this.clippingPolygon;\n        SkeletonClipping.makeClockwise(clippingPolygon);\n        let clippingPolygons = this.clippingPolygons = this.triangulator.decompose(clippingPolygon, this.triangulator.triangulate(clippingPolygon));\n        for (let i = 0, n = clippingPolygons.length; i < n; i++) {\n            let polygon = clippingPolygons[i];\n            SkeletonClipping.makeClockwise(polygon);\n            polygon.push(polygon[0]);\n            polygon.push(polygon[1]);\n        }\n        return clippingPolygons.length;\n    }\n    clipEndWithSlot(slot) {\n        if (this.clipAttachment && this.clipAttachment.endSlot == slot.data)\n            this.clipEnd();\n    }\n    clipEnd() {\n        if (!this.clipAttachment)\n            return;\n        this.clipAttachment = null;\n        this.clippingPolygons = null;\n        this.clippedVertices.length = 0;\n        this.clippedTriangles.length = 0;\n        this.clippingPolygon.length = 0;\n    }\n    isClipping() {\n        return this.clipAttachment != null;\n    }\n    clipTriangles(vertices, verticesLength, triangles, trianglesLength, uvs, light, dark, twoColor) {\n        let clipOutput = this.clipOutput, clippedVertices = this.clippedVertices;\n        let clippedTriangles = this.clippedTriangles;\n        let polygons = this.clippingPolygons;\n        let polygonsCount = polygons.length;\n        let vertexSize = twoColor ? 12 : 8;\n        let index = 0;\n        clippedVertices.length = 0;\n        clippedTriangles.length = 0;\n        outer: for (let i = 0; i < trianglesLength; i += 3) {\n            let vertexOffset = triangles[i] << 1;\n            let x1 = vertices[vertexOffset], y1 = vertices[vertexOffset + 1];\n            let u1 = uvs[vertexOffset], v1 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 1] << 1;\n            let x2 = vertices[vertexOffset], y2 = vertices[vertexOffset + 1];\n            let u2 = uvs[vertexOffset], v2 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 2] << 1;\n            let x3 = vertices[vertexOffset], y3 = vertices[vertexOffset + 1];\n            let u3 = uvs[vertexOffset], v3 = uvs[vertexOffset + 1];\n            for (let p = 0; p < polygonsCount; p++) {\n                let s = clippedVertices.length;\n                if (this.clip(x1, y1, x2, y2, x3, y3, polygons[p], clipOutput)) {\n                    let clipOutputLength = clipOutput.length;\n                    if (clipOutputLength == 0)\n                        continue;\n                    let d0 = y2 - y3, d1 = x3 - x2, d2 = x1 - x3, d4 = y3 - y1;\n                    let d = 1 / (d0 * d2 + d1 * (y1 - y3));\n                    let clipOutputCount = clipOutputLength >> 1;\n                    let clipOutputItems = this.clipOutput;\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + clipOutputCount * vertexSize);\n                    for (let ii = 0; ii < clipOutputLength; ii += 2) {\n                        let x = clipOutputItems[ii], y = clipOutputItems[ii + 1];\n                        clippedVerticesItems[s] = x;\n                        clippedVerticesItems[s + 1] = y;\n                        clippedVerticesItems[s + 2] = light.r;\n                        clippedVerticesItems[s + 3] = light.g;\n                        clippedVerticesItems[s + 4] = light.b;\n                        clippedVerticesItems[s + 5] = light.a;\n                        let c0 = x - x3, c1 = y - y3;\n                        let a = (d0 * c0 + d1 * c1) * d;\n                        let b = (d4 * c0 + d2 * c1) * d;\n                        let c = 1 - a - b;\n                        clippedVerticesItems[s + 6] = u1 * a + u2 * b + u3 * c;\n                        clippedVerticesItems[s + 7] = v1 * a + v2 * b + v3 * c;\n                        if (twoColor) {\n                            clippedVerticesItems[s + 8] = dark.r;\n                            clippedVerticesItems[s + 9] = dark.g;\n                            clippedVerticesItems[s + 10] = dark.b;\n                            clippedVerticesItems[s + 11] = dark.a;\n                        }\n                        s += vertexSize;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3 * (clipOutputCount - 2));\n                    clipOutputCount--;\n                    for (let ii = 1; ii < clipOutputCount; ii++) {\n                        clippedTrianglesItems[s] = index;\n                        clippedTrianglesItems[s + 1] = (index + ii);\n                        clippedTrianglesItems[s + 2] = (index + ii + 1);\n                        s += 3;\n                    }\n                    index += clipOutputCount + 1;\n                }\n                else {\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + 3 * vertexSize);\n                    clippedVerticesItems[s] = x1;\n                    clippedVerticesItems[s + 1] = y1;\n                    clippedVerticesItems[s + 2] = light.r;\n                    clippedVerticesItems[s + 3] = light.g;\n                    clippedVerticesItems[s + 4] = light.b;\n                    clippedVerticesItems[s + 5] = light.a;\n                    if (!twoColor) {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = x2;\n                        clippedVerticesItems[s + 9] = y2;\n                        clippedVerticesItems[s + 10] = light.r;\n                        clippedVerticesItems[s + 11] = light.g;\n                        clippedVerticesItems[s + 12] = light.b;\n                        clippedVerticesItems[s + 13] = light.a;\n                        clippedVerticesItems[s + 14] = u2;\n                        clippedVerticesItems[s + 15] = v2;\n                        clippedVerticesItems[s + 16] = x3;\n                        clippedVerticesItems[s + 17] = y3;\n                        clippedVerticesItems[s + 18] = light.r;\n                        clippedVerticesItems[s + 19] = light.g;\n                        clippedVerticesItems[s + 20] = light.b;\n                        clippedVerticesItems[s + 21] = light.a;\n                        clippedVerticesItems[s + 22] = u3;\n                        clippedVerticesItems[s + 23] = v3;\n                    }\n                    else {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = dark.r;\n                        clippedVerticesItems[s + 9] = dark.g;\n                        clippedVerticesItems[s + 10] = dark.b;\n                        clippedVerticesItems[s + 11] = dark.a;\n                        clippedVerticesItems[s + 12] = x2;\n                        clippedVerticesItems[s + 13] = y2;\n                        clippedVerticesItems[s + 14] = light.r;\n                        clippedVerticesItems[s + 15] = light.g;\n                        clippedVerticesItems[s + 16] = light.b;\n                        clippedVerticesItems[s + 17] = light.a;\n                        clippedVerticesItems[s + 18] = u2;\n                        clippedVerticesItems[s + 19] = v2;\n                        clippedVerticesItems[s + 20] = dark.r;\n                        clippedVerticesItems[s + 21] = dark.g;\n                        clippedVerticesItems[s + 22] = dark.b;\n                        clippedVerticesItems[s + 23] = dark.a;\n                        clippedVerticesItems[s + 24] = x3;\n                        clippedVerticesItems[s + 25] = y3;\n                        clippedVerticesItems[s + 26] = light.r;\n                        clippedVerticesItems[s + 27] = light.g;\n                        clippedVerticesItems[s + 28] = light.b;\n                        clippedVerticesItems[s + 29] = light.a;\n                        clippedVerticesItems[s + 30] = u3;\n                        clippedVerticesItems[s + 31] = v3;\n                        clippedVerticesItems[s + 32] = dark.r;\n                        clippedVerticesItems[s + 33] = dark.g;\n                        clippedVerticesItems[s + 34] = dark.b;\n                        clippedVerticesItems[s + 35] = dark.a;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3);\n                    clippedTrianglesItems[s] = index;\n                    clippedTrianglesItems[s + 1] = (index + 1);\n                    clippedTrianglesItems[s + 2] = (index + 2);\n                    index += 3;\n                    continue outer;\n                }\n            }\n        }\n    }\n    /** Clips the input triangle against the convex, clockwise clipping area. If the triangle lies entirely within the clipping\n     * area, false is returned. The clipping area must duplicate the first vertex at the end of the vertices list. */\n    clip(x1, y1, x2, y2, x3, y3, clippingArea, output) {\n        let originalOutput = output;\n        let clipped = false;\n        // Avoid copy at the end.\n        let input;\n        if (clippingArea.length % 4 >= 2) {\n            input = output;\n            output = this.scratch;\n        }\n        else\n            input = this.scratch;\n        input.length = 0;\n        input.push(x1);\n        input.push(y1);\n        input.push(x2);\n        input.push(y2);\n        input.push(x3);\n        input.push(y3);\n        input.push(x1);\n        input.push(y1);\n        output.length = 0;\n        let clippingVertices = clippingArea;\n        let clippingVerticesLast = clippingArea.length - 4;\n        for (let i = 0;; i += 2) {\n            let edgeX = clippingVertices[i], edgeY = clippingVertices[i + 1];\n            let edgeX2 = clippingVertices[i + 2], edgeY2 = clippingVertices[i + 3];\n            let deltaX = edgeX - edgeX2, deltaY = edgeY - edgeY2;\n            let inputVertices = input;\n            let inputVerticesLength = input.length - 2, outputStart = output.length;\n            for (let ii = 0; ii < inputVerticesLength; ii += 2) {\n                let inputX = inputVertices[ii], inputY = inputVertices[ii + 1];\n                let inputX2 = inputVertices[ii + 2], inputY2 = inputVertices[ii + 3];\n                let side2 = deltaX * (inputY2 - edgeY2) - deltaY * (inputX2 - edgeX2) > 0;\n                if (deltaX * (inputY - edgeY2) - deltaY * (inputX - edgeX2) > 0) {\n                    if (side2) { // v1 inside, v2 inside\n                        output.push(inputX2);\n                        output.push(inputY2);\n                        continue;\n                    }\n                    // v1 inside, v2 outside\n                    let c0 = inputY2 - inputY, c2 = inputX2 - inputX;\n                    let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n                    if (Math.abs(s) > 0.000001) {\n                        let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n                        output.push(edgeX + (edgeX2 - edgeX) * ua);\n                        output.push(edgeY + (edgeY2 - edgeY) * ua);\n                    }\n                    else {\n                        output.push(edgeX);\n                        output.push(edgeY);\n                    }\n                }\n                else if (side2) { // v1 outside, v2 inside\n                    let c0 = inputY2 - inputY, c2 = inputX2 - inputX;\n                    let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n                    if (Math.abs(s) > 0.000001) {\n                        let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n                        output.push(edgeX + (edgeX2 - edgeX) * ua);\n                        output.push(edgeY + (edgeY2 - edgeY) * ua);\n                    }\n                    else {\n                        output.push(edgeX);\n                        output.push(edgeY);\n                    }\n                    output.push(inputX2);\n                    output.push(inputY2);\n                }\n                clipped = true;\n            }\n            if (outputStart == output.length) { // All edges outside.\n                originalOutput.length = 0;\n                return true;\n            }\n            output.push(output[0]);\n            output.push(output[1]);\n            if (i == clippingVerticesLast)\n                break;\n            let temp = output;\n            output = input;\n            output.length = 0;\n            input = temp;\n        }\n        if (originalOutput != output) {\n            originalOutput.length = 0;\n            for (let i = 0, n = output.length - 2; i < n; i++)\n                originalOutput[i] = output[i];\n        }\n        else\n            originalOutput.length = originalOutput.length - 2;\n        return clipped;\n    }\n    static makeClockwise(polygon) {\n        let vertices = polygon;\n        let verticeslength = polygon.length;\n        let area = vertices[verticeslength - 2] * vertices[1] - vertices[0] * vertices[verticeslength - 1], p1x = 0, p1y = 0, p2x = 0, p2y = 0;\n        for (let i = 0, n = verticeslength - 3; i < n; i += 2) {\n            p1x = vertices[i];\n            p1y = vertices[i + 1];\n            p2x = vertices[i + 2];\n            p2y = vertices[i + 3];\n            area += p1x * p2y - p2x * p1y;\n        }\n        if (area < 0)\n            return;\n        for (let i = 0, lastX = verticeslength - 2, n = verticeslength >> 1; i < n; i += 2) {\n            let x = vertices[i], y = vertices[i + 1];\n            let other = lastX - i;\n            vertices[i] = vertices[other];\n            vertices[i + 1] = vertices[other + 1];\n            vertices[other] = x;\n            vertices[other + 1] = y;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25DbGlwcGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2VsZXRvbkNsaXBwaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUkvRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLEtBQUssRUFBMEIsTUFBTSxTQUFTLENBQUM7QUFFeEQsTUFBTSxPQUFPLGdCQUFnQjtJQUE3QjtRQUNTLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNsQyxvQkFBZSxHQUFHLElBQUksS0FBSyxFQUFVLENBQUM7UUFDdEMsZUFBVSxHQUFHLElBQUksS0FBSyxFQUFVLENBQUM7UUFDekMsb0JBQWUsR0FBRyxJQUFJLEtBQUssRUFBVSxDQUFDO1FBQ3RDLHFCQUFnQixHQUFHLElBQUksS0FBSyxFQUFVLENBQUM7UUFDL0IsWUFBTyxHQUFHLElBQUksS0FBSyxFQUFVLENBQUM7UUFFOUIsbUJBQWMsR0FBOEIsSUFBSSxDQUFDO1FBQ2pELHFCQUFnQixHQUFnQyxJQUFJLENBQUM7SUFrVDlELENBQUM7SUFoVEEsU0FBUyxDQUFFLElBQVUsRUFBRSxJQUF3QjtRQUM5QyxJQUFJLElBQUksQ0FBQyxjQUFjO1lBQUUsT0FBTyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7UUFFM0IsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDO1FBQ2pDLElBQUksUUFBUSxHQUFHLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN0RCxJQUFJ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QW9CLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDakMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFFakMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDakMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDakMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7d0JBQ3ZDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO3dCQUN2QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQzt3QkFDdkMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7d0JBQ3ZDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7d0JBQ2xDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7d0JBRWxDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7d0JBQ2xDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7d0JBQ2xDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO3dCQUN2QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQzt3QkFDdkMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7d0JBQ3ZDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO3dCQUN2QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO3dCQUNsQyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO3FCQUNsQzt5QkFBTTt3QkFDTixvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO3dCQUNqQyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO3dCQUNqQyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFDckMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7d0JBQ3JDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO3dCQUN0QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFFdEMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDbEMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDbEMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7d0JBQ3ZDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO3dCQUN2QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQzt3QkFDdkMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7d0JBQ3ZDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7d0JBQ2xDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7d0JBQ2xDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO3dCQUN0QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFDdEMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7d0JBQ3RDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO3dCQUV0QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO3dCQUNsQyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO3dCQUNsQyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQzt3QkFDdkMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7d0JBQ3ZDLG9CQUFvQixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO3dCQUN2QyxvQkFBb0IsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQzt3QkFDdkMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDbEMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDbEMsb0JBQW9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7d0JBQ3RDLG9CQUFvQixDQUFD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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, AttachmentTimeline, RGBATimeline, RGBTimeline, AlphaTimeline, RGBA2Timeline, RGB2Timeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline } from \"./Animation\";\nimport { BoneData, TransformMode } from \"./BoneData\";\nimport { EventData } from \"./EventData\";\nimport { Event } from \"./Event\";\nimport { IkConstraintData } from \"./IkConstraintData\";\nimport { PathConstraintData, PositionMode, SpacingMode, RotateMode } from \"./PathConstraintData\";\nimport { SkeletonData } from \"./SkeletonData\";\nimport { Skin } from \"./Skin\";\nimport { SlotData, BlendMode } from \"./SlotData\";\nimport { TransformConstraintData } from \"./TransformConstraintData\";\nimport { Utils, Color } from \"./Utils\";\nimport { Sequence, SequenceMode } from \"./attachments/Sequence\";\nimport { SequenceTimeline } from \"./Animation\";\n/** Loads skeleton data in the Spine JSON format.\n *\n * See [Spine JSON format](http://esotericsoftware.com/spine-json-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonJson {\n    constructor(attachmentLoader) {\n        /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n         * runtime than were used in Spine.\n         *\n         * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n        this.scale = 1;\n        this.linkedMeshes = new Array();\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(json) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        let root = typeof (json) === \"string\" ? JSON.parse(json) : json;\n        // Skeleton\n        let skeletonMap = root.skeleton;\n        if (skeletonMap) {\n            skeletonData.hash = skeletonMap.hash;\n            skeletonData.version = skeletonMap.spine;\n            skeletonData.x = skeletonMap.x;\n            skeletonData.y = skeletonMap.y;\n            skeletonData.width = skeletonMap.width;\n            skeletonData.height = skeletonMap.height;\n            skeletonData.fps = skeletonMap.fps;\n            skeletonData.imagesPath = skeletonMap.images;\n        }\n        // Bones\n        if (root.bones) {\n            for (let i = 0; i < root.bones.length; i++) {\n                let boneMap = root.bones[i];\n                let parent = null;\n                let parentName = getValue(boneMap, \"parent\", null);\n                if (parentName)\n                    parent = skeletonData.findBone(parentName);\n                let data = new BoneData(skeletonData.bones.length, boneMap.name, parent);\n                data.length = getValue(boneMap, \"length\", 0) * scale;\n                data.x = getValue(boneMap, \"x\", 0) * scale;\n                data.y = getValue(boneMap, \"y\", 0) * scale;\n                data.rotation = getValue(boneMap, \"rotation\", 0);\n                data.scaleX = getValue(boneMap, \"scaleX\", 1);\n                data.scaleY = getValue(boneMap, \"scaleY\", 1);\n                data.shearX = getValue(boneMap, \"shearX\", 0);\n                data.shearY = getValue(boneMap, \"shearY\", 0);\n                data.transformMode = Utils.enumValue(TransformMode, getValue(boneMap, \"transform\", \"Normal\"));\n                data.skinRequired = getValue(boneMap, \"skin\", false);\n                let color = getValue(boneMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                skeletonData.bones.push(data);\n            }\n        }\n        // Slots.\n        if (root.slots) {\n            for (let i = 0; i < root.slots.length; i++) {\n                let slotMap = root.slots[i];\n                let boneData = skeletonData.findBone(slotMap.bone);\n                if (!boneData)\n                    throw new Error(`Couldn't find bone ${slotMap.bone} for slot ${slotMap.name}`);\n                let data = new SlotData(skeletonData.slots.length, slotMap.name, boneData);\n                let color = getValue(slotMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                let dark = getValue(slotMap, \"dark\", null);\n                if (dark)\n                    data.darkColor = Color.fromString(dark);\n                data.attachmentName = getValue(slotMap, \"attachment\", null);\n                data.blendMode = Utils.enumValue(BlendMode, getValue(slotMap, \"blend\", \"normal\"));\n                skeletonData.slots.push(data);\n            }\n        }\n        // IK constraints\n        if (root.ik) {\n            for (let i = 0; i < root.ik.length; i++) {\n                let constraintMap = root.ik[i];\n                let data = new IkConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let bone = skeletonData.findBone(constraintMap.bones[ii]);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${constraintMap.bones[ii]} for IK constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let target = skeletonData.findBone(constraintMap.target);\n                ;\n                if (!target)\n                    throw new Error(`Couldn't find target bone ${constraintMap.target} for IK constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.mix = getValue(constraintMap, \"mix\", 1);\n                data.softness = getValue(constraintMap, \"softness\", 0) * scale;\n                data.bendDirection = getValue(constraintMap, \"bendPositive\", true) ? 1 : -1;\n                data.compress = getValue(constraintMap, \"compress\", false);\n                data.stretch = getValue(constraintMap, \"stretch\", false);\n                data.uniform = getValue(constraintMap, \"uniform\", false);\n                skeletonData.ikConstraints.push(data);\n            }\n        }\n        // Transform constraints.\n        if (root.transform) {\n            for (let i = 0; i < root.transform.length; i++) {\n                let constraintMap = root.transform[i];\n                let data = new TransformConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let boneName = constraintMap.bones[ii];\n                    let bone = skeletonData.findBone(boneName);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${boneName} for transform constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let targetName = constraintMap.target;\n                let target = skeletonData.findBone(targetName);\n                if (!target)\n                    throw new Error(`Couldn't find target bone ${targetName} for transform constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.local = getValue(constraintMap, \"local\", false);\n                data.relative = getValue(constraintMap, \"relative\", false);\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.offsetX = getValue(constraintMap, \"x\", 0) * scale;\n                data.offsetY = getValue(constraintMap, \"y\", 0) * scale;\n                data.offsetScaleX = getValue(constraintMap, \"scaleX\", 0);\n                data.offsetScaleY = getValue(constraintMap, \"scaleY\", 0);\n                data.offsetShearY = getValue(constraintMap, \"shearY\", 0);\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                data.mixScaleX = getValue(constraintMap, \"mixScaleX\", 1);\n                data.mixScaleY = getValue(constraintMap, \"mixScaleY\", data.mixScaleX);\n                data.mixShearY = getValue(constraintMap, \"mixShearY\", 1);\n                skeletonData.transformConstraints.push(data);\n            }\n        }\n        // Path constraints.\n        if (root.path) {\n            for (let i = 0; i < root.path.length; i++) {\n                let constraintMap = root.path[i];\n                let data = new PathConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let boneName = constraintMap.bones[ii];\n                    let bone = skeletonData.findBone(boneName);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${boneName} for path constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let targetName = constraintMap.target;\n                let target = skeletonData.findSlot(targetName);\n                if (!target)\n                    throw new Error(`Couldn't find target slot ${targetName} for path constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.positionMode = Utils.enumValue(PositionMode, getValue(constraintMap, \"positionMode\", \"Percent\"));\n                data.spacingMode = Utils.enumValue(SpacingMode, getValue(constraintMap, \"spacingMode\", \"Length\"));\n                data.rotateMode = Utils.enumValue(RotateMode, getValue(constraintMap, \"rotateMode\", \"Tangent\"));\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.position = getValue(constraintMap, \"position\", 0);\n                if (data.positionMode == PositionMode.Fixed)\n                    data.position *= scale;\n                data.spacing = getValue(constraintMap, \"spacing\", 0);\n                if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                    data.spacing *= scale;\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                skeletonData.pathConstraints.push(data);\n            }\n        }\n        // Skins.\n        if (root.skins) {\n            for (let i = 0; i < root.skins.length; i++) {\n                let skinMap = root.skins[i];\n                let skin = new Skin(skinMap.name);\n                if (skinMap.bones) {\n                    for (let ii = 0; ii < skinMap.bones.length; ii++) {\n                        let boneName = skinMap.bones[ii];\n                        let bone = skeletonData.findBone(boneName);\n                        if (!bone)\n                            throw new Error(`Couldn't find bone ${boneName} for skin ${skinMap.name}.`);\n                        skin.bones.push(bone);\n                    }\n                }\n                if (skinMap.ik) {\n                    for (let ii = 0; ii < skinMap.ik.length; ii++) {\n                        let constraintName = skinMap.ik[ii];\n                        let constraint = skeletonData.findIkConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find IK constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                if (skinMap.transform) {\n                    for (let ii = 0; ii < skinMap.transform.length; ii++) {\n                        let constraintName = skinMap.transform[ii];\n                        let constraint = skeletonData.findTransformConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find transform constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                if (skinMap.path) {\n                    for (let ii = 0; ii < skinMap.path.length; ii++) {\n                        let constraintName = skinMap.path[ii];\n                        let constraint = skeletonData.findPathConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find path constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                for (let slotName in skinMap.attachments) {\n                    let slot = skeletonData.findSlot(slotName);\n                    if (!slot)\n                        throw new Error(`Couldn't find slot ${slotName} for skin ${skinMap.name}.`);\n                    let slotMap = skinMap.attachments[slotName];\n                    for (let entryName in slotMap) {\n                        let attachment = this.readAttachment(slotMap[entryName], skin, slot.index, entryName, skeletonData);\n                        if (attachment)\n                            skin.setAttachment(slot.index, entryName, attachment);\n                    }\n                }\n                skeletonData.skins.push(skin);\n                if (skin.name == \"default\")\n                    skeletonData.defaultSkin = skin;\n            }\n        }\n        // Linked meshes.\n        for (let i = 0, n = this.linkedMeshes.length; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n            if (!skin)\n                throw new Error(`Skin not found: ${linkedMesh.skin}`);\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            if (!parent)\n                throw new Error(`Parent mesh not found: ${linkedMesh.parent}`);\n            linkedMesh.mesh.timelineAttachment = linkedMesh.inheritTimeline ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            if (linkedMesh.mesh.region != null)\n                linkedMesh.mesh.updateRegion();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        if (root.events) {\n            for (let eventName in root.events) {\n                let eventMap = root.events[eventName];\n                let data = new EventData(eventName);\n                data.intValue = getValue(eventMap, \"int\", 0);\n                data.floatValue = getValue(eventMap, \"float\", 0);\n                data.stringValue = getValue(eventMap, \"string\", \"\");\n                data.audioPath = getValue(eventMap, \"audio\", null);\n                if (data.audioPath) {\n                    data.volume = getValue(eventMap, \"volume\", 1);\n                    data.balance = getValue(eventMap, \"balance\", 0);\n                }\n                skeletonData.events.push(data);\n            }\n        }\n        // Animations.\n        if (root.animations) {\n            for (let animationName in root.animations) {\n                let animationMap = root.animations[animationName];\n                this.readAnimation(animationMap, animationName, skeletonData);\n            }\n        }\n        return skeletonData;\n    }\n    readAttachment(map, skin, slotIndex, name, skeletonData) {\n        let scale = this.scale;\n        name = getValue(map, \"name\", name);\n        switch (getValue(map, \"type\", \"region\")) {\n            case \"region\": {\n                let path = getValue(map, \"path\", name);\n                let sequence = this.readSequence(getValue(map, \"sequence\", null));\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path, sequence);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = getValue(map, \"x\", 0) * scale;\n                region.y = getValue(map, \"y\", 0) * scale;\n                region.scaleX = getValue(map, \"scaleX\", 1);\n                region.scaleY = getValue(map, \"scaleY\", 1);\n                region.rotation = getValue(map, \"rotation\", 0);\n                region.width = map.width * scale;\n                region.height = map.height * scale;\n                region.sequence = sequence;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    region.color.setFromString(color);\n                if (region.region != null)\n                    region.updateRegion();\n                return region;\n            }\n            case \"boundingbox\": {\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                this.readVertices(map, box, map.vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    box.color.setFromString(color);\n                return box;\n            }\n            case \"mesh\":\n            case \"linkedmesh\": {\n                let path = getValue(map, \"path\", name);\n                let sequence = this.readSequence(getValue(map, \"sequence\", null));\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    mesh.color.setFromString(color);\n                mesh.width = getValue(map, \"width\", 0) * scale;\n                mesh.height = getValue(map, \"height\", 0) * scale;\n                mesh.sequence = sequence;\n                let parent = getValue(map, \"parent\", null);\n                if (parent) {\n                    this.linkedMeshes.push(new LinkedMesh(mesh, getValue(map, \"skin\", null), slotIndex, parent, getValue(map, \"timelines\", true)));\n                    return mesh;\n                }\n                let uvs = map.uvs;\n                this.readVertices(map, mesh, uvs.length);\n                mesh.triangles = map.triangles;\n                mesh.regionUVs = uvs;\n                if (mesh.region != null)\n                    mesh.updateRegion();\n                mesh.edges = getValue(map, \"edges\", null);\n                mesh.hullLength = getValue(map, \"hull\", 0) * 2;\n                return mesh;\n            }\n            case \"path\": {\n                let path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = getValue(map, \"closed\", false);\n                path.constantSpeed = getValue(map, \"constantSpeed\", true);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, path, vertexCount << 1);\n                let lengths = Utils.newArray(vertexCount / 3, 0);\n                for (let i = 0; i < map.lengths.length; i++)\n                    lengths[i] = map.lengths[i] * scale;\n                path.lengths = lengths;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    path.color.setFromString(color);\n                return path;\n            }\n            case \"point\": {\n                let point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = getValue(map, \"x\", 0) * scale;\n                point.y = getValue(map, \"y\", 0) * scale;\n                point.rotation = getValue(map, \"rotation\", 0);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    point.color.setFromString(color);\n                return point;\n            }\n            case \"clipping\": {\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                let end = getValue(map, \"end\", null);\n                if (end)\n                    clip.endSlot = skeletonData.findSlot(end);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, clip, vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    clip.color.setFromString(color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readSequence(map) {\n        if (map == null)\n            return null;\n        let sequence = new Sequence(getValue(map, \"count\", 0));\n        sequence.start = getValue(map, \"start\", 1);\n        sequence.digits = getValue(map, \"digits\", 0);\n        sequence.setupIndex = getValue(map, \"setup\", 0);\n        return sequence;\n    }\n    readVertices(map, attachment, verticesLength) {\n        let scale = this.scale;\n        attachment.worldVerticesLength = verticesLength;\n        let vertices = map.vertices;\n        if (verticesLength == vertices.length) {\n            let scaledVertices = Utils.toFloatArray(vertices);\n            if (scale != 1) {\n                for (let i = 0, n = vertices.length; i < n; i++)\n                    scaledVertices[i] *= scale;\n            }\n            attachment.vertices = scaledVertices;\n            return;\n        }\n        let weights = new Array();\n        let bones = new Array();\n        for (let i = 0, n = vertices.length; i < n;) {\n            let boneCount = vertices[i++];\n            bones.push(boneCount);\n            for (let nn = i + boneCount * 4; i < nn; i += 4) {\n                bones.push(vertices[i]);\n                weights.push(vertices[i + 1] * scale);\n                weights.push(vertices[i + 2] * scale);\n                weights.push(vertices[i + 3]);\n            }\n        }\n        attachment.bones = bones;\n        attachment.vertices = Utils.toFloatArray(weights);\n    }\n    readAnimation(map, name, skeletonData) {\n        let scale = this.scale;\n        let timelines = new Array();\n        // Slot timelines.\n        if (map.slots) {\n            for (let slotName in map.slots) {\n                let slotMap = map.slots[slotName];\n                let slot = skeletonData.findSlot(slotName);\n                if (!slot)\n                    throw new Error(\"Slot not found: \" + slotName);\n                let slotIndex = slot.index;\n                for (let timelineName in slotMap) {\n                    let timelineMap = slotMap[timelineName];\n                    if (!timelineMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName == \"attachment\") {\n                        let timeline = new AttachmentTimeline(frames, slotIndex);\n                        for (let frame = 0; frame < frames; frame++) {\n                            let keyMap = timelineMap[frame];\n                            timeline.setFrame(frame, getValue(keyMap, \"time\", 0), getValue(keyMap, \"name\", null));\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgba\") {\n                        let timeline = new RGBATimeline(frames, frames << 2, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb\") {\n                        let timeline = new RGBTimeline(frames, frames * 3, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"alpha\") {\n                        timelines.push(readTimeline1(timelineMap, new AlphaTimeline(frames, frames, slotIndex), 0, 1));\n                    }\n                    else if (timelineName == \"rgba2\") {\n                        let timeline = new RGBA2Timeline(frames, frames * 7, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 6, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb2\") {\n                        let timeline = new RGB2Timeline(frames, frames * 6, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        if (map.bones) {\n            for (let boneName in map.bones) {\n                let boneMap = map.bones[boneName];\n                let bone = skeletonData.findBone(boneName);\n                if (!bone)\n                    throw new Error(\"Bone not found: \" + boneName);\n                let boneIndex = bone.index;\n                for (let timelineName in boneMap) {\n                    let timelineMap = boneMap[timelineName];\n                    let frames = timelineMap.length;\n                    if (frames == 0)\n                        continue;\n                    if (timelineName === \"rotate\") {\n                        timelines.push(readTimeline1(timelineMap, new RotateTimeline(frames, frames, boneIndex), 0, 1));\n                    }\n                    else if (timelineName === \"translate\") {\n                        let timeline = new TranslateTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, scale));\n                    }\n                    else if (timelineName === \"translatex\") {\n                        let timeline = new TranslateXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"translatey\") {\n                        let timeline = new TranslateYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"scale\") {\n                        let timeline = new ScaleTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 1, 1));\n                    }\n                    else if (timelineName === \"scalex\") {\n                        let timeline = new ScaleXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"scaley\") {\n                        let timeline = new ScaleYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"shear\") {\n                        let timeline = new ShearTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, 1));\n                    }\n                    else if (timelineName === \"shearx\") {\n                        let timeline = new ShearXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                    else if (timelineName === \"sheary\") {\n                        let timeline = new ShearYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                }\n            }\n        }\n        // IK constraint timelines.\n        if (map.ik) {\n            for (let constraintName in map.ik) {\n                let constraintMap = map.ik[constraintName];\n                let keyMap = constraintMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findIkConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"IK Constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.ikConstraints.indexOf(constraint);\n                let timeline = new IkConstraintTimeline(constraintMap.length, constraintMap.length << 1, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mix = getValue(keyMap, \"mix\", 1);\n                let softness = getValue(keyMap, \"softness\", 0) * scale;\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mix, softness, getValue(keyMap, \"bendPositive\", true) ? 1 : -1, getValue(keyMap, \"compress\", false), getValue(keyMap, \"stretch\", false));\n                    let nextMap = constraintMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mix2 = getValue(nextMap, \"mix\", 1);\n                    let softness2 = getValue(nextMap, \"softness\", 0) * scale;\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mix, mix2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, softness, softness2, scale);\n                    }\n                    time = time2;\n                    mix = mix2;\n                    softness = softness2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Transform constraint timelines.\n        if (map.transform) {\n            for (let constraintName in map.transform) {\n                let timelineMap = map.transform[constraintName];\n                let keyMap = timelineMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findTransformConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"Transform constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.transformConstraints.indexOf(constraint);\n                let timeline = new TransformConstraintTimeline(timelineMap.length, timelineMap.length * 6, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                let mixX = getValue(keyMap, \"mixX\", 1);\n                let mixY = getValue(keyMap, \"mixY\", mixX);\n                let mixScaleX = getValue(keyMap, \"mixScaleX\", 1);\n                let mixScaleY = getValue(keyMap, \"mixScaleY\", mixScaleX);\n                let mixShearY = getValue(keyMap, \"mixShearY\", 1);\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                    let nextMap = timelineMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                    let mixX2 = getValue(nextMap, \"mixX\", 1);\n                    let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                    let mixScaleX2 = getValue(nextMap, \"mixScaleX\", 1);\n                    let mixScaleY2 = getValue(nextMap, \"mixScaleY\", mixScaleX2);\n                    let mixShearY2 = getValue(nextMap, \"mixShearY\", 1);\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                    }\n                    time = time2;\n                    mixRotate = mixRotate2;\n                    mixX = mixX2;\n                    mixY = mixY2;\n                    mixScaleX = mixScaleX2;\n                    mixScaleY = mixScaleY2;\n                    mixScaleX = mixScaleX2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Path constraint timelines.\n        if (map.path) {\n            for (let constraintName in map.path) {\n                let constraintMap = map.path[constraintName];\n                let constraint = skeletonData.findPathConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"Path constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.pathConstraints.indexOf(constraint);\n                for (let timelineName in constraintMap) {\n                    let timelineMap = constraintMap[timelineName];\n                    let keyMap = timelineMap[0];\n                    if (!keyMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName === \"position\") {\n                        let timeline = new PathConstraintPositionTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.positionMode == PositionMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"spacing\") {\n                        let timeline = new PathConstraintSpacingTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.spacingMode == SpacingMode.Length || constraint.spacingMode == SpacingMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"mix\") {\n                        let timeline = new PathConstraintMixTimeline(frames, frames * 3, constraintIndex);\n                        let time = getValue(keyMap, \"time\", 0);\n                        let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                        let mixX = getValue(keyMap, \"mixX\", 1);\n                        let mixY = getValue(keyMap, \"mixY\", mixX);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                            let mixX2 = getValue(nextMap, \"mixX\", 1);\n                            let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Attachment timelines.\n        if (map.attachments) {\n            for (let attachmentsName in map.attachments) {\n                let attachmentsMap = map.attachments[attachmentsName];\n                let skin = skeletonData.findSkin(attachmentsName);\n                if (!skin)\n                    throw new Error(\"Skin not found: \" + attachmentsName);\n                for (let slotMapName in attachmentsMap) {\n                    let slotMap = attachmentsMap[slotMapName];\n                    let slot = skeletonData.findSlot(slotMapName);\n                    if (!slot)\n                        throw new Error(\"Slot not found: \" + slotMapName);\n                    let slotIndex = slot.index;\n                    for (let attachmentMapName in slotMap) {\n                        let attachmentMap = slotMap[attachmentMapName];\n                        let attachment = skin.getAttachment(slotIndex, attachmentMapName);\n                        for (let timelineMapName in attachmentMap) {\n                            let timelineMap = attachmentMap[timelineMapName];\n                            let keyMap = timelineMap[0];\n                            if (!keyMap)\n                                continue;\n                            if (timelineMapName == \"deform\") {\n                                let weighted = attachment.bones;\n                                let vertices = attachment.vertices;\n                                let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                                let timeline = new DeformTimeline(timelineMap.length, timelineMap.length, slotIndex, attachment);\n                                let time = getValue(keyMap, \"time\", 0);\n                                for (let frame = 0, bezier = 0;; frame++) {\n                                    let deform;\n                                    let verticesValue = getValue(keyMap, \"vertices\", null);\n                                    if (!verticesValue)\n                                        deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                                    else {\n                                        deform = Utils.newFloatArray(deformLength);\n                                        let start = getValue(keyMap, \"offset\", 0);\n                                        Utils.arrayCopy(verticesValue, 0, deform, start, verticesValue.length);\n                                        if (scale != 1) {\n                                            for (let i = start, n = i + verticesValue.length; i < n; i++)\n                                                deform[i] *= scale;\n                                        }\n                                        if (!weighted) {\n                                            for (let i = 0; i < deformLength; i++)\n                                                deform[i] += vertices[i];\n                                        }\n                                    }\n                                    timeline.setFrame(frame, time, deform);\n                                    let nextMap = timelineMap[frame + 1];\n                                    if (!nextMap) {\n                                        timeline.shrink(bezier);\n                                        break;\n                                    }\n                                    let time2 = getValue(nextMap, \"time\", 0);\n                                    let curve = keyMap.curve;\n                                    if (curve)\n                                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, 0, 1, 1);\n                                    time = time2;\n                                    keyMap = nextMap;\n                                }\n                                timelines.push(timeline);\n                            }\n                            else if (timelineMapName == \"sequence\") {\n                                let timeline = new SequenceTimeline(timelineMap.length, slotIndex, attachment);\n                                let lastDelay = 0;\n                                for (let frame = 0; frame < timelineMap.length; frame++) {\n                                    let delay = getValue(keyMap, \"delay\", lastDelay);\n                                    let time = getValue(keyMap, \"time\", 0);\n                                    let mode = SequenceMode[getValue(keyMap, \"mode\", \"hold\")];\n                                    let index = getValue(keyMap, \"index\", 0);\n                                    timeline.setFrame(frame, time, mode, index, delay);\n                                    lastDelay = delay;\n                                    keyMap = timelineMap[frame + 1];\n                                }\n                                timelines.push(timeline);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // Draw order timelines.\n        if (map.drawOrder) {\n            let timeline = new DrawOrderTimeline(map.drawOrder.length);\n            let slotCount = skeletonData.slots.length;\n            let frame = 0;\n            for (let i = 0; i < map.drawOrder.length; i++, frame++) {\n                let drawOrderMap = map.drawOrder[i];\n                let drawOrder = null;\n                let offsets = getValue(drawOrderMap, \"offsets\", null);\n                if (offsets) {\n                    drawOrder = Utils.newArray(slotCount, -1);\n                    let unchanged = Utils.newArray(slotCount - offsets.length, 0);\n                    let originalIndex = 0, unchangedIndex = 0;\n                    for (let ii = 0; ii < offsets.length; ii++) {\n                        let offsetMap = offsets[ii];\n                        let slot = skeletonData.findSlot(offsetMap.slot);\n                        if (!slot)\n                            throw new Error(\"Slot not found: \" + slot);\n                        let slotIndex = slot.index;\n                        // Collect unchanged items.\n                        while (originalIndex != slotIndex)\n                            unchanged[unchangedIndex++] = originalIndex++;\n                        // Set changed items.\n                        drawOrder[originalIndex + offsetMap.offset] = originalIndex++;\n                    }\n                    // Collect remaining unchanged items.\n                    while (originalIndex < slotCount)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Fill in unchanged items.\n                    for (let ii = slotCount - 1; ii >= 0; ii--)\n                        if (drawOrder[ii] == -1)\n                            drawOrder[ii] = unchanged[--unchangedIndex];\n                }\n                timeline.setFrame(frame, getValue(drawOrderMap, \"time\", 0), drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timelines.\n        if (map.events) {\n            let timeline = new EventTimeline(map.events.length);\n            let frame = 0;\n            for (let i = 0; i < map.events.length; i++, frame++) {\n                let eventMap = map.events[i];\n                let eventData = skeletonData.findEvent(eventMap.name);\n                if (!eventData)\n                    throw new Error(\"Event not found: \" + eventMap.name);\n                let event = new Event(Utils.toSinglePrecision(getValue(eventMap, \"time\", 0)), eventData);\n                event.intValue = getValue(eventMap, \"int\", eventData.intValue);\n                event.floatValue = getValue(eventMap, \"float\", eventData.floatValue);\n                event.stringValue = getValue(eventMap, \"string\", eventData.stringValue);\n                if (event.data.audioPath) {\n                    event.volume = getValue(eventMap, \"volume\", 1);\n                    event.balance = getValue(eventMap, \"balance\", 0);\n                }\n                timeline.setFrame(frame, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        skeletonData.animations.push(new Animation(name, timelines, duration));\n    }\n}\nclass LinkedMesh {\n    constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skin = skin;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritTimeline = inheritDeform;\n    }\n}\nfunction readTimeline1(keys, timeline, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value = getValue(keyMap, \"value\", defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let value2 = getValue(nextMap, \"value\", defaultValue) * scale;\n        if (keyMap.curve)\n            bezier = readCurve(keyMap.curve, timeline, bezier, frame, 0, time, time2, value, value2, scale);\n        time = time2;\n        value = value2;\n        keyMap = nextMap;\n    }\n}\nfunction readTimeline2(keys, timeline, name1, name2, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value1 = getValue(keyMap, name1, defaultValue) * scale;\n    let value2 = getValue(keyMap, name2, defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let nvalue1 = getValue(nextMap, name1, defaultValue) * scale;\n        let nvalue2 = getValue(nextMap, name2, defaultValue) * scale;\n        let curve = keyMap.curve;\n        if (curve) {\n            bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, value1, nvalue1, scale);\n            bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n        keyMap = nextMap;\n    }\n}\nfunction readCurve(curve, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    if (curve == \"stepped\") {\n        timeline.setStepped(frame);\n        return bezier;\n    }\n    let i = value << 2;\n    let cx1 = curve[i];\n    let cy1 = curve[i + 1] * scale;\n    let cx2 = curve[i + 2];\n    let cy2 = curve[i + 3] * scale;\n    timeline.setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2);\n    return bezier + 1;\n}\nfunction getValue(map, property, defaultValue) {\n    return map[property] !== undefined ? map[property] : defaultValue;\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n(() => {\n    if (typeof Math.fround === \"undefined\") {\n        Math.fround = (function (array) {\n            return function (x) {\n                return array[0] = x, array[0];\n            };\n        })(new Float32Array(1));\n    }\n})();\nexport {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWZpbGxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3BvbHlmaWxscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsQ0FBQyxHQUFHLEVBQUU7SUFDTCxJQUFJLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxXQUFXLEVBQUU7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLFVBQVUsS0FBSztZQUM3QixPQUFPLFVBQVUsQ0FBUztnQkFDekIsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3hCO0FBQ0YsQ0FBQyxDQUFDLEVBQUUsQ0FBQyJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BlendMode } from \"@esotericsoftware/spine-core\";\nexport class ManagedWebGLRenderingContext {\n    constructor(canvasOrContext, contextConfig = { alpha: \"true\" }) {\n        this.restorables = new Array();\n        if (!((canvasOrContext instanceof WebGLRenderingContext) || (typeof WebGL2RenderingContext !== 'undefined' && canvasOrContext instanceof WebGL2RenderingContext))) {\n            let canvas = canvasOrContext;\n            this.gl = (canvas.getContext(\"webgl2\", contextConfig) || canvas.getContext(\"webgl\", contextConfig));\n            this.canvas = canvas;\n            canvas.addEventListener(\"webglcontextlost\", (e) => {\n                let event = e;\n                if (e)\n                    e.preventDefault();\n            });\n            canvas.addEventListener(\"webglcontextrestored\", (e) => {\n                for (let i = 0, n = this.restorables.length; i < n; i++)\n                    this.restorables[i].restore();\n            });\n        }\n        else {\n            this.gl = canvasOrContext;\n            this.canvas = this.gl.canvas;\n        }\n    }\n    addRestorable(restorable) {\n        this.restorables.push(restorable);\n    }\n    removeRestorable(restorable) {\n        let index = this.restorables.indexOf(restorable);\n        if (index > -1)\n            this.restorables.splice(index, 1);\n    }\n}\nconst ONE = 1;\nconst ONE_MINUS_SRC_COLOR = 0x0301;\nconst SRC_ALPHA = 0x0302;\nconst ONE_MINUS_SRC_ALPHA = 0x0303;\nconst ONE_MINUS_DST_ALPHA = 0x0305;\nconst DST_COLOR = 0x0306;\nexport class WebGLBlendModeConverter {\n    static getDestGLBlendMode(blendMode) {\n        switch (blendMode) {\n            case BlendMode.Normal: return ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Additive: return ONE;\n            case BlendMode.Multiply: return ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Screen: return ONE_MINUS_SRC_ALPHA;\n            default: throw new Error(\"Unknown blend mode: \" + blendMode);\n        }\n    }\n    static getSourceColorGLBlendMode(blendMode, premultipliedAlpha = false) {\n        switch (blendMode) {\n            case BlendMode.Normal: return premultipliedAlpha ? ONE : SRC_ALPHA;\n            case BlendMode.Additive: return premultipliedAlpha ? ONE : SRC_ALPHA;\n            case BlendMode.Multiply: return DST_COLOR;\n            case BlendMode.Screen: return ONE;\n            default: throw new Error(\"Unknown blend mode: \" + blendMode);\n        }\n    }\n    static getSourceAlphaGLBlendMode(blendMode) {\n        switch (blendMode) {\n            case BlendMode.Normal: return ONE;\n            case BlendMode.Additive: return ONE;\n            case BlendMode.Multiply: return ONE_MINUS_SRC_ALPHA;\n            case BlendMode.Screen: return ONE_MINUS_SRC_COLOR;\n            default: throw new Error(\"Unknown blend mode: \" + blendMode);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViR0wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvV2ViR0wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBYyxTQUFTLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVyRSxNQUFNLE9BQU8sNEJBQTRCO0lBS3hDLFlBQWEsZUFBMEQsRUFBRSxnQkFBcUIsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFO1FBRnZHLGdCQUFXLEdBQUcsSUFBSSxLQUFLLEVBQWMsQ0FBQztRQUc3QyxJQUFJLENBQUMsQ0FBQyxDQUFDLGVBQWUsWUFBWSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxzQkFBc0IsS0FBSyxXQUFXLElBQUksZUFBZSxZQUFZLHNCQUFzQixDQUFDLENBQUMsRUFBRTtZQUNsSyxJQUFJLE1BQU0sR0FBc0IsZUFBZSxDQUFDO1lBQ2hELElBQUksQ0FBQyxFQUFFLEdBQTBCLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsYUFBYSxDQUFDLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUMzSCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNyQixNQUFNLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFNLEVBQUUsRUFBRTtnQkFDdEQsSUFBSSxLQUFLLEdBQXNCLENBQUMsQ0FBQztnQkFDakMsSUFBSSxDQUFDO29CQUFFLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUMzQixDQUFDLENBQUMsQ0FBQztZQUNILE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLENBQU0sRUFBRSxFQUFFO2dCQUMxRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFN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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Texture, TextureFilter } from \"@esotericsoftware/spine-core\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class GLTexture extends Texture {\n    constructor(context, image, useMipMaps = false) {\n        super(image);\n        this.texture = null;\n        this.boundUnit = 0;\n        this.useMipMaps = false;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.useMipMaps = useMipMaps;\n        this.restore();\n        this.context.addRestorable(this);\n    }\n    setFilters(minFilter, magFilter) {\n        let gl = this.context.gl;\n        this.bind();\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GLTexture.validateMagFilter(magFilter));\n        this.useMipMaps = GLTexture.usesMipMaps(minFilter);\n        if (this.useMipMaps)\n            gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    static validateMagFilter(magFilter) {\n        switch (magFilter) {\n            case TextureFilter.MipMapLinearLinear:\n            case TextureFilter.MipMapLinearNearest:\n            case TextureFilter.MipMapNearestLinear:\n            case TextureFilter.MipMapNearestNearest:\n                return TextureFilter.Linear;\n            default:\n                return magFilter;\n        }\n    }\n    static usesMipMaps(filter) {\n        switch (filter) {\n            case TextureFilter.MipMapLinearLinear:\n            case TextureFilter.MipMapLinearNearest:\n            case TextureFilter.MipMapNearestLinear:\n            case TextureFilter.MipMapNearestNearest:\n                return true;\n            default:\n                return false;\n        }\n    }\n    setWraps(uWrap, vWrap) {\n        let gl = this.context.gl;\n        this.bind();\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, uWrap);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, vWrap);\n    }\n    update(useMipMaps) {\n        let gl = this.context.gl;\n        if (!this.texture)\n            this.texture = this.context.gl.createTexture();\n        this.bind();\n        if (GLTexture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL)\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, useMipMaps ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        if (useMipMaps)\n            gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    restore() {\n        this.texture = null;\n        this.update(this.useMipMaps);\n    }\n    bind(unit = 0) {\n        let gl = this.context.gl;\n        this.boundUnit = unit;\n        gl.activeTexture(gl.TEXTURE0 + unit);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    }\n    unbind() {\n        let gl = this.context.gl;\n        gl.activeTexture(gl.TEXTURE0 + this.boundUnit);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        gl.deleteTexture(this.texture);\n    }\n}\nGLTexture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL = false;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR0xUZXh0dXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0dMVGV4dHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLE9BQU8sRUFBMEIsYUFBYSxFQUFlLE1BQU0sOEJBQThCLENBQUM7QUFDM0csT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRXZELE1BQU0sT0FBTyxTQUFVLFNBQVEsT0FBTztJQVFyQyxZQUFhLE9BQTZELEVBQUUsS0FBcUMsRUFBRSxhQUFzQixLQUFLO1FBQzdJLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQVBOLFlBQU8sR0FBd0IsSUFBSSxDQUFDO1FBQ3BDLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFDZCxlQUFVLEdBQUcsS0FBSyxDQUFDO1FBTTFCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxZQUFZLDRCQUE0QixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksNEJBQTRCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckgsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELFVBQVUsQ0FBRSxTQUF3QixFQUFFLFNBQXdCO1FBQzdELElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNaLEVBQUUsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbEUsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsVUFB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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { M00, M01, M02, M03, M10, M11, M12, M13, M20, M21, M22, M23, M30, M31, M32, M33 } from \"./Matrix4\";\nexport class Vector3 {\n    constructor(x = 0, y = 0, z = 0) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    setFrom(v) {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        return this;\n    }\n    set(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n    }\n    sub(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return this;\n    }\n    scale(s) {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n        return this;\n    }\n    normalize() {\n        let len = this.length();\n        if (len == 0)\n            return this;\n        len = 1 / len;\n        this.x *= len;\n        this.y *= len;\n        this.z *= len;\n        return this;\n    }\n    cross(v) {\n        return this.set(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n    }\n    multiply(matrix) {\n        let l_mat = matrix.values;\n        return this.set(this.x * l_mat[M00] + this.y * l_mat[M01] + this.z * l_mat[M02] + l_mat[M03], this.x * l_mat[M10] + this.y * l_mat[M11] + this.z * l_mat[M12] + l_mat[M13], this.x * l_mat[M20] + this.y * l_mat[M21] + this.z * l_mat[M22] + l_mat[M23]);\n    }\n    project(matrix) {\n        let l_mat = matrix.values;\n        let l_w = 1 / (this.x * l_mat[M30] + this.y * l_mat[M31] + this.z * l_mat[M32] + l_mat[M33]);\n        return this.set((this.x * l_mat[M00] + this.y * l_mat[M01] + this.z * l_mat[M02] + l_mat[M03]) * l_w, (this.x * l_mat[M10] + this.y * l_mat[M11] + this.z * l_mat[M12] + l_mat[M13]) * l_w, (this.x * l_mat[M20] + this.y * l_mat[M21] + this.z * l_mat[M22] + l_mat[M23]) * l_w);\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    distance(v) {\n        let a = v.x - this.x;\n        let b = v.y - this.y;\n        let c = v.z - this.z;\n        return Math.sqrt(a * a + b * b + c * c);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVjdG9yMy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9WZWN0b3IzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQVcsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXBILE1BQU0sT0FBTyxPQUFPO0lBS25CLFlBQWEsSUFBWSxDQUFDLEVBQUUsSUFBWSxDQUFDLEVBQUUsSUFBWSxDQUFDO1FBSnhELE1BQUMsR0FBRyxDQUFDLENBQUM7UUFDTixNQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ04sTUFBQyxHQUFHLENBQUMsQ0FBQztRQUdMLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNaLENBQUM7SUFFRCxPQUFPLENBQUUsQ0FBVTtRQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDYixPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxHQUFHLENBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO1FBQ25DLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELEdBQUcsQ0FBRSxDQUFVO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsR0FBRyxDQUFFLENBQVU7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDZCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRCxLQUFLLENBQUUsQ0FBUztRQUNmLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1osSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNaLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELFNBQVM7UUFDUixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDeEIsSUFBSSxHQUFHLElBQUksQ0FBQztZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQzFCLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBQ2QsSUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUM7UUFDZCxJQUFJLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQztRQUNkLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDO1FBQ2QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsS0FBSyxDQUFFLENBQVU7UUFDaEIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDdkcsQ0FBQztJQUVELFFBQVEsQ0FBRSxNQUFlO1FBQ3hCLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDMUIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFDM0YsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUM1RSxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUQsT0FBTyxDQUFFLE1BQWU7UUFDdkIsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM3RixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEVBQ25HLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUNwRixDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7SUFFRCxHQUFHLENBQUUsQ0FBVTtRQUNkLE9BQU8sSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELE1BQU07UUFDTCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsUUFBUSxDQUFFLENBQVU7UUFDbkIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDckIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDekMsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector3 } from \"./Vector3\";\nexport const M00 = 0;\nexport const M01 = 4;\nexport const M02 = 8;\nexport const M03 = 12;\nexport const M10 = 1;\nexport const M11 = 5;\nexport const M12 = 9;\nexport const M13 = 13;\nexport const M20 = 2;\nexport const M21 = 6;\nexport const M22 = 10;\nexport const M23 = 14;\nexport const M30 = 3;\nexport const M31 = 7;\nexport const M32 = 11;\nexport const M33 = 15;\nexport class Matrix4 {\n    constructor() {\n        this.temp = new Float32Array(16);\n        this.values = new Float32Array(16);\n        let v = this.values;\n        v[M00] = 1;\n        v[M11] = 1;\n        v[M22] = 1;\n        v[M33] = 1;\n    }\n    set(values) {\n        this.values.set(values);\n        return this;\n    }\n    transpose() {\n        let t = this.temp;\n        let v = this.values;\n        t[M00] = v[M00];\n        t[M01] = v[M10];\n        t[M02] = v[M20];\n        t[M03] = v[M30];\n        t[M10] = v[M01];\n        t[M11] = v[M11];\n        t[M12] = v[M21];\n        t[M13] = v[M31];\n        t[M20] = v[M02];\n        t[M21] = v[M12];\n        t[M22] = v[M22];\n        t[M23] = v[M32];\n        t[M30] = v[M03];\n        t[M31] = v[M13];\n        t[M32] = v[M23];\n        t[M33] = v[M33];\n        return this.set(t);\n    }\n    identity() {\n        let v = this.values;\n        v[M00] = 1;\n        v[M01] = 0;\n        v[M02] = 0;\n        v[M03] = 0;\n        v[M10] = 0;\n        v[M11] = 1;\n        v[M12] = 0;\n        v[M13] = 0;\n        v[M20] = 0;\n        v[M21] = 0;\n        v[M22] = 1;\n        v[M23] = 0;\n        v[M30] = 0;\n        v[M31] = 0;\n        v[M32] = 0;\n        v[M33] = 1;\n        return this;\n    }\n    invert() {\n        let v = this.values;\n        let t = this.temp;\n        let l_det = v[M30] * v[M21] * v[M12] * v[M03] - v[M20] * v[M31] * v[M12] * v[M03] - v[M30] * v[M11] * v[M22] * v[M03]\n            + v[M10] * v[M31] * v[M22] * v[M03] + v[M20] * v[M11] * v[M32] * v[M03] - v[M10] * v[M21] * v[M32] * v[M03]\n            - v[M30] * v[M21] * v[M02] * v[M13] + v[M20] * v[M31] * v[M02] * v[M13] + v[M30] * v[M01] * v[M22] * v[M13]\n            - v[M00] * v[M31] * v[M22] * v[M13] - v[M20] * v[M01] * v[M32] * v[M13] + v[M00] * v[M21] * v[M32] * v[M13]\n            + v[M30] * v[M11] * v[M02] * v[M23] - v[M10] * v[M31] * v[M02] * v[M23] - v[M30] * v[M01] * v[M12] * v[M23]\n            + v[M00] * v[M31] * v[M12] * v[M23] + v[M10] * v[M01] * v[M32] * v[M23] - v[M00] * v[M11] * v[M32] * v[M23]\n            - v[M20] * v[M11] * v[M02] * v[M33] + v[M10] * v[M21] * v[M02] * v[M33] + v[M20] * v[M01] * v[M12] * v[M33]\n            - v[M00] * v[M21] * v[M12] * v[M33] - v[M10] * v[M01] * v[M22] * v[M33] + v[M00] * v[M11] * v[M22] * v[M33];\n        if (l_det == 0)\n            throw new Error(\"non-invertible matrix\");\n        let inv_det = 1.0 / l_det;\n        t[M00] = v[M12] * v[M23] * v[M31] - v[M13] * v[M22] * v[M31] + v[M13] * v[M21] * v[M32]\n            - v[M11] * v[M23] * v[M32] - v[M12] * v[M21] * v[M33] + v[M11] * v[M22] * v[M33];\n        t[M01] = v[M03] * v[M22] * v[M31] - v[M02] * v[M23] * v[M31] - v[M03] * v[M21] * v[M32]\n            + v[M01] * v[M23] * v[M32] + v[M02] * v[M21] * v[M33] - v[M01] * v[M22] * v[M33];\n        t[M02] = v[M02] * v[M13] * v[M31] - v[M03] * v[M12] * v[M31] + v[M03] * v[M11] * v[M32]\n            - v[M01] * v[M13] * v[M32] - v[M02] * v[M11] * v[M33] + v[M01] * v[M12] * v[M33];\n        t[M03] = v[M03] * v[M12] * v[M21] - v[M02] * v[M13] * v[M21] - v[M03] * v[M11] * v[M22]\n            + v[M01] * v[M13] * v[M22] + v[M02] * v[M11] * v[M23] - v[M01] * v[M12] * v[M23];\n        t[M10] = v[M13] * v[M22] * v[M30] - v[M12] * v[M23] * v[M30] - v[M13] * v[M20] * v[M32]\n            + v[M10] * v[M23] * v[M32] + v[M12] * v[M20] * v[M33] - v[M10] * v[M22] * v[M33];\n        t[M11] = v[M02] * v[M23] * v[M30] - v[M03] * v[M22] * v[M30] + v[M03] * v[M20] * v[M32]\n            - v[M00] * v[M23] * v[M32] - v[M02] * v[M20] * v[M33] + v[M00] * v[M22] * v[M33];\n        t[M12] = v[M03] * v[M12] * v[M30] - v[M02] * v[M13] * v[M30] - v[M03] * v[M10] * v[M32]\n            + v[M00] * v[M13] * v[M32] + v[M02] * v[M10] * v[M33] - v[M00] * v[M12] * v[M33];\n        t[M13] = v[M02] * v[M13] * v[M20] - v[M03] * v[M12] * v[M20] + v[M03] * v[M10] * v[M22]\n            - v[M00] * v[M13] * v[M22] - v[M02] * v[M10] * v[M23] + v[M00] * v[M12] * v[M23];\n        t[M20] = v[M11] * v[M23] * v[M30] - v[M13] * v[M21] * v[M30] + v[M13] * v[M20] * v[M31]\n            - v[M10] * v[M23] * v[M31] - v[M11] * v[M20] * v[M33] + v[M10] * v[M21] * v[M33];\n        t[M21] = v[M03] * v[M21] * v[M30] - v[M01] * v[M23] * v[M30] - v[M03] * v[M20] * v[M31]\n            + v[M00] * v[M23] * v[M31] + v[M01] * v[M20] * v[M33] - v[M00] * v[M21] * v[M33];\n        t[M22] = v[M01] * v[M13] * v[M30] - v[M03] * v[M11] * v[M30] + v[M03] * v[M10] * v[M31]\n            - v[M00] * v[M13] * v[M31] - v[M01] * v[M10] * v[M33] + v[M00] * v[M11] * v[M33];\n        t[M23] = v[M03] * v[M11] * v[M20] - v[M01] * v[M13] * v[M20] - v[M03] * v[M10] * v[M21]\n            + v[M00] * v[M13] * v[M21] + v[M01] * v[M10] * v[M23] - v[M00] * v[M11] * v[M23];\n        t[M30] = v[M12] * v[M21] * v[M30] - v[M11] * v[M22] * v[M30] - v[M12] * v[M20] * v[M31]\n            + v[M10] * v[M22] * v[M31] + v[M11] * v[M20] * v[M32] - v[M10] * v[M21] * v[M32];\n        t[M31] = v[M01] * v[M22] * v[M30] - v[M02] * v[M21] * v[M30] + v[M02] * v[M20] * v[M31]\n            - v[M00] * v[M22] * v[M31] - v[M01] * v[M20] * v[M32] + v[M00] * v[M21] * v[M32];\n        t[M32] = v[M02] * v[M11] * v[M30] - v[M01] * v[M12] * v[M30] - v[M02] * v[M10] * v[M31]\n            + v[M00] * v[M12] * v[M31] + v[M01] * v[M10] * v[M32] - v[M00] * v[M11] * v[M32];\n        t[M33] = v[M01] * v[M12] * v[M20] - v[M02] * v[M11] * v[M20] + v[M02] * v[M10] * v[M21]\n            - v[M00] * v[M12] * v[M21] - v[M01] * v[M10] * v[M22] + v[M00] * v[M11] * v[M22];\n        v[M00] = t[M00] * inv_det;\n        v[M01] = t[M01] * inv_det;\n        v[M02] = t[M02] * inv_det;\n        v[M03] = t[M03] * inv_det;\n        v[M10] = t[M10] * inv_det;\n        v[M11] = t[M11] * inv_det;\n        v[M12] = t[M12] * inv_det;\n        v[M13] = t[M13] * inv_det;\n        v[M20] = t[M20] * inv_det;\n        v[M21] = t[M21] * inv_det;\n        v[M22] = t[M22] * inv_det;\n        v[M23] = t[M23] * inv_det;\n        v[M30] = t[M30] * inv_det;\n        v[M31] = t[M31] * inv_det;\n        v[M32] = t[M32] * inv_det;\n        v[M33] = t[M33] * inv_det;\n        return this;\n    }\n    determinant() {\n        let v = this.values;\n        return v[M30] * v[M21] * v[M12] * v[M03] - v[M20] * v[M31] * v[M12] * v[M03] - v[M30] * v[M11] * v[M22] * v[M03]\n            + v[M10] * v[M31] * v[M22] * v[M03] + v[M20] * v[M11] * v[M32] * v[M03] - v[M10] * v[M21] * v[M32] * v[M03]\n            - v[M30] * v[M21] * v[M02] * v[M13] + v[M20] * v[M31] * v[M02] * v[M13] + v[M30] * v[M01] * v[M22] * v[M13]\n            - v[M00] * v[M31] * v[M22] * v[M13] - v[M20] * v[M01] * v[M32] * v[M13] + v[M00] * v[M21] * v[M32] * v[M13]\n            + v[M30] * v[M11] * v[M02] * v[M23] - v[M10] * v[M31] * v[M02] * v[M23] - v[M30] * v[M01] * v[M12] * v[M23]\n            + v[M00] * v[M31] * v[M12] * v[M23] + v[M10] * v[M01] * v[M32] * v[M23] - v[M00] * v[M11] * v[M32] * v[M23]\n            - v[M20] * v[M11] * v[M02] * v[M33] + v[M10] * v[M21] * v[M02] * v[M33] + v[M20] * v[M01] * v[M12] * v[M33]\n            - v[M00] * v[M21] * v[M12] * v[M33] - v[M10] * v[M01] * v[M22] * v[M33] + v[M00] * v[M11] * v[M22] * v[M33];\n    }\n    translate(x, y, z) {\n        let v = this.values;\n        v[M03] += x;\n        v[M13] += y;\n        v[M23] += z;\n        return this;\n    }\n    copy() {\n        return new Matrix4().set(this.values);\n    }\n    projection(near, far, fovy, aspectRatio) {\n        this.identity();\n        let l_fd = (1.0 / Math.tan((fovy * (Math.PI / 180)) / 2.0));\n        let l_a1 = (far + near) / (near - far);\n        let l_a2 = (2 * far * near) / (near - far);\n        let v = this.values;\n        v[M00] = l_fd / aspectRatio;\n        v[M10] = 0;\n        v[M20] = 0;\n        v[M30] = 0;\n        v[M01] = 0;\n        v[M11] = l_fd;\n        v[M21] = 0;\n        v[M31] = 0;\n        v[M02] = 0;\n        v[M12] = 0;\n        v[M22] = l_a1;\n        v[M32] = -1;\n        v[M03] = 0;\n        v[M13] = 0;\n        v[M23] = l_a2;\n        v[M33] = 0;\n        return this;\n    }\n    ortho2d(x, y, width, height) {\n        return this.ortho(x, x + width, y, y + height, 0, 1);\n    }\n    ortho(left, right, bottom, top, near, far) {\n        this.identity();\n        let x_orth = 2 / (right - left);\n        let y_orth = 2 / (top - bottom);\n        let z_orth = -2 / (far - near);\n        let tx = -(right + left) / (right - left);\n        let ty = -(top + bottom) / (top - bottom);\n        let tz = -(far + near) / (far - near);\n        let v = this.values;\n        v[M00] = x_orth;\n        v[M10] = 0;\n        v[M20] = 0;\n        v[M30] = 0;\n        v[M01] = 0;\n        v[M11] = y_orth;\n        v[M21] = 0;\n        v[M31] = 0;\n        v[M02] = 0;\n        v[M12] = 0;\n        v[M22] = z_orth;\n        v[M32] = 0;\n        v[M03] = tx;\n        v[M13] = ty;\n        v[M23] = tz;\n        v[M33] = 1;\n        return this;\n    }\n    multiply(matrix) {\n        let t = this.temp;\n        let v = this.values;\n        let m = matrix.values;\n        t[M00] = v[M00] * m[M00] + v[M01] * m[M10] + v[M02] * m[M20] + v[M03] * m[M30];\n        t[M01] = v[M00] * m[M01] + v[M01] * m[M11] + v[M02] * m[M21] + v[M03] * m[M31];\n        t[M02] = v[M00] * m[M02] + v[M01] * m[M12] + v[M02] * m[M22] + v[M03] * m[M32];\n        t[M03] = v[M00] * m[M03] + v[M01] * m[M13] + v[M02] * m[M23] + v[M03] * m[M33];\n        t[M10] = v[M10] * m[M00] + v[M11] * m[M10] + v[M12] * m[M20] + v[M13] * m[M30];\n        t[M11] = v[M10] * m[M01] + v[M11] * m[M11] + v[M12] * m[M21] + v[M13] * m[M31];\n        t[M12] = v[M10] * m[M02] + v[M11] * m[M12] + v[M12] * m[M22] + v[M13] * m[M32];\n        t[M13] = v[M10] * m[M03] + v[M11] * m[M13] + v[M12] * m[M23] + v[M13] * m[M33];\n        t[M20] = v[M20] * m[M00] + v[M21] * m[M10] + v[M22] * m[M20] + v[M23] * m[M30];\n        t[M21] = v[M20] * m[M01] + v[M21] * m[M11] + v[M22] * m[M21] + v[M23] * m[M31];\n        t[M22] = v[M20] * m[M02] + v[M21] * m[M12] + v[M22] * m[M22] + v[M23] * m[M32];\n        t[M23] = v[M20] * m[M03] + v[M21] * m[M13] + v[M22] * m[M23] + v[M23] * m[M33];\n        t[M30] = v[M30] * m[M00] + v[M31] * m[M10] + v[M32] * m[M20] + v[M33] * m[M30];\n        t[M31] = v[M30] * m[M01] + v[M31] * m[M11] + v[M32] * m[M21] + v[M33] * m[M31];\n        t[M32] = v[M30] * m[M02] + v[M31] * m[M12] + v[M32] * m[M22] + v[M33] * m[M32];\n        t[M33] = v[M30] * m[M03] + v[M31] * m[M13] + v[M32] * m[M23] + v[M33] * m[M33];\n        return this.set(this.temp);\n    }\n    multiplyLeft(matrix) {\n        let t = this.temp;\n        let v = this.values;\n        let m = matrix.values;\n        t[M00] = m[M00] * v[M00] + m[M01] * v[M10] + m[M02] * v[M20] + m[M03] * v[M30];\n        t[M01] = m[M00] * v[M01] + m[M01] * v[M11] + m[M02] * v[M21] + m[M03] * v[M31];\n        t[M02] = m[M00] * v[M02] + m[M01] * v[M12] + m[M02] * v[M22] + m[M03] * v[M32];\n        t[M03] = m[M00] * v[M03] + m[M01] * v[M13] + m[M02] * v[M23] + m[M03] * v[M33];\n        t[M10] = m[M10] * v[M00] + m[M11] * v[M10] + m[M12] * v[M20] + m[M13] * v[M30];\n        t[M11] = m[M10] * v[M01] + m[M11] * v[M11] + m[M12] * v[M21] + m[M13] * v[M31];\n        t[M12] = m[M10] * v[M02] + m[M11] * v[M12] + m[M12] * v[M22] + m[M13] * v[M32];\n        t[M13] = m[M10] * v[M03] + m[M11] * v[M13] + m[M12] * v[M23] + m[M13] * v[M33];\n        t[M20] = m[M20] * v[M00] + m[M21] * v[M10] + m[M22] * v[M20] + m[M23] * v[M30];\n        t[M21] = m[M20] * v[M01] + m[M21] * v[M11] + m[M22] * v[M21] + m[M23] * v[M31];\n        t[M22] = m[M20] * v[M02] + m[M21] * v[M12] + m[M22] * v[M22] + m[M23] * v[M32];\n        t[M23] = m[M20] * v[M03] + m[M21] * v[M13] + m[M22] * v[M23] + m[M23] * v[M33];\n        t[M30] = m[M30] * v[M00] + m[M31] * v[M10] + m[M32] * v[M20] + m[M33] * v[M30];\n        t[M31] = m[M30] * v[M01] + m[M31] * v[M11] + m[M32] * v[M21] + m[M33] * v[M31];\n        t[M32] = m[M30] * v[M02] + m[M31] * v[M12] + m[M32] * v[M22] + m[M33] * v[M32];\n        t[M33] = m[M30] * v[M03] + m[M31] * v[M13] + m[M32] * v[M23] + m[M33] * v[M33];\n        return this.set(this.temp);\n    }\n    lookAt(position, direction, up) {\n        let xAxis = Matrix4.xAxis, yAxis = Matrix4.yAxis, zAxis = Matrix4.zAxis;\n        zAxis.setFrom(direction).normalize();\n        xAxis.setFrom(direction).normalize();\n        xAxis.cross(up).normalize();\n        yAxis.setFrom(xAxis).cross(zAxis).normalize();\n        this.identity();\n        let val = this.values;\n        val[M00] = xAxis.x;\n        val[M01] = xAxis.y;\n        val[M02] = xAxis.z;\n        val[M10] = yAxis.x;\n        val[M11] = yAxis.y;\n        val[M12] = yAxis.z;\n        val[M20] = -zAxis.x;\n        val[M21] = -zAxis.y;\n        val[M22] = -zAxis.z;\n        Matrix4.tmpMatrix.identity();\n        Matrix4.tmpMatrix.values[M03] = -position.x;\n        Matrix4.tmpMatrix.values[M13] = -position.y;\n        Matrix4.tmpMatrix.values[M23] = -position.z;\n        this.multiply(Matrix4.tmpMatrix);\n        return this;\n    }\n}\nMatrix4.xAxis = new Vector3();\nMatrix4.yAxis = new Vector3();\nMatrix4.zAxis = new Vector3();\nMatrix4.tmpMatrix = new Matrix4();\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Matrix4 } from \"./Matrix4\";\nimport { Vector3 } from \"./Vector3\";\nexport class OrthoCamera {\n    constructor(viewportWidth, viewportHeight) {\n        this.position = new Vector3(0, 0, 0);\n        this.direction = new Vector3(0, 0, -1);\n        this.up = new Vector3(0, 1, 0);\n        this.near = 0;\n        this.far = 100;\n        this.zoom = 1;\n        this.viewportWidth = 0;\n        this.viewportHeight = 0;\n        this.projectionView = new Matrix4();\n        this.inverseProjectionView = new Matrix4();\n        this.projection = new Matrix4();\n        this.view = new Matrix4();\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n        this.update();\n    }\n    update() {\n        let projection = this.projection;\n        let view = this.view;\n        let projectionView = this.projectionView;\n        let inverseProjectionView = this.inverseProjectionView;\n        let zoom = this.zoom, viewportWidth = this.viewportWidth, viewportHeight = this.viewportHeight;\n        projection.ortho(zoom * (-viewportWidth / 2), zoom * (viewportWidth / 2), zoom * (-viewportHeight / 2), zoom * (viewportHeight / 2), this.near, this.far);\n        view.lookAt(this.position, this.direction, this.up);\n        projectionView.set(projection.values);\n        projectionView.multiply(view);\n        inverseProjectionView.set(projectionView.values).invert();\n    }\n    screenToWorld(screenCoords, screenWidth, screenHeight) {\n        let x = screenCoords.x, y = screenHeight - screenCoords.y - 1;\n        screenCoords.x = (2 * x) / screenWidth - 1;\n        screenCoords.y = (2 * y) / screenHeight - 1;\n        screenCoords.z = (2 * screenCoords.z) - 1;\n        screenCoords.project(this.inverseProjectionView);\n        return screenCoords;\n    }\n    worldToScreen(worldCoords, screenWidth, screenHeight) {\n        worldCoords.project(this.projectionView);\n        worldCoords.x = screenWidth * (worldCoords.x + 1) / 2;\n        worldCoords.y = screenHeight * (worldCoords.y + 1) / 2;\n        worldCoords.z = (worldCoords.z + 1) / 2;\n        return worldCoords;\n    }\n    setViewport(viewportWidth, viewportHeight) {\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FtZXJhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0NhbWVyYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNwQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXBDLE1BQU0sT0FBTyxXQUFXO0lBY3ZCLFlBQWEsYUFBcUIsRUFBRSxjQUFzQjtRQWIxRCxhQUFRLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNoQyxjQUFTLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLE9BQUUsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzFCLFNBQUksR0FBRyxDQUFDLENBQUM7UUFDVCxRQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ1YsU0FBSSxHQUFHLENBQUMsQ0FBQztRQUNULGtCQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLG1CQUFjLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLG1CQUFjLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUMvQiwwQkFBcUIsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQ3RDLGVBQVUsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQzNCLFNBQUksR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBR3BCLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ25DLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNmLENBQUM7SUFFRCxNQUFNO1FBQ0wsSUFBSSxVQUFVLEdBQUcsSUFBSSxD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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class Shader {\n    getProgram() { return this.program; }\n    getVertexShader() { return this.vertexShader; }\n    getFragmentShader() { return this.fragmentShader; }\n    getVertexShaderSource() { return this.vsSource; }\n    getFragmentSource() { return this.fsSource; }\n    constructor(context, vertexShader, fragmentShader) {\n        this.vertexShader = vertexShader;\n        this.fragmentShader = fragmentShader;\n        this.vs = null;\n        this.fs = null;\n        this.program = null;\n        this.tmp2x2 = new Float32Array(2 * 2);\n        this.tmp3x3 = new Float32Array(3 * 3);\n        this.tmp4x4 = new Float32Array(4 * 4);\n        this.vsSource = vertexShader;\n        this.fsSource = fragmentShader;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.context.addRestorable(this);\n        this.compile();\n    }\n    compile() {\n        let gl = this.context.gl;\n        try {\n            this.vs = this.compileShader(gl.VERTEX_SHADER, this.vertexShader);\n            if (!this.vs)\n                throw new Error(\"Couldn't compile vertex shader.\");\n            this.fs = this.compileShader(gl.FRAGMENT_SHADER, this.fragmentShader);\n            if (!this.fs)\n                throw new Error(\"Couldn#t compile fragment shader.\");\n            this.program = this.compileProgram(this.vs, this.fs);\n        }\n        catch (e) {\n            this.dispose();\n            throw e;\n        }\n    }\n    compileShader(type, source) {\n        let gl = this.context.gl;\n        let shader = gl.createShader(type);\n        if (!shader)\n            throw new Error(\"Couldn't create shader.\");\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            let error = \"Couldn't compile shader: \" + gl.getShaderInfoLog(shader);\n            gl.deleteShader(shader);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return shader;\n    }\n    compileProgram(vs, fs) {\n        let gl = this.context.gl;\n        let program = gl.createProgram();\n        if (!program)\n            throw new Error(\"Couldn't compile program.\");\n        gl.attachShader(program, vs);\n        gl.attachShader(program, fs);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            let error = \"Couldn't compile shader program: \" + gl.getProgramInfoLog(program);\n            gl.deleteProgram(program);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return program;\n    }\n    restore() {\n        this.compile();\n    }\n    bind() {\n        this.context.gl.useProgram(this.program);\n    }\n    unbind() {\n        this.context.gl.useProgram(null);\n    }\n    setUniformi(uniform, value) {\n        this.context.gl.uniform1i(this.getUniformLocation(uniform), value);\n    }\n    setUniformf(uniform, value) {\n        this.context.gl.uniform1f(this.getUniformLocation(uniform), value);\n    }\n    setUniform2f(uniform, value, value2) {\n        this.context.gl.uniform2f(this.getUniformLocation(uniform), value, value2);\n    }\n    setUniform3f(uniform, value, value2, value3) {\n        this.context.gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\n    }\n    setUniform4f(uniform, value, value2, value3, value4) {\n        this.context.gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\n    }\n    setUniform2x2f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp2x2.set(value);\n        gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, this.tmp2x2);\n    }\n    setUniform3x3f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp3x3.set(value);\n        gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, this.tmp3x3);\n    }\n    setUniform4x4f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp4x4.set(value);\n        gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, this.tmp4x4);\n    }\n    getUniformLocation(uniform) {\n        let gl = this.context.gl;\n        if (!this.program)\n            throw new Error(\"Shader not compiled.\");\n        let location = gl.getUniformLocation(this.program, uniform);\n        if (!location && !gl.isContextLost())\n            throw new Error(`Couldn't find location for uniform ${uniform}`);\n        return location;\n    }\n    getAttributeLocation(attribute) {\n        let gl = this.context.gl;\n        if (!this.program)\n            throw new Error(\"Shader not compiled.\");\n        let location = gl.getAttribLocation(this.program, attribute);\n        if (location == -1 && !gl.isContextLost())\n            throw new Error(`Couldn't find location for attribute ${attribute}`);\n        return location;\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        if (this.vs) {\n            gl.deleteShader(this.vs);\n            this.vs = null;\n        }\n        if (this.fs) {\n            gl.deleteShader(this.fs);\n            this.fs = null;\n        }\n        if (this.program) {\n            gl.deleteProgram(this.program);\n            this.program = null;\n        }\n    }\n    static newColoredTextured(context) {\n        let vs = `\nattribute vec4 ${Shader.POSITION};\nattribute vec4 ${Shader.COLOR};\nattribute vec2 ${Shader.TEXCOORDS};\nuniform mat4 ${Shader.MVP_MATRIX};\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main () {\n\tv_color = ${Shader.COLOR};\n\tv_texCoords = ${Shader.TEXCOORDS};\n\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n}\n`;\n        let fs = `\n#ifdef GL_ES\n\t#define LOWP lowp\n\tprecision mediump float;\n#else\n\t#define LOWP\n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\n\nvoid main () {\n\tgl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}\n`;\n        return new Shader(context, vs, fs);\n    }\n    static newTwoColoredTextured(context) {\n        let vs = `\nattribute vec4 ${Shader.POSITION};\nattribute vec4 ${Shader.COLOR};\nattribute vec4 ${Shader.COLOR2};\nattribute vec2 ${Shader.TEXCOORDS};\nuniform mat4 ${Shader.MVP_MATRIX};\nvarying vec4 v_light;\nvarying vec4 v_dark;\nvarying vec2 v_texCoords;\n\nvoid main () {\n\tv_light = ${Shader.COLOR};\n\tv_dark = ${Shader.COLOR2};\n\tv_texCoords = ${Shader.TEXCOORDS};\n\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n}\n`;\n        let fs = `\n#ifdef GL_ES\n\t#define LOWP lowp\n\tprecision mediump float;\n#else\n\t#define LOWP\n#endif\nvarying LOWP vec4 v_light;\nvarying LOWP vec4 v_dark;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\n\nvoid main () {\n\tvec4 texColor = texture2D(u_texture, v_texCoords);\n\tgl_FragColor.a = texColor.a * v_light.a;\n\tgl_FragColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n}\n`;\n        return new Shader(context, vs, fs);\n    }\n    static newColored(context) {\n        let vs = `\nattribute vec4 ${Shader.POSITION};\nattribute vec4 ${Shader.COLOR};\nuniform mat4 ${Shader.MVP_MATRIX};\nvarying vec4 v_color;\n\nvoid main () {\n\tv_color = ${Shader.COLOR};\n\tgl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n}\n`;\n        let fs = `\n#ifdef GL_ES\n\t#define LOWP lowp\n\tprecision mediump float;\n#else\n\t#define LOWP\n#endif\nvarying LOWP vec4 v_color;\n\nvoid main () {\n\tgl_FragColor = v_color;\n}\n`;\n        return new Shader(context, vs, fs);\n    }\n}\nShader.MVP_MATRIX = \"u_projTrans\";\nShader.POSITION = \"a_position\";\nShader.COLOR = \"a_color\";\nShader.COLOR2 = \"a_color2\";\nShader.TEXCOORDS = \"a_texCoords\";\nShader.SAMPLER = \"u_texture\";\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Shader } from \"./Shader\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class Mesh {\n    getAttributes() { return this.attributes; }\n    maxVertices() { return this.vertices.length / this.elementsPerVertex; }\n    numVertices() { return this.verticesLength / this.elementsPerVertex; }\n    setVerticesLength(length) {\n        this.dirtyVertices = true;\n        this.verticesLength = length;\n    }\n    getVertices() { return this.vertices; }\n    maxIndices() { return this.indices.length; }\n    numIndices() { return this.indicesLength; }\n    setIndicesLength(length) {\n        this.dirtyIndices = true;\n        this.indicesLength = length;\n    }\n    getIndices() { return this.indices; }\n    ;\n    getVertexSizeInFloats() {\n        let size = 0;\n        for (var i = 0; i < this.attributes.length; i++) {\n            let attribute = this.attributes[i];\n            size += attribute.numElements;\n        }\n        return size;\n    }\n    constructor(context, attributes, maxVertices, maxIndices) {\n        this.attributes = attributes;\n        this.verticesBuffer = null;\n        this.verticesLength = 0;\n        this.dirtyVertices = false;\n        this.indicesBuffer = null;\n        this.indicesLength = 0;\n        this.dirtyIndices = false;\n        this.elementsPerVertex = 0;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.elementsPerVertex = 0;\n        for (let i = 0; i < attributes.length; i++) {\n            this.elementsPerVertex += attributes[i].numElements;\n        }\n        this.vertices = new Float32Array(maxVertices * this.elementsPerVertex);\n        this.indices = new Uint16Array(maxIndices);\n        this.context.addRestorable(this);\n    }\n    setVertices(vertices) {\n        this.dirtyVertices = true;\n        if (vertices.length > this.vertices.length)\n            throw Error(\"Mesh can't store more than \" + this.maxVertices() + \" vertices\");\n        this.vertices.set(vertices, 0);\n        this.verticesLength = vertices.length;\n    }\n    setIndices(indices) {\n        this.dirtyIndices = true;\n        if (indices.length > this.indices.length)\n            throw Error(\"Mesh can't store more than \" + this.maxIndices() + \" indices\");\n        this.indices.set(indices, 0);\n        this.indicesLength = indices.length;\n    }\n    draw(shader, primitiveType) {\n        this.drawWithOffset(shader, primitiveType, 0, this.indicesLength > 0 ? this.indicesLength : this.verticesLength / this.elementsPerVertex);\n    }\n    drawWithOffset(shader, primitiveType, offset, count) {\n        let gl = this.context.gl;\n        if (this.dirtyVertices || this.dirtyIndices)\n            this.update();\n        this.bind(shader);\n        if (this.indicesLength > 0) {\n            gl.drawElements(primitiveType, count, gl.UNSIGNED_SHORT, offset * 2);\n        }\n        else {\n            gl.drawArrays(primitiveType, offset, count);\n        }\n        this.unbind(shader);\n    }\n    bind(shader) {\n        let gl = this.context.gl;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.verticesBuffer);\n        let offset = 0;\n        for (let i = 0; i < this.attributes.length; i++) {\n            let attrib = this.attributes[i];\n            let location = shader.getAttributeLocation(attrib.name);\n            gl.enableVertexAttribArray(location);\n            gl.vertexAttribPointer(location, attrib.numElements, gl.FLOAT, false, this.elementsPerVertex * 4, offset * 4);\n            offset += attrib.numElements;\n        }\n        if (this.indicesLength > 0)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n    }\n    unbind(shader) {\n        let gl = this.context.gl;\n        for (let i = 0; i < this.attributes.length; i++) {\n            let attrib = this.attributes[i];\n            let location = shader.getAttributeLocation(attrib.name);\n            gl.disableVertexAttribArray(location);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        if (this.indicesLength > 0)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    update() {\n        let gl = this.context.gl;\n        if (this.dirtyVertices) {\n            if (!this.verticesBuffer) {\n                this.verticesBuffer = gl.createBuffer();\n            }\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.verticesBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.vertices.subarray(0, this.verticesLength), gl.DYNAMIC_DRAW);\n            this.dirtyVertices = false;\n        }\n        if (this.dirtyIndices) {\n            if (!this.indicesBuffer) {\n                this.indicesBuffer = gl.createBuffer();\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices.subarray(0, this.indicesLength), gl.DYNAMIC_DRAW);\n            this.dirtyIndices = false;\n        }\n    }\n    restore() {\n        this.verticesBuffer = null;\n        this.indicesBuffer = null;\n        this.update();\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        gl.deleteBuffer(this.verticesBuffer);\n        gl.deleteBuffer(this.indicesBuffer);\n    }\n}\nexport class VertexAttribute {\n    constructor(name, type, numElements) {\n        this.name = name;\n        this.type = type;\n        this.numElements = numElements;\n    }\n}\nexport class Position2Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.POSITION, VertexAttributeType.Float, 2);\n    }\n}\nexport class Position3Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.POSITION, VertexAttributeType.Float, 3);\n    }\n}\nexport class TexCoordAttribute extends VertexAttribute {\n    constructor(unit = 0) {\n        super(Shader.TEXCOORDS + (unit == 0 ? \"\" : unit), VertexAttributeType.Float, 2);\n    }\n}\nexport class ColorAttribute extends VertexAttribute {\n    constructor() {\n        super(Shader.COLOR, VertexAttributeType.Float, 4);\n    }\n}\nexport class Color2Attribute extends VertexAttribute {\n    constructor() {\n        super(Shader.COLOR2, VertexAttributeType.Float, 4);\n    }\n}\nexport var VertexAttributeType;\n(function (VertexAttributeType) {\n    VertexAttributeType[VertexAttributeType[\"Float\"] = 0] = \"Float\";\n})(VertexAttributeType || (VertexAttributeType = {}));\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Vector2, MathUtils } from \"@esotericsoftware/spine-core\";\nimport { Mesh, Position2Attribute, ColorAttribute } from \"./Mesh\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class ShapeRenderer {\n    constructor(context, maxVertices = 10920) {\n        this.isDrawing = false;\n        this.shapeType = ShapeType.Filled;\n        this.color = new Color(1, 1, 1, 1);\n        this.shader = null;\n        this.vertexIndex = 0;\n        this.tmp = new Vector2();\n        if (maxVertices > 10920)\n            throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.mesh = new Mesh(context, [new Position2Attribute(), new ColorAttribute()], maxVertices, 0);\n        let gl = this.context.gl;\n        this.srcColorBlend = gl.SRC_ALPHA;\n        this.srcAlphaBlend = gl.ONE;\n        this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n    }\n    begin(shader) {\n        if (this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has already been called\");\n        this.shader = shader;\n        this.vertexIndex = 0;\n        this.isDrawing = true;\n        let gl = this.context.gl;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n    }\n    setBlendMode(srcColorBlend, srcAlphaBlend, dstBlend) {\n        this.srcColorBlend = srcColorBlend;\n        this.srcAlphaBlend = srcAlphaBlend;\n        this.dstBlend = dstBlend;\n        if (this.isDrawing) {\n            this.flush();\n            let gl = this.context.gl;\n            gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n        }\n    }\n    setColor(color) {\n        this.color.setFromColor(color);\n    }\n    setColorWith(r, g, b, a) {\n        this.color.set(r, g, b, a);\n    }\n    point(x, y, color) {\n        this.check(ShapeType.Point, 1);\n        if (!color)\n            color = this.color;\n        this.vertex(x, y, color);\n    }\n    line(x, y, x2, y2, color) {\n        this.check(ShapeType.Line, 2);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (!color)\n            color = this.color;\n        this.vertex(x, y, color);\n        this.vertex(x2, y2, color);\n    }\n    triangle(filled, x, y, x2, y2, x3, y3, color, color2, color3) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 3);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (!color)\n            color = this.color;\n        if (!color2)\n            color2 = this.color;\n        if (!color3)\n            color3 = this.color;\n        if (filled) {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n        }\n        else {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x2, y2, color);\n            this.vertex(x3, y3, color2);\n            this.vertex(x3, y3, color);\n            this.vertex(x, y, color2);\n        }\n    }\n    quad(filled, x, y, x2, y2, x3, y3, x4, y4, color, color2, color3, color4) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 3);\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        if (!color)\n            color = this.color;\n        if (!color2)\n            color2 = this.color;\n        if (!color3)\n            color3 = this.color;\n        if (!color4)\n            color4 = this.color;\n        if (filled) {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n            this.vertex(x3, y3, color3);\n            this.vertex(x4, y4, color4);\n            this.vertex(x, y, color);\n        }\n        else {\n            this.vertex(x, y, color);\n            this.vertex(x2, y2, color2);\n            this.vertex(x2, y2, color2);\n            this.vertex(x3, y3, color3);\n            this.vertex(x3, y3, color3);\n            this.vertex(x4, y4, color4);\n            this.vertex(x4, y4, color4);\n            this.vertex(x, y, color);\n        }\n    }\n    rect(filled, x, y, width, height, color) {\n        this.quad(filled, x, y, x + width, y, x + width, y + height, x, y + height, color, color, color, color);\n    }\n    rectLine(filled, x1, y1, x2, y2, width, color) {\n        this.check(filled ? ShapeType.Filled : ShapeType.Line, 8);\n        if (!color)\n            color = this.color;\n        let t = this.tmp.set(y2 - y1, x1 - x2);\n        t.normalize();\n        width *= 0.5;\n        let tx = t.x * width;\n        let ty = t.y * width;\n        if (!filled) {\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n        }\n        else {\n            this.vertex(x1 + tx, y1 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x2 - tx, y2 - ty, color);\n            this.vertex(x2 + tx, y2 + ty, color);\n            this.vertex(x1 - tx, y1 - ty, color);\n        }\n    }\n    x(x, y, size) {\n        this.line(x - size, y - size, x + size, y + size);\n        this.line(x - size, y + size, x + size, y - size);\n    }\n    polygon(polygonVertices, offset, count, color) {\n        if (count < 3)\n            throw new Error(\"Polygon must contain at least 3 vertices\");\n        this.check(ShapeType.Line, count * 2);\n        if (!color)\n            color = this.color;\n        let vertices = this.mesh.getVertices();\n        let idx = this.vertexIndex;\n        offset <<= 1;\n        count <<= 1;\n        let firstX = polygonVertices[offset];\n        let firstY = polygonVertices[offset + 1];\n        let last = offset + count;\n        for (let i = offset, n = offset + count - 2; i < n; i += 2) {\n            let x1 = polygonVertices[i];\n            let y1 = polygonVertices[i + 1];\n            let x2 = 0;\n            let y2 = 0;\n            if (i + 2 >= last) {\n                x2 = firstX;\n                y2 = firstY;\n            }\n            else {\n                x2 = polygonVertices[i + 2];\n                y2 = polygonVertices[i + 3];\n            }\n            this.vertex(x1, y1, color);\n            this.vertex(x2, y2, color);\n        }\n    }\n    circle(filled, x, y, radius, color, segments = 0) {\n        if (segments == 0)\n            segments = Math.max(1, (6 * MathUtils.cbrt(radius)) | 0);\n        if (segments <= 0)\n            throw new Error(\"segments must be > 0.\");\n        if (!color)\n            color = this.color;\n        let angle = 2 * MathUtils.PI / segments;\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        let cx = radius, cy = 0;\n        if (!filled) {\n            this.check(ShapeType.Line, segments * 2 + 2);\n            for (let i = 0; i < segments; i++) {\n                this.vertex(x + cx, y + cy, color);\n                let temp = cx;\n                cx = cos * cx - sin * cy;\n                cy = sin * temp + cos * cy;\n                this.vertex(x + cx, y + cy, color);\n            }\n            // Ensure the last segment is identical to the first.\n            this.vertex(x + cx, y + cy, color);\n        }\n        else {\n            this.check(ShapeType.Filled, segments * 3 + 3);\n            segments--;\n            for (let i = 0; i < segments; i++) {\n                this.vertex(x, y, color);\n                this.vertex(x + cx, y + cy, color);\n                let temp = cx;\n                cx = cos * cx - sin * cy;\n                cy = sin * temp + cos * cy;\n                this.vertex(x + cx, y + cy, color);\n            }\n            // Ensure the last segment is identical to the first.\n            this.vertex(x, y, color);\n            this.vertex(x + cx, y + cy, color);\n        }\n        let temp = cx;\n        cx = radius;\n        cy = 0;\n        this.vertex(x + cx, y + cy, color);\n    }\n    curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color) {\n        this.check(ShapeType.Line, segments * 2 + 2);\n        if (!color)\n            color = this.color;\n        // Algorithm from: http://www.antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION\n        let subdiv_step = 1 / segments;\n        let subdiv_step2 = subdiv_step * subdiv_step;\n        let subdiv_step3 = subdiv_step * subdiv_step * subdiv_step;\n        let pre1 = 3 * subdiv_step;\n        let pre2 = 3 * subdiv_step2;\n        let pre4 = 6 * subdiv_step2;\n        let pre5 = 6 * subdiv_step3;\n        let tmp1x = x1 - cx1 * 2 + cx2;\n        let tmp1y = y1 - cy1 * 2 + cy2;\n        let tmp2x = (cx1 - cx2) * 3 - x1 + x2;\n        let tmp2y = (cy1 - cy2) * 3 - y1 + y2;\n        let fx = x1;\n        let fy = y1;\n        let dfx = (cx1 - x1) * pre1 + tmp1x * pre2 + tmp2x * subdiv_step3;\n        let dfy = (cy1 - y1) * pre1 + tmp1y * pre2 + tmp2y * subdiv_step3;\n        let ddfx = tmp1x * pre4 + tmp2x * pre5;\n        let ddfy = tmp1y * pre4 + tmp2y * pre5;\n        let dddfx = tmp2x * pre5;\n        let dddfy = tmp2y * pre5;\n        while (segments-- > 0) {\n            this.vertex(fx, fy, color);\n            fx += dfx;\n            fy += dfy;\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            this.vertex(fx, fy, color);\n        }\n        this.vertex(fx, fy, color);\n        this.vertex(x2, y2, color);\n    }\n    vertex(x, y, color) {\n        let idx = this.vertexIndex;\n        let vertices = this.mesh.getVertices();\n        vertices[idx++] = x;\n        vertices[idx++] = y;\n        vertices[idx++] = color.r;\n        vertices[idx++] = color.g;\n        vertices[idx++] = color.b;\n        vertices[idx++] = color.a;\n        this.vertexIndex = idx;\n    }\n    end() {\n        if (!this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has not been called\");\n        this.flush();\n        let gl = this.context.gl;\n        gl.disable(gl.BLEND);\n        this.isDrawing = false;\n    }\n    flush() {\n        if (this.vertexIndex == 0)\n            return;\n        if (!this.shader)\n            throw new Error(\"No shader set.\");\n        this.mesh.setVerticesLength(this.vertexIndex);\n        this.mesh.draw(this.shader, this.shapeType);\n        this.vertexIndex = 0;\n    }\n    check(shapeType, numVertices) {\n        if (!this.isDrawing)\n            throw new Error(\"ShapeRenderer.begin() has not been called\");\n        if (this.shapeType == shapeType) {\n            if (this.mesh.maxVertices() - this.mesh.numVertices() < numVertices)\n                this.flush();\n            else\n                return;\n        }\n        else {\n            this.flush();\n            this.shapeType = shapeType;\n        }\n    }\n    dispose() {\n        this.mesh.dispose();\n    }\n}\nexport var ShapeType;\n(function (ShapeType) {\n    ShapeType[ShapeType[\"Point\"] = 0] = \"Point\";\n    ShapeType[ShapeType[\"Line\"] = 1] = \"Line\";\n    ShapeType[ShapeType[\"Filled\"] = 4] = \"Filled\";\n})(ShapeType || (ShapeType = {}));\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Mesh, Position2Attribute, ColorAttribute, TexCoordAttribute, Color2Attribute } from \"./Mesh\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class PolygonBatcher {\n    constructor(context, twoColorTint = true, maxVertices = 10920) {\n        this.drawCalls = 0;\n        this.isDrawing = false;\n        this.shader = null;\n        this.lastTexture = null;\n        this.verticesLength = 0;\n        this.indicesLength = 0;\n        this.cullWasEnabled = false;\n        if (maxVertices > 10920)\n            throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        let attributes = twoColorTint ?\n            [new Position2Attribute(), new ColorAttribute(), new TexCoordAttribute(), new Color2Attribute()] :\n            [new Position2Attribute(), new ColorAttribute(), new TexCoordAttribute()];\n        this.mesh = new Mesh(context, attributes, maxVertices, maxVertices * 3);\n        let gl = this.context.gl;\n        this.srcColorBlend = gl.SRC_ALPHA;\n        this.srcAlphaBlend = gl.ONE;\n        this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n    }\n    begin(shader) {\n        if (this.isDrawing)\n            throw new Error(\"PolygonBatch is already drawing. Call PolygonBatch.end() before calling PolygonBatch.begin()\");\n        this.drawCalls = 0;\n        this.shader = shader;\n        this.lastTexture = null;\n        this.isDrawing = true;\n        let gl = this.context.gl;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n        if (PolygonBatcher.disableCulling) {\n            this.cullWasEnabled = gl.isEnabled(gl.CULL_FACE);\n            if (this.cullWasEnabled)\n                gl.disable(gl.CULL_FACE);\n        }\n    }\n    setBlendMode(srcColorBlend, srcAlphaBlend, dstBlend) {\n        if (this.srcColorBlend == srcColorBlend && this.srcAlphaBlend == srcAlphaBlend && this.dstBlend == dstBlend)\n            return;\n        this.srcColorBlend = srcColorBlend;\n        this.srcAlphaBlend = srcAlphaBlend;\n        this.dstBlend = dstBlend;\n        if (this.isDrawing) {\n            this.flush();\n            let gl = this.context.gl;\n            gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n        }\n    }\n    draw(texture, vertices, indices) {\n        if (texture != this.lastTexture) {\n            this.flush();\n            this.lastTexture = texture;\n        }\n        else if (this.verticesLength + vertices.length > this.mesh.getVertices().length ||\n            this.indicesLength + indices.length > this.mesh.getIndices().length) {\n            this.flush();\n        }\n        let indexStart = this.mesh.numVertices();\n        this.mesh.getVertices().set(vertices, this.verticesLength);\n        this.verticesLength += vertices.length;\n        this.mesh.setVerticesLength(this.verticesLength);\n        let indicesArray = this.mesh.getIndices();\n        for (let i = this.indicesLength, j = 0; j < indices.length; i++, j++)\n            indicesArray[i] = indices[j] + indexStart;\n        this.indicesLength += indices.length;\n        this.mesh.setIndicesLength(this.indicesLength);\n    }\n    flush() {\n        if (this.verticesLength == 0)\n            return;\n        if (!this.lastTexture)\n            throw new Error(\"No texture set.\");\n        if (!this.shader)\n            throw new Error(\"No shader set.\");\n        this.lastTexture.bind();\n        this.mesh.draw(this.shader, this.context.gl.TRIANGLES);\n        this.verticesLength = 0;\n        this.indicesLength = 0;\n        this.mesh.setVerticesLength(0);\n        this.mesh.setIndicesLength(0);\n        this.drawCalls++;\n        PolygonBatcher.globalDrawCalls++;\n    }\n    end() {\n        if (!this.isDrawing)\n            throw new Error(\"PolygonBatch is not drawing. Call PolygonBatch.begin() before calling PolygonBatch.end()\");\n        if (this.verticesLength > 0 || this.indicesLength > 0)\n            this.flush();\n        this.shader = null;\n        this.lastTexture = null;\n        this.isDrawing = false;\n        let gl = this.context.gl;\n        gl.disable(gl.BLEND);\n        if (PolygonBatcher.disableCulling) {\n            if (this.cullWasEnabled)\n                gl.enable(gl.CULL_FACE);\n        }\n    }\n    getDrawCalls() {\n        return this.drawCalls;\n    }\n    static getAndResetGlobalDrawCalls() {\n        let result = PolygonBatcher.globalDrawCalls;\n        PolygonBatcher.globalDrawCalls = 0;\n        return result;\n    }\n    dispose() {\n        this.mesh.dispose();\n    }\n}\nPolygonBatcher.disableCulling = false;\nPolygonBatcher.globalDrawCalls = 0;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9seWdvbkJhdGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUG9seWdvbkJhdGNoZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSS9FLE9BQU8sRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixFQUFFLGVBQWUsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUV0RyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFdkQsTUFBTSxPQUFPLGNBQWM7SUFpQjFCLFlBQWEsT0FBNkQsRUFBRSxlQUF3QixJQUFJLEVBQUUsY0FBc0IsS0FBSztRQWI3SCxjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBRWQsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUVsQixXQUFNLEdBQWtCLElBQUksQ0FBQztRQUM3QixnQkFBVyxHQUFxQixJQUFJLENBQUM7UUFDckMsbUJBQWMsR0FBRyxDQUFDLENBQUM7UUFDbkIsa0JBQWEsR0FBRyxDQUFDLENBQUM7UUFJbEIsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFHOUIsSUFBSSxXQUFXLEdBQUcsS0FBSztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsa0RBQWtELEdBQUcsV0FBVyxDQUFDLENBQUM7UUFDM0csSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLFlBQVksNEJBQTRCLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSw0QkFBNEIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNySCxJQUFJLFVBQVUsR0FBRyxZQUFZLENBQUMsQ0FBQztZQUM5QixDQUFDLElBQUksa0JBQWtCLEVBQUUsRUFBRSxJQUFJLGNBQWMsRUFBRSxFQUFFLElBQUksaUJBQWlCLEVBQUUsRUFBRSxJQUFJLGVBQWUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNsRyxDQUFDLElBQUksa0JBQWtCLEVBQUUs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","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, SkeletonBounds, Utils, RegionAttachment, MeshAttachment, PathAttachment, ClippingAttachment } from \"@esotericsoftware/spine-core\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\nexport class SkeletonDebugRenderer {\n    constructor(context) {\n        this.boneLineColor = new Color(1, 0, 0, 1);\n        this.boneOriginColor = new Color(0, 1, 0, 1);\n        this.attachmentLineColor = new Color(0, 0, 1, 0.5);\n        this.triangleLineColor = new Color(1, 0.64, 0, 0.5);\n        this.pathColor = new Color().setFromString(\"FF7F00\");\n        this.clipColor = new Color(0.8, 0, 0, 2);\n        this.aabbColor = new Color(0, 1, 0, 0.5);\n        this.drawBones = true;\n        this.drawRegionAttachments = true;\n        this.drawBoundingBoxes = true;\n        this.drawMeshHull = true;\n        this.drawMeshTriangles = true;\n        this.drawPaths = true;\n        this.drawSkeletonXY = false;\n        this.drawClipping = true;\n        this.premultipliedAlpha = false;\n        this.scale = 1;\n        this.boneWidth = 2;\n        this.bounds = new SkeletonBounds();\n        this.temp = new Array();\n        this.vertices = Utils.newFloatArray(2 * 1024);\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n    }\n    draw(shapes, skeleton, ignoredBones) {\n        let skeletonX = skeleton.x;\n        let skeletonY = skeleton.y;\n        let gl = this.context.gl;\n        let srcFunc = this.premultipliedAlpha ? gl.ONE : gl.SRC_ALPHA;\n        shapes.setBlendMode(srcFunc, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        let bones = skeleton.bones;\n        if (this.drawBones) {\n            shapes.setColor(this.boneLineColor);\n            for (let i = 0, n = bones.length; i < n; i++) {\n                let bone = bones[i];\n                if (ignoredBones && ignoredBones.indexOf(bone.data.name) > -1)\n                    continue;\n                if (!bone.parent)\n                    continue;\n                let x = bone.data.length * bone.a + bone.worldX;\n                let y = bone.data.length * bone.c + bone.worldY;\n                shapes.rectLine(true, bone.worldX, bone.worldY, x, y, this.boneWidth * this.scale);\n            }\n            if (this.drawSkeletonXY)\n                shapes.x(skeletonX, skeletonY, 4 * this.scale);\n        }\n        if (this.drawRegionAttachments) {\n            shapes.setColor(this.attachmentLineColor);\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                let attachment = slot.getAttachment();\n                if (attachment instanceof RegionAttachment) {\n                    let regionAttachment = attachment;\n                    let vertices = this.vertices;\n                    regionAttachment.computeWorldVertices(slot, vertices, 0, 2);\n                    shapes.line(vertices[0], vertices[1], vertices[2], vertices[3]);\n                    shapes.line(vertices[2], vertices[3], vertices[4], vertices[5]);\n                    shapes.line(vertices[4], vertices[5], vertices[6], vertices[7]);\n                    shapes.line(vertices[6], vertices[7], vertices[0], vertices[1]);\n                }\n            }\n        }\n        if (this.drawMeshHull || this.drawMeshTriangles) {\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof MeshAttachment))\n                    continue;\n                let mesh = attachment;\n                let vertices = this.vertices;\n                mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, vertices, 0, 2);\n                let triangles = mesh.triangles;\n                let hullLength = mesh.hullLength;\n                if (this.drawMeshTriangles) {\n                    shapes.setColor(this.triangleLineColor);\n                    for (let ii = 0, nn = triangles.length; ii < nn; ii += 3) {\n                        let v1 = triangles[ii] * 2, v2 = triangles[ii + 1] * 2, v3 = triangles[ii + 2] * 2;\n                        shapes.triangle(false, vertices[v1], vertices[v1 + 1], //\n                        vertices[v2], vertices[v2 + 1], //\n                        vertices[v3], vertices[v3 + 1] //\n                        );\n                    }\n                }\n                if (this.drawMeshHull && hullLength > 0) {\n                    shapes.setColor(this.attachmentLineColor);\n                    hullLength = (hullLength >> 1) * 2;\n                    let lastX = vertices[hullLength - 2], lastY = vertices[hullLength - 1];\n                    for (let ii = 0, nn = hullLength; ii < nn; ii += 2) {\n                        let x = vertices[ii], y = vertices[ii + 1];\n                        shapes.line(x, y, lastX, lastY);\n                        lastX = x;\n                        lastY = y;\n                    }\n                }\n            }\n        }\n        if (this.drawBoundingBoxes) {\n            let bounds = this.bounds;\n            bounds.update(skeleton, true);\n            shapes.setColor(this.aabbColor);\n            shapes.rect(false, bounds.minX, bounds.minY, bounds.getWidth(), bounds.getHeight());\n            let polygons = bounds.polygons;\n            let boxes = bounds.boundingBoxes;\n            for (let i = 0, n = polygons.length; i < n; i++) {\n                let polygon = polygons[i];\n                shapes.setColor(boxes[i].color);\n                shapes.polygon(polygon, 0, polygon.length);\n            }\n        }\n        if (this.drawPaths) {\n            let slots = skeleton.slots;\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof PathAttachment))\n                    continue;\n                let path = attachment;\n                let nn = path.worldVerticesLength;\n                let world = this.temp = Utils.setArraySize(this.temp, nn, 0);\n                path.computeWorldVertices(slot, 0, nn, world, 0, 2);\n                let color = this.pathColor;\n                let x1 = world[2], y1 = world[3], x2 = 0, y2 = 0;\n                if (path.closed) {\n                    shapes.setColor(color);\n                    let cx1 = world[0], cy1 = world[1], cx2 = world[nn - 2], cy2 = world[nn - 1];\n                    x2 = world[nn - 4];\n                    y2 = world[nn - 3];\n                    shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 32);\n                    shapes.setColor(SkeletonDebugRenderer.LIGHT_GRAY);\n                    shapes.line(x1, y1, cx1, cy1);\n                    shapes.line(x2, y2, cx2, cy2);\n                }\n                nn -= 4;\n                for (let ii = 4; ii < nn; ii += 6) {\n                    let cx1 = world[ii], cy1 = world[ii + 1], cx2 = world[ii + 2], cy2 = world[ii + 3];\n                    x2 = world[ii + 4];\n                    y2 = world[ii + 5];\n                    shapes.setColor(color);\n                    shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, 32);\n                    shapes.setColor(SkeletonDebugRenderer.LIGHT_GRAY);\n                    shapes.line(x1, y1, cx1, cy1);\n                    shapes.line(x2, y2, cx2, cy2);\n                    x1 = x2;\n                    y1 = y2;\n                }\n            }\n        }\n        if (this.drawBones) {\n            shapes.setColor(this.boneOriginColor);\n            for (let i = 0, n = bones.length; i < n; i++) {\n                let bone = bones[i];\n                if (ignoredBones && ignoredBones.indexOf(bone.data.name) > -1)\n                    continue;\n                shapes.circle(true, bone.worldX, bone.worldY, 3 * this.scale, this.boneOriginColor, 8);\n            }\n        }\n        if (this.drawClipping) {\n            let slots = skeleton.slots;\n            shapes.setColor(this.clipColor);\n            for (let i = 0, n = slots.length; i < n; i++) {\n                let slot = slots[i];\n                if (!slot.bone.active)\n                    continue;\n                let attachment = slot.getAttachment();\n                if (!(attachment instanceof ClippingAttachment))\n                    continue;\n                let clip = attachment;\n                let nn = clip.worldVerticesLength;\n                let world = this.temp = Utils.setArraySize(this.temp, nn, 0);\n                clip.computeWorldVertices(slot, 0, nn, world, 0, 2);\n                for (let i = 0, n = world.length; i < n; i += 2) {\n                    let x = world[i];\n                    let y = world[i + 1];\n                    let x2 = world[(i + 2) % world.length];\n                    let y2 = world[(i + 3) % world.length];\n                    shapes.line(x, y, x2, y2);\n                }\n            }\n        }\n    }\n    dispose() {\n    }\n}\nSkeletonDebugRenderer.LIGHT_GRAY = new Color(192 / 255, 192 / 255, 192 / 255, 1);\nSkeletonDebugRenderer.GREEN = new Color(0, 1, 0, 1);\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, SkeletonClipping, Vector2, Utils, RegionAttachment, MeshAttachment, ClippingAttachment } from \"@esotericsoftware/spine-core\";\nimport { WebGLBlendModeConverter } from \"./WebGL\";\nclass Renderable {\n    constructor(vertices, numVertices, numFloats) {\n        this.vertices = vertices;\n        this.numVertices = numVertices;\n        this.numFloats = numFloats;\n    }\n}\n;\nexport class SkeletonRenderer {\n    constructor(context, twoColorTint = true) {\n        this.premultipliedAlpha = false;\n        this.tempColor = new Color();\n        this.tempColor2 = new Color();\n        this.vertexSize = 2 + 2 + 4;\n        this.twoColorTint = false;\n        this.renderable = new Renderable([], 0, 0);\n        this.clipper = new SkeletonClipping();\n        this.temp = new Vector2();\n        this.temp2 = new Vector2();\n        this.temp3 = new Color();\n        this.temp4 = new Color();\n        this.twoColorTint = twoColorTint;\n        if (twoColorTint)\n            this.vertexSize += 4;\n        this.vertices = Utils.newFloatArray(this.vertexSize * 1024);\n    }\n    draw(batcher, skeleton, slotRangeStart = -1, slotRangeEnd = -1, transformer = null) {\n        let clipper = this.clipper;\n        let premultipliedAlpha = this.premultipliedAlpha;\n        let twoColorTint = this.twoColorTint;\n        let blendMode = null;\n        let tempPos = this.temp;\n        let tempUv = this.temp2;\n        let tempLight = this.temp3;\n        let tempDark = this.temp4;\n        let renderable = this.renderable;\n        let uvs;\n        let triangles;\n        let drawOrder = skeleton.drawOrder;\n        let attachmentColor;\n        let skeletonColor = skeleton.color;\n        let vertexSize = twoColorTint ? 12 : 8;\n        let inRange = false;\n        if (slotRangeStart == -1)\n            inRange = true;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let clippedVertexSize = clipper.isClipping() ? 2 : vertexSize;\n            let slot = drawOrder[i];\n            if (!slot.bone.active) {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (slotRangeStart >= 0 && slotRangeStart == slot.data.index) {\n                inRange = true;\n            }\n            if (!inRange) {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (slotRangeEnd >= 0 && slotRangeEnd == slot.data.index) {\n                inRange = false;\n            }\n            let attachment = slot.getAttachment();\n            let texture;\n            if (attachment instanceof RegionAttachment) {\n                let region = attachment;\n                renderable.vertices = this.vertices;\n                renderable.numVertices = 4;\n                renderable.numFloats = clippedVertexSize << 2;\n                region.computeWorldVertices(slot, renderable.vertices, 0, clippedVertexSize);\n                triangles = SkeletonRenderer.QUAD_TRIANGLES;\n                uvs = region.uvs;\n                texture = region.region.texture;\n                attachmentColor = region.color;\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                renderable.vertices = this.vertices;\n                renderable.numVertices = (mesh.worldVerticesLength >> 1);\n                renderable.numFloats = renderable.numVertices * clippedVertexSize;\n                if (renderable.numFloats > renderable.vertices.length) {\n                    renderable.vertices = this.vertices = Utils.newFloatArray(renderable.numFloats);\n                }\n                mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, renderable.vertices, 0, clippedVertexSize);\n                triangles = mesh.triangles;\n                texture = mesh.region.texture;\n                uvs = mesh.uvs;\n                attachmentColor = mesh.color;\n            }\n            else if (attachment instanceof ClippingAttachment) {\n                let clip = (attachment);\n                clipper.clipStart(slot, clip);\n                continue;\n            }\n            else {\n                clipper.clipEndWithSlot(slot);\n                continue;\n            }\n            if (texture) {\n                let slotColor = slot.color;\n                let finalColor = this.tempColor;\n                finalColor.r = skeletonColor.r * slotColor.r * attachmentColor.r;\n                finalColor.g = skeletonColor.g * slotColor.g * attachmentColor.g;\n                finalColor.b = skeletonColor.b * slotColor.b * attachmentColor.b;\n                finalColor.a = skeletonColor.a * slotColor.a * attachmentColor.a;\n                if (premultipliedAlpha) {\n                    finalColor.r *= finalColor.a;\n                    finalColor.g *= finalColor.a;\n                    finalColor.b *= finalColor.a;\n                }\n                let darkColor = this.tempColor2;\n                if (!slot.darkColor)\n                    darkColor.set(0, 0, 0, 1.0);\n                else {\n                    if (premultipliedAlpha) {\n                        darkColor.r = slot.darkColor.r * finalColor.a;\n                        darkColor.g = slot.darkColor.g * finalColor.a;\n                        darkColor.b = slot.darkColor.b * finalColor.a;\n                    }\n                    else {\n                        darkColor.setFromColor(slot.darkColor);\n                    }\n                    darkColor.a = premultipliedAlpha ? 1.0 : 0.0;\n                }\n                let slotBlendMode = slot.data.blendMode;\n                if (slotBlendMode != blendMode) {\n                    blendMode = slotBlendMode;\n                    batcher.setBlendMode(WebGLBlendModeConverter.getSourceColorGLBlendMode(blendMode, premultipliedAlpha), WebGLBlendModeConverter.getSourceAlphaGLBlendMode(blendMode), WebGLBlendModeConverter.getDestGLBlendMode(blendMode));\n                }\n                if (clipper.isClipping()) {\n                    clipper.clipTriangles(renderable.vertices, renderable.numFloats, triangles, triangles.length, uvs, finalColor, darkColor, twoColorTint);\n                    let clippedVertices = new Float32Array(clipper.clippedVertices);\n                    let clippedTriangles = clipper.clippedTriangles;\n                    if (transformer)\n                        transformer(clippedVertices, clippedVertices.length, vertexSize);\n                    batcher.draw(texture, clippedVertices, clippedTriangles);\n                }\n                else {\n                    let verts = renderable.vertices;\n                    if (!twoColorTint) {\n                        for (let v = 2, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                            verts[v] = finalColor.r;\n                            verts[v + 1] = finalColor.g;\n                            verts[v + 2] = finalColor.b;\n                            verts[v + 3] = finalColor.a;\n                            verts[v + 4] = uvs[u];\n                            verts[v + 5] = uvs[u + 1];\n                        }\n                    }\n                    else {\n                        for (let v = 2, u = 0, n = renderable.numFloats; v < n; v += vertexSize, u += 2) {\n                            verts[v] = finalColor.r;\n                            verts[v + 1] = finalColor.g;\n                            verts[v + 2] = finalColor.b;\n                            verts[v + 3] = finalColor.a;\n                            verts[v + 4] = uvs[u];\n                            verts[v + 5] = uvs[u + 1];\n                            verts[v + 6] = darkColor.r;\n                            verts[v + 7] = darkColor.g;\n                            verts[v + 8] = darkColor.b;\n                            verts[v + 9] = darkColor.a;\n                        }\n                    }\n                    let view = renderable.vertices.subarray(0, renderable.numFloats);\n                    if (transformer)\n                        transformer(renderable.vertices, renderable.numFloats, vertexSize);\n                    batcher.draw(texture, view, triangles);\n                }\n            }\n            clipper.clipEndWithSlot(slot);\n        }\n        clipper.clipEnd();\n    }\n}\nSkeletonRenderer.QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25SZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2VsZXRvblJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQW1CLEtBQUssRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUF1QixnQkFBZ0IsRUFBc0IsY0FBYyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFHdk0sT0FBTyxFQUFnQyx1QkFBdUIsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUdoRixNQUFNLFVBQVU7SUFDZixZQUFvQixRQUF5QixFQUFTLFdBQW1CLEVBQVMsU0FBaUI7UUFBL0UsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFBUyxnQkFBVyxHQUFYLFdBQVcsQ0FBUTtRQUFTLGNBQVMsR0FBVCxTQUFTLENBQVE7SUFBSSxDQUFDO0NBQ3hHO0FBQUEsQ0FBQztBQUlGLE1BQU0sT0FBTyxnQkFBZ0I7SUFnQjVCLFlBQWEsT0FBcUMsRUFBRSxlQUF3QixJQUFJO1FBYmhGLHVCQUFrQixHQUFHLEtBQUssQ0FBQztRQUNuQixjQUFTLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUN4QixlQUFVLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUV6QixlQUFVLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkIsaUJBQVksR0FBRyxLQUFLLENBQUM7UUFDckIsZUFBVSxHQUFlLElBQUksVUFBVSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDbEQsWUFBTyxHQUFxQixJQUFJLGdCQUFnQixFQUFFLENBQUM7UUFDbkQsU0FBSSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUFDckIsVUFBSyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUFDdEIsVUFBSyxHQUFHLElB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LENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDdEIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO3lCQUMxQjtxQkFDRDt5QkFBTTt3QkFDTixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLFVBQVUsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFOzRCQUNoRixLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQzs0QkFDeEIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDOzRCQUM1QixLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7NEJBQzVCLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQzs0QkFDNUIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ3RCLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzs0QkFDMUIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDOzRCQUMzQixLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7NEJBQzNCLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQzs0QkFDM0IsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDO3lCQUMzQjtxQkFDRDtvQkFDRCxJQUFJLElBQUksR0FBSSxVQUFVLENBQUMsUUFBeUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztvQkFDbkYsSUFBSSxXQUFXO3dCQUFFLFdBQVcsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUM7b0JBQ3BGLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztpQkFDdkM7YUFDRDtZQUVELE9BQU8sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDOUI7UUFDRCxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbkIsQ0FBQzs7QUE1S00sK0JBQWMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils } from \"@esotericsoftware/spine-core\";\nimport { OrthoCamera } from \"./Camera\";\nimport { PolygonBatcher } from \"./PolygonBatcher\";\nimport { Shader } from \"./Shader\";\nimport { ShapeRenderer } from \"./ShapeRenderer\";\nimport { SkeletonDebugRenderer } from \"./SkeletonDebugRenderer\";\nimport { SkeletonRenderer } from \"./SkeletonRenderer\";\nimport { ManagedWebGLRenderingContext } from \"./WebGL\";\n;\nconst quad = [\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n];\nconst QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\nconst WHITE = new Color(1, 1, 1, 1);\nexport class SceneRenderer {\n    constructor(canvas, context, twoColorTint = true) {\n        this.twoColorTint = false;\n        this.activeRenderer = null;\n        this.canvas = canvas;\n        this.context = context instanceof ManagedWebGLRenderingContext ? context : new ManagedWebGLRenderingContext(context);\n        this.twoColorTint = twoColorTint;\n        this.camera = new OrthoCamera(canvas.width, canvas.height);\n        this.batcherShader = twoColorTint ? Shader.newTwoColoredTextured(this.context) : Shader.newColoredTextured(this.context);\n        this.batcher = new PolygonBatcher(this.context, twoColorTint);\n        this.shapesShader = Shader.newColored(this.context);\n        this.shapes = new ShapeRenderer(this.context);\n        this.skeletonRenderer = new SkeletonRenderer(this.context, twoColorTint);\n        this.skeletonDebugRenderer = new SkeletonDebugRenderer(this.context);\n    }\n    dispose() {\n        this.batcher.dispose();\n        this.batcherShader.dispose();\n        this.shapes.dispose();\n        this.shapesShader.dispose();\n        this.skeletonDebugRenderer.dispose();\n    }\n    begin() {\n        this.camera.update();\n        this.enableRenderer(this.batcher);\n    }\n    drawSkeleton(skeleton, premultipliedAlpha = false, slotRangeStart = -1, slotRangeEnd = -1, transform = null) {\n        this.enableRenderer(this.batcher);\n        this.skeletonRenderer.premultipliedAlpha = premultipliedAlpha;\n        this.skeletonRenderer.draw(this.batcher, skeleton, slotRangeStart, slotRangeEnd, transform);\n    }\n    drawSkeletonDebug(skeleton, premultipliedAlpha = false, ignoredBones) {\n        this.enableRenderer(this.shapes);\n        this.skeletonDebugRenderer.premultipliedAlpha = premultipliedAlpha;\n        this.skeletonDebugRenderer.draw(this.shapes, skeleton, ignoredBones);\n    }\n    drawTexture(texture, x, y, width, height, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawTextureUV(texture, x, y, width, height, u, v, u2, v2, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u;\n        quad[i++] = v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u2;\n        quad[i++] = v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u2;\n        quad[i++] = v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u;\n        quad[i++] = v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawTextureRotated(texture, x, y, width, height, pivotX, pivotY, angle, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        // bottom left and top right corner points relative to origin\n        let worldOriginX = x + pivotX;\n        let worldOriginY = y + pivotY;\n        let fx = -pivotX;\n        let fy = -pivotY;\n        let fx2 = width - pivotX;\n        let fy2 = height - pivotY;\n        // construct corner points, start from top left and go counter clockwise\n        let p1x = fx;\n        let p1y = fy;\n        let p2x = fx;\n        let p2y = fy2;\n        let p3x = fx2;\n        let p3y = fy2;\n        let p4x = fx2;\n        let p4y = fy;\n        let x1 = 0;\n        let y1 = 0;\n        let x2 = 0;\n        let y2 = 0;\n        let x3 = 0;\n        let y3 = 0;\n        let x4 = 0;\n        let y4 = 0;\n        // rotate\n        if (angle != 0) {\n            let cos = MathUtils.cosDeg(angle);\n            let sin = MathUtils.sinDeg(angle);\n            x1 = cos * p1x - sin * p1y;\n            y1 = sin * p1x + cos * p1y;\n            x4 = cos * p2x - sin * p2y;\n            y4 = sin * p2x + cos * p2y;\n            x3 = cos * p3x - sin * p3y;\n            y3 = sin * p3x + cos * p3y;\n            x2 = x3 + (x1 - x4);\n            y2 = y3 + (y1 - y4);\n        }\n        else {\n            x1 = p1x;\n            y1 = p1y;\n            x4 = p2x;\n            y4 = p2y;\n            x3 = p3x;\n            y3 = p3y;\n            x2 = p4x;\n            y2 = p4y;\n        }\n        x1 += worldOriginX;\n        y1 += worldOriginY;\n        x2 += worldOriginX;\n        y2 += worldOriginY;\n        x3 += worldOriginX;\n        y3 += worldOriginY;\n        x4 += worldOriginX;\n        y4 += worldOriginY;\n        var i = 0;\n        quad[i++] = x1;\n        quad[i++] = y1;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x2;\n        quad[i++] = y2;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x3;\n        quad[i++] = y3;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 1;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x4;\n        quad[i++] = y4;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(texture, quad, QUAD_TRIANGLES);\n    }\n    drawRegion(region, x, y, width, height, color) {\n        this.enableRenderer(this.batcher);\n        if (!color)\n            color = WHITE;\n        var i = 0;\n        quad[i++] = x;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u;\n        quad[i++] = region.v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u2;\n        quad[i++] = region.v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x + width;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u2;\n        quad[i++] = region.v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x;\n        quad[i++] = y + height;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = region.u;\n        quad[i++] = region.v;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.batcher.draw(region.page.texture, quad, QUAD_TRIANGLES);\n    }\n    line(x, y, x2, y2, color, color2) {\n        this.enableRenderer(this.shapes);\n        this.shapes.line(x, y, x2, y2, color);\n    }\n    triangle(filled, x, y, x2, y2, x3, y3, color, color2, color3) {\n        this.enableRenderer(this.shapes);\n        this.shapes.triangle(filled, x, y, x2, y2, x3, y3, color, color2, color3);\n    }\n    quad(filled, x, y, x2, y2, x3, y3, x4, y4, color, color2, color3, color4) {\n        this.enableRenderer(this.shapes);\n        this.shapes.quad(filled, x, y, x2, y2, x3, y3, x4, y4, color, color2, color3, color4);\n    }\n    rect(filled, x, y, width, height, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.rect(filled, x, y, width, height, color);\n    }\n    rectLine(filled, x1, y1, x2, y2, width, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.rectLine(filled, x1, y1, x2, y2, width, color);\n    }\n    polygon(polygonVertices, offset, count, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.polygon(polygonVertices, offset, count, color);\n    }\n    circle(filled, x, y, radius, color, segments = 0) {\n        this.enableRenderer(this.shapes);\n        this.shapes.circle(filled, x, y, radius, color, segments);\n    }\n    curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color) {\n        this.enableRenderer(this.shapes);\n        this.shapes.curve(x1, y1, cx1, cy1, cx2, cy2, x2, y2, segments, color);\n    }\n    end() {\n        if (this.activeRenderer === this.batcher)\n            this.batcher.end();\n        else if (this.activeRenderer === this.shapes)\n            this.shapes.end();\n        this.activeRenderer = null;\n    }\n    resize(resizeMode) {\n        let canvas = this.canvas;\n        var dpr = window.devicePixelRatio || 1;\n        var w = Math.round(canvas.clientWidth * dpr);\n        var h = Math.round(canvas.clientHeight * dpr);\n        if (canvas.width != w || canvas.height != h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n        this.context.gl.viewport(0, 0, canvas.width, canvas.height);\n        // Nothing to do for stretch, we simply apply the viewport size of the camera.\n        if (resizeMode === ResizeMode.Expand)\n            this.camera.setViewport(w, h);\n        else if (resizeMode === ResizeMode.Fit) {\n            let sourceWidth = canvas.width, sourceHeight = canvas.height;\n            let targetWidth = this.camera.viewportWidth, targetHeight = this.camera.viewportHeight;\n            let targetRatio = targetHeight / targetWidth;\n            let sourceRatio = sourceHeight / sourceWidth;\n            let scale = targetRatio < sourceRatio ? targetWidth / sourceWidth : targetHeight / sourceHeight;\n            this.camera.setViewport(sourceWidth * scale, sourceHeight * scale);\n        }\n        this.camera.update();\n    }\n    enableRenderer(renderer) {\n        if (this.activeRenderer === renderer)\n            return;\n        this.end();\n        if (renderer instanceof PolygonBatcher) {\n            this.batcherShader.bind();\n            this.batcherShader.setUniform4x4f(Shader.MVP_MATRIX, this.camera.projectionView.values);\n            this.batcherShader.setUniformi(\"u_texture\", 0);\n            this.batcher.begin(this.batcherShader);\n            this.activeRenderer = this.batcher;\n        }\n        else if (renderer instanceof ShapeRenderer) {\n            this.shapesShader.bind();\n            this.shapesShader.setUniform4x4f(Shader.MVP_MATRIX, this.camera.projectionView.values);\n            this.shapes.begin(this.shapesShader);\n            this.activeRenderer = this.shapes;\n        }\n        else\n            this.activeRenderer = this.skeletonDebugRenderer;\n    }\n}\nexport var ResizeMode;\n(function (ResizeMode) {\n    ResizeMode[ResizeMode[\"Stretch\"] = 0] = \"Stretch\";\n    ResizeMode[ResizeMode[\"Expand\"] = 1] = \"Expand\";\n    ResizeMode[ResizeMode[\"Fit\"] = 2] = \"Fit\";\n})(ResizeMode || (ResizeMode = {}));\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Texture } from \"@esotericsoftware/spine-core\";\nexport class CanvasTexture extends Texture {\n    constructor(image) {\n        super(image);\n    }\n    setFilters(minFilter, magFilter) { }\n    setWraps(uWrap, vWrap) { }\n    dispose() { }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FudmFzVGV4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9DYW52YXNUZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQUUsT0FBTyxFQUE4QixNQUFNLDhCQUE4QixDQUFDO0FBRW5GLE1BQU0sT0FBTyxhQUFjLFNBQVEsT0FBTztJQUN6QyxZQUFhLEtBQXFDO1FBQ2pELEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNkLENBQUM7SUFFRCxVQUFVLENBQUUsU0FBd0IsRUFBRSxTQUF3QixJQUFJLENBQUM7SUFDbkUsUUFBUSxDQUFFLEtBQWtCLEVBQUUsS0FBa0IsSUFBSSxDQUFDO0lBQ3JELE9BQU8sS0FBTSxDQUFDO0NBQ2QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils, Color, RegionAttachment, MeshAttachment } from \"@esotericsoftware/spine-core\";\nconst worldVertices = Utils.newFloatArray(8);\nexport class SkeletonRenderer {\n    constructor(context) {\n        this.triangleRendering = false;\n        this.debugRendering = false;\n        this.vertices = Utils.newFloatArray(8 * 1024);\n        this.tempColor = new Color();\n        this.ctx = context;\n    }\n    draw(skeleton) {\n        if (this.triangleRendering)\n            this.drawTriangles(skeleton);\n        else\n            this.drawImages(skeleton);\n    }\n    drawImages(skeleton) {\n        let ctx = this.ctx;\n        let color = this.tempColor;\n        let skeletonColor = skeleton.color;\n        let drawOrder = skeleton.drawOrder;\n        if (this.debugRendering)\n            ctx.strokeStyle = \"green\";\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            let bone = slot.bone;\n            if (!bone.active)\n                continue;\n            let attachment = slot.getAttachment();\n            if (!(attachment instanceof RegionAttachment))\n                continue;\n            attachment.computeWorldVertices(slot, worldVertices, 0, 2);\n            let region = attachment.region;\n            let image = region.texture.getImage();\n            let slotColor = slot.color;\n            let regionColor = attachment.color;\n            color.set(skeletonColor.r * slotColor.r * regionColor.r, skeletonColor.g * slotColor.g * regionColor.g, skeletonColor.b * slotColor.b * regionColor.b, skeletonColor.a * slotColor.a * regionColor.a);\n            ctx.save();\n            ctx.transform(bone.a, bone.c, bone.b, bone.d, bone.worldX, bone.worldY);\n            ctx.translate(attachment.offset[0], attachment.offset[1]);\n            ctx.rotate(attachment.rotation * Math.PI / 180);\n            let atlasScale = attachment.width / region.originalWidth;\n            ctx.scale(atlasScale * attachment.scaleX, atlasScale * attachment.scaleY);\n            let w = region.width, h = region.height;\n            ctx.translate(w / 2, h / 2);\n            if (attachment.region.degrees == 90) {\n                let t = w;\n                w = h;\n                h = t;\n                ctx.rotate(-Math.PI / 2);\n            }\n            ctx.scale(1, -1);\n            ctx.translate(-w / 2, -h / 2);\n            ctx.globalAlpha = color.a;\n            ctx.drawImage(image, image.width * region.u, image.height * region.v, w, h, 0, 0, w, h);\n            if (this.debugRendering)\n                ctx.strokeRect(0, 0, w, h);\n            ctx.restore();\n        }\n    }\n    drawTriangles(skeleton) {\n        let ctx = this.ctx;\n        let color = this.tempColor;\n        let skeletonColor = skeleton.color;\n        let drawOrder = skeleton.drawOrder;\n        let blendMode = null;\n        let vertices = this.vertices;\n        let triangles = null;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            let attachment = slot.getAttachment();\n            let texture;\n            let region;\n            if (attachment instanceof RegionAttachment) {\n                let regionAttachment = attachment;\n                vertices = this.computeRegionVertices(slot, regionAttachment, false);\n                triangles = SkeletonRenderer.QUAD_TRIANGLES;\n                texture = regionAttachment.region.texture.getImage();\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                vertices = this.computeMeshVertices(slot, mesh, false);\n                triangles = mesh.triangles;\n                texture = mesh.region.texture.getImage();\n            }\n            else\n                continue;\n            if (texture) {\n                if (slot.data.blendMode != blendMode)\n                    blendMode = slot.data.blendMode;\n                let slotColor = slot.color;\n                let attachmentColor = attachment.color;\n                color.set(skeletonColor.r * slotColor.r * attachmentColor.r, skeletonColor.g * slotColor.g * attachmentColor.g, skeletonColor.b * slotColor.b * attachmentColor.b, skeletonColor.a * slotColor.a * attachmentColor.a);\n                ctx.globalAlpha = color.a;\n                for (var j = 0; j < triangles.length; j += 3) {\n                    let t1 = triangles[j] * 8, t2 = triangles[j + 1] * 8, t3 = triangles[j + 2] * 8;\n                    let x0 = vertices[t1], y0 = vertices[t1 + 1], u0 = vertices[t1 + 6], v0 = vertices[t1 + 7];\n                    let x1 = vertices[t2], y1 = vertices[t2 + 1], u1 = vertices[t2 + 6], v1 = vertices[t2 + 7];\n                    let x2 = vertices[t3], y2 = vertices[t3 + 1], u2 = vertices[t3 + 6], v2 = vertices[t3 + 7];\n                    this.drawTriangle(texture, x0, y0, u0, v0, x1, y1, u1, v1, x2, y2, u2, v2);\n                    if (this.debugRendering) {\n                        ctx.strokeStyle = \"green\";\n                        ctx.beginPath();\n                        ctx.moveTo(x0, y0);\n                        ctx.lineTo(x1, y1);\n                        ctx.lineTo(x2, y2);\n                        ctx.lineTo(x0, y0);\n                        ctx.stroke();\n                    }\n                }\n            }\n        }\n        this.ctx.globalAlpha = 1;\n    }\n    // Adapted from http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n    // Apache 2 licensed\n    drawTriangle(img, x0, y0, u0, v0, x1, y1, u1, v1, x2, y2, u2, v2) {\n        let ctx = this.ctx;\n        u0 *= img.width;\n        v0 *= img.height;\n        u1 *= img.width;\n        v1 *= img.height;\n        u2 *= img.width;\n        v2 *= img.height;\n        ctx.beginPath();\n        ctx.moveTo(x0, y0);\n        ctx.lineTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.closePath();\n        x1 -= x0;\n        y1 -= y0;\n        x2 -= x0;\n        y2 -= y0;\n        u1 -= u0;\n        v1 -= v0;\n        u2 -= u0;\n        v2 -= v0;\n        var det = 1 / (u1 * v2 - u2 * v1), \n        // linear transformation\n        a = (v2 * x1 - v1 * x2) * det, b = (v2 * y1 - v1 * y2) * det, c = (u1 * x2 - u2 * x1) * det, d = (u1 * y2 - u2 * y1) * det, \n        // translation\n        e = x0 - a * u0 - c * v0, f = y0 - b * u0 - d * v0;\n        ctx.save();\n        ctx.transform(a, b, c, d, e, f);\n        ctx.clip();\n        ctx.drawImage(img, 0, 0);\n        ctx.restore();\n    }\n    computeRegionVertices(slot, region, pma) {\n        let skeletonColor = slot.bone.skeleton.color;\n        let slotColor = slot.color;\n        let regionColor = region.color;\n        let alpha = skeletonColor.a * slotColor.a * regionColor.a;\n        let multiplier = pma ? alpha : 1;\n        let color = this.tempColor;\n        color.set(skeletonColor.r * slotColor.r * regionColor.r * multiplier, skeletonColor.g * slotColor.g * regionColor.g * multiplier, skeletonColor.b * slotColor.b * regionColor.b * multiplier, alpha);\n        region.computeWorldVertices(slot, this.vertices, 0, SkeletonRenderer.VERTEX_SIZE);\n        let vertices = this.vertices;\n        let uvs = region.uvs;\n        vertices[RegionAttachment.C1R] = color.r;\n        vertices[RegionAttachment.C1G] = color.g;\n        vertices[RegionAttachment.C1B] = color.b;\n        vertices[RegionAttachment.C1A] = color.a;\n        vertices[RegionAttachment.U1] = uvs[0];\n        vertices[RegionAttachment.V1] = uvs[1];\n        vertices[RegionAttachment.C2R] = color.r;\n        vertices[RegionAttachment.C2G] = color.g;\n        vertices[RegionAttachment.C2B] = color.b;\n        vertices[RegionAttachment.C2A] = color.a;\n        vertices[RegionAttachment.U2] = uvs[2];\n        vertices[RegionAttachment.V2] = uvs[3];\n        vertices[RegionAttachment.C3R] = color.r;\n        vertices[RegionAttachment.C3G] = color.g;\n        vertices[RegionAttachment.C3B] = color.b;\n        vertices[RegionAttachment.C3A] = color.a;\n        vertices[RegionAttachment.U3] = uvs[4];\n        vertices[RegionAttachment.V3] = uvs[5];\n        vertices[RegionAttachment.C4R] = color.r;\n        vertices[RegionAttachment.C4G] = color.g;\n        vertices[RegionAttachment.C4B] = color.b;\n        vertices[RegionAttachment.C4A] = color.a;\n        vertices[RegionAttachment.U4] = uvs[6];\n        vertices[RegionAttachment.V4] = uvs[7];\n        return vertices;\n    }\n    computeMeshVertices(slot, mesh, pma) {\n        let skeletonColor = slot.bone.skeleton.color;\n        let slotColor = slot.color;\n        let regionColor = mesh.color;\n        let alpha = skeletonColor.a * slotColor.a * regionColor.a;\n        let multiplier = pma ? alpha : 1;\n        let color = this.tempColor;\n        color.set(skeletonColor.r * slotColor.r * regionColor.r * multiplier, skeletonColor.g * slotColor.g * regionColor.g * multiplier, skeletonColor.b * slotColor.b * regionColor.b * multiplier, alpha);\n        let vertexCount = mesh.worldVerticesLength / 2;\n        let vertices = this.vertices;\n        if (vertices.length < mesh.worldVerticesLength)\n            this.vertices = vertices = Utils.newFloatArray(mesh.worldVerticesLength);\n        mesh.computeWorldVertices(slot, 0, mesh.worldVerticesLength, vertices, 0, SkeletonRenderer.VERTEX_SIZE);\n        let uvs = mesh.uvs;\n        for (let i = 0, u = 0, v = 2; i < vertexCount; i++) {\n            vertices[v++] = color.r;\n            vertices[v++] = color.g;\n            vertices[v++] = color.b;\n            vertices[v++] = color.a;\n            vertices[v++] = uvs[u++];\n            vertices[v++] = uvs[u++];\n            v += 2;\n        }\n        return vertices;\n    }\n}\nSkeletonRenderer.QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\nSkeletonRenderer.VERTEX_SIZE = 2 + 2 + 4;\n//# sourceMappingURL=data:application/json;base64,","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nexport default class SpineBaseGameObject extends Phaser.PIXI.DisplayObject {\n  constructor(game, x, y) {\n    super(game);\n    this.x = x || 0;\n    this.y = y || 0;\n    this.type = Phaser.SPRITE;\n    this.physicsType = Phaser.SPRITE;\n\n    Phaser.Component.Core.init.call(this, game, x, y);\n  }\n\n  get width() {\n    return this.getBounds().width * this.scale.x;\n  }\n\n  set width(value) {\n    const { width } = this.getBounds();\n\n    if (width !== 0) {\n      this.scale.x = value / width;\n    } else {\n      this.scale.x = 1;\n    }\n\n    this._width = value;\n  }\n\n  get height() {\n    return this.getBounds().height * this.scale.y;\n  }\n\n  set height(value) {\n    const { height } = this.getBounds();\n\n    if (height !== 0) {\n      this.scale.y = value / height;\n    } else {\n      this.scale.y = 1;\n    }\n\n    this._height = value;\n  }\n}\n\nPhaser.Component.Core.install.call(SpineBaseGameObject.prototype, [\n  'Angle',\n  /* 'Animation', */\n  'AutoCull',\n  'Bounds',\n  'BringToTop',\n  /* 'Crop', */\n  'Delta',\n  'Destroy',\n  'FixedToCamera',\n  /* 'Health', */\n  'InCamera',\n  'InputEnabled',\n  'InWorld',\n  /* 'LifeSpan', */\n  /* 'LoadTexture', */\n  'Overlap',\n  'PhysicsBody',\n  'Reset'\n  /* 'ScaleMinMax', */\n  /* 'Smoothed' */\n]);\n\nSpineBaseGameObject.prototype.preUpdatePhysics = Phaser.Component.PhysicsBody.preUpdate;\nSpineBaseGameObject.prototype.preUpdateLifeSpan = Phaser.Component.LifeSpan.preUpdate;\nSpineBaseGameObject.prototype.preUpdateInWorld = Phaser.Component.InWorld.preUpdate;\nSpineBaseGameObject.prototype.preUpdateCore = Phaser.Component.Core.preUpdate;\n\nSpineBaseGameObject.prototype.preUpdate = function preUpdate() {\n  if (!this.preUpdatePhysics() || !this.preUpdateLifeSpan() || !this.preUpdateInWorld()) {\n    return false;\n  }\n\n  return this.preUpdateCore();\n};\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { Skeleton } from '@esotericsoftware/spine-core';\nimport {\n  AtlasAttachmentLoader, GLTexture, SkeletonBinary,\n  SkeletonJson, TextureAtlas\n} from '@esotericsoftware/spine-webgl';\nimport { CanvasTexture } from '@esotericsoftware/spine-canvas';\n\nexport default class SpineSkeleton {\n  constructor(game, plugin, key, gameObject) {\n    this.key = key;\n    this.game = game;\n    this.plugin = plugin;\n    this.gameObject = gameObject;\n\n    this.setKeys(key);\n    this.setSkeletonData();\n  }\n\n  setKeys(key) {\n    this.keys = {\n      root: key,\n      image: `${key}-image`,\n      text: `${key}-text`,\n      json: `${key}-json`,\n      binary: `${key}-binary`,\n      atlas: `${key}-atlas`,\n      skeleton: `${key}-skeleton`\n    };\n  }\n\n  setSkeletonData() {\n    Skeleton.yDown = true;\n    this.skeleton = this.createSkeleton();\n  }\n\n  /** Creates a new Skeleton instance from the data and atlas. */\n  createSkeleton() {\n    return new Skeleton(this.getSkeletonData());\n  }\n\n  /** Returns the SkeletonData instance for the given data and atlas key */\n  getSkeletonData() {\n    const atlas = this.getAtlas();\n    let skeletonData;\n    if (this.game.cache.checkSpineSkeleton(this.keys.skeleton)) {\n      skeletonData = this.game.cache.getSpineSkeleton(this.keys.skeleton);\n    } else {\n      if (this.game.cache.checkJSONKey(this.keys.json)) {\n        const jsonFile = this.game.cache.getJSON(this.keys.json);\n        const json = new SkeletonJson(new AtlasAttachmentLoader(atlas));\n        skeletonData = json.readSkeletonData(jsonFile);\n      } else {\n        const binaryFile = this.game.cache.getBinary(this.keys.binary);\n        const binary = new SkeletonBinary(new AtlasAttachmentLoader(atlas));\n        skeletonData = binary.readSkeletonData(new Uint8Array(binaryFile));\n      }\n      this.game.cache.addSpineSkeleton(this.keys.skeleton, skeletonData);\n    }\n    return skeletonData;\n  }\n\n  /** Returns the TextureAtlas instance */\n  getAtlas() {\n    let atlas;\n    if (this.game.cache.checkSpineAtlas(this.keys.atlas)) {\n      atlas = this.game.cache.getSpineAtlas(this.keys.atlas);\n    } else {\n      const atlasFile = this.game.cache.getText(this.keys.text);\n      atlas = new TextureAtlas(atlasFile);\n      if (this.plugin.isWebGL) {\n        this.plugin.gl.pixelStorei(this.plugin.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        if (atlas.pages.length < 2) {\n          const imageFile = this.game.cache.getImage(this.keys.image);\n          atlas.pages[0].setTexture(new GLTexture(this.plugin.gl, imageFile, false));\n        } else {\n          for (const atlasPage of atlas.pages) {\n            const name = atlasPage.name.replace(/\\.[^/.]+$/gm, '').toLocaleLowerCase();\n            const imageFile = this.game.cache.getImage(`${this.keys.root}-${name}`);\n            atlasPage.setTexture(new GLTexture(this.plugin.gl, imageFile, false));\n          }\n        }\n      } else if (atlas.pages.length < 2) {\n        const imageFile = this.game.cache.getImage(this.keys.image);\n        atlas.pages[0].setTexture(new CanvasTexture(imageFile));\n      } else {\n        for (const atlasPage of atlas.pages) {\n          const name = atlasPage.name.replace(/\\.[^/.]+$/gm, '').toLocaleLowerCase();\n          const imageFile = this.game.cache.getImage(`${this.keys.root}-${name}`);\n          atlasPage.setTexture(new CanvasTexture(imageFile));\n        }\n      }\n      this.game.cache.addSpineAtlas(this.keys.atlas, atlas);\n    }\n    return atlas;\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { AnimationState, Skeleton, Skin } from '@esotericsoftware/spine-core';\n\nexport default class SpineUtils {\n  /** Converts a point from the skeleton coordinate system to the Phaser world coordinate system. */\n  static skeletonToPhaserWorldCoordinates(point) {\n    const transform = this.worldTransform;\n    const {\n      a, b, c, d, tx, ty\n    } = transform;\n    const { x, y } = point;\n    point.x = x * a + y * c + tx;\n    point.y = x * b + y * d + ty;\n  }\n\n  /** Converts a point from the Phaser world coordinate system to the skeleton coordinate system. */\n  static phaserWorldCoordinatesToSkeleton(point) {\n    let transform = this.worldTransform;\n    transform = transform.invert();\n    const {\n      a, b, c, d, tx, ty\n    } = transform;\n    const { x, y } = point;\n    point.x = x * a + y * c + tx;\n    point.y = x * b + y * d + ty;\n  }\n\n  /** Converts a point from the Phaser world coordinate system to the bone's local coordinate system. */\n  static phaserWorldCoordinatesToBone(point, bone) {\n    this.phaserWorldCoordinatesToSkeleton(point);\n    if (bone.parent) {\n      bone.parent.worldToLocal(point);\n    } else {\n      bone.worldToLocal(point);\n    }\n  }\n\n  /** A bounds provider that calculates the bounding box from the setup pose. */\n  static calculateBounds(gameObject) {\n    if (!gameObject.skeleton) {\n      return {\n        x: 0, y: 0, width: 0, height: 0\n      };\n    }\n    // Make a copy of animation state and skeleton as this might be called while\n    // the skeleton in the GameObject has already been heavily modified. We can not\n    // reconstruct that state.\n    const skeleton = new Skeleton(gameObject.skeleton.data);\n    skeleton.setToSetupPose();\n    skeleton.updateWorldTransform();\n    const bounds = skeleton.getBoundsRect();\n    return bounds.width === Number.NEGATIVE_INFINITY ? {\n      x: 0, y: 0, width: 0, height: 0\n    } : bounds;\n  }\n\n  /** A bounds provider that calculates the bounding box by taking the maximumg bounding box for a combination of skins and specific animation. */\n  static calculateSkinBounds(gameObject, animations, skins = [], timeStep = 0.05) {\n    const defaultBounds = {\n      x: 0, y: 0, width: 0, height: 0\n    };\n\n    if (!gameObject.skeleton || !gameObject.animationState) return defaultBounds;\n\n    // Make a copy of animation state and skeleton as this might be called while\n    // the skeleton in the GameObject has already been heavily modified. We can not\n    // reconstruct that state.\n    const animationState = new AnimationState(gameObject.animationState.data);\n    const skeleton = new Skeleton(gameObject.skeleton.data);\n    const { data } = skeleton;\n    if (skins.length > 0) {\n      const customSkin = new Skin('custom-skin');\n      for (const skinName of skins) {\n        const skin = data.findSkin(skinName);\n        if (skin !== null) customSkin.addSkin(skin);\n      }\n      skeleton.setSkin(customSkin);\n    }\n    skeleton.setToSetupPose();\n\n    const animation = animations != null ? data.findAnimation(animations) : null;\n    if (animation == null) {\n      skeleton.updateWorldTransform();\n      const bounds = skeleton.getBoundsRect();\n      return bounds.width === Number.NEGATIVE_INFINITY ? defaultBounds : bounds;\n    }\n\n    let minX = Number.POSITIVE_INFINITY;\n    let minY = Number.POSITIVE_INFINITY;\n    let maxX = Number.NEGATIVE_INFINITY;\n    let maxY = Number.NEGATIVE_INFINITY;\n    animationState.clearTracks();\n    animationState.setAnimationWith(0, animation, false);\n    const steps = Math.max(animation.duration / timeStep, 1.0);\n\n    for (let i = 0; i < steps; i++) {\n      animationState.update(i > 0 ? timeStep : 0);\n      animationState.apply(skeleton);\n      skeleton.updateWorldTransform();\n      const bounds = skeleton.getBoundsRect();\n      minX = Math.min(minX, bounds.x);\n      minY = Math.min(minY, bounds.y);\n      maxX = Math.max(maxX, minX + bounds.width);\n      maxY = Math.max(maxY, minY + bounds.height);\n    }\n\n    const bounds = {\n      x: minX, y: minY, width: maxX - minX, height: maxY - minY\n    };\n\n    return bounds.width === Number.NEGATIVE_INFINITY ? defaultBounds : bounds;\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { AnimationState, AnimationStateData, SkeletonBounds } from '@esotericsoftware/spine-core';\nimport SpineBaseGameObject from './spineBaseGameObject';\nimport SpineSkeleton from './spineSkeleton';\nimport SpineUtils from './spineUtils';\n\nexport default class SpineGameObject extends SpineBaseGameObject {\n  constructor(game, plugin, x, y, key, premultipliedAlpha = false) {\n    super(game, x, y);\n    this.key = key;\n    this.game = game;\n    this.plugin = plugin;\n    this.premultipliedAlpha = premultipliedAlpha;\n    this.scaleMode = Phaser.PIXI.scaleModes.LINEAR;\n    this.utils = new SpineUtils();\n\n    this.debug = false;\n    this.enableCanvasMesh = false;\n\n    this._setCallbacks();\n    this._setSpine();\n  }\n\n  _setCallbacks() {\n    this.beforeUpdateWorldTransforms = () => { };\n    this.afterUpdateWorldTransforms = () => { };\n  }\n\n  _setSpine() {\n    this.skeleton = new SpineSkeleton(this.game, this.plugin, this.key, this).skeleton;\n    this.animationStateData = new AnimationStateData(this.skeleton.data);\n    this.animationState = new AnimationState(this.animationStateData);\n    this.skeletonBounds = new SkeletonBounds();\n    this.spineBounds = SpineUtils.calculateBounds(this);\n  }\n\n  _checkSpine() {\n    return (\n      !this.inCamera\n      || !this.visible\n      || this.alpha <= 0\n      || !this.skeleton\n      || !this.animationState\n    );\n  }\n\n  getBounds() {\n    const bounds = this._bounds;\n\n    const w0 = this.spineBounds.x;\n    const w1 = this.spineBounds.width + w0;\n\n    const h0 = this.spineBounds.y;\n    const h1 = this.spineBounds.height + h0;\n\n    const { a, b, c, d, tx, ty } = this.worldTransform;\n\n    const x1 = a * w1 + c * h1 + tx;\n    const y1 = d * h1 + b * w1 + ty;\n\n    const x2 = a * w0 + c * h1 + tx;\n    const y2 = d * h1 + b * w0 + ty;\n\n    const x3 = a * w0 + c * h0 + tx;\n    const y3 = d * h0 + b * w0 + ty;\n\n    const x4 = a * w1 + c * h0 + tx;\n    const y4 = d * h0 + b * w1 + ty;\n\n    const maxX = Math.max(x1, x2, x3, x4);\n    const maxY = Math.max(y1, y2, y3, y4);\n\n    const minX = Math.min(x1, x2, x3, x4);\n    const minY = Math.min(y1, y2, y3, y4);\n\n    bounds.x = minX;\n    bounds.width = maxX - minX;\n\n    bounds.y = minY;\n    bounds.height = maxY - minY;\n\n    return bounds;\n  }\n\n  /* Rebuilds to replace current spine */\n  replaceSpine(key) {\n    this.key = key;\n    this._setSpine();\n  }\n\n  preUpdate() {\n    /* super.preUpdate(); */\n    if (this._checkSpine()) return;\n    this.updatePose(this.game.time.delta);\n  }\n\n  update() {\n    /* super.update(); */\n  }\n\n  postUpdate() {\n    // This object cant have children to postUpdate, so we can skip super.postUpdate();\n  }\n\n  updatePose(delta) {\n    this.animationState.update(delta / 1000);\n    this.animationState.apply(this.skeleton);\n    this.beforeUpdateWorldTransforms(this);\n    this.skeleton.updateWorldTransform();\n    this.afterUpdateWorldTransforms(this);\n  }\n\n  destroy() {\n    this.destroyPhase = true;\n    this.renderable = false;\n\n    if (this.events) {\n      this.events.onDestroy$dispatch(this);\n    }\n\n    if (this.parent) {\n      if (this.parent instanceof Phaser.Group) {\n        this.parent.remove(this);\n      } else {\n        this.parent.removeChild(this);\n      }\n    }\n\n    if (this.input) {\n      this.input.destroy();\n    }\n\n    if (this.transformCallback) {\n      this.transformCallback = null;\n      this.transformCallbackContext = null;\n    }\n\n    this.game.tweens.removeFrom(this);\n\n    delete this.skeleton;\n    delete this.animationStateData;\n    delete this.animationState;\n    delete this.skeletonBounds;\n    delete this.spineBounds;\n    delete this.beforeUpdateWorldTransforms;\n    delete this.afterUpdateWorldTransforms;\n    delete this.debug;\n    delete this.enableCanvasMesh;\n    delete this.utils;\n    delete this.scaleMode;\n    delete this.key;\n    delete this.premultipliedAlpha;\n\n    delete this.alive;\n    delete this.exists;\n    delete this.visible;\n    delete this.filters;\n    delete this.mask;\n    delete this.game;\n    delete this.data;\n\n    delete this.hitArea;\n    delete this.parent;\n    delete this.stage;\n    delete this.worldTransform;\n    delete this.filterArea;\n    delete this._bounds;\n    delete this._currentBounds;\n    delete this._mask;\n\n    this._destroyCachedSprite();\n\n    this.destroyPhase = false;\n    this.pendingDestroy = false;\n  }\n\n  _renderWebGL(renderer) {\n    if (this._checkSpine() || !this.plugin.webGLRenderer) return;\n\n    const { currentBlendMode } = renderer.blendModeManager;\n    const { currentShader } = renderer.shaderManager;\n    renderer.spriteBatch.stop();\n    for (let i = 0; i < renderer.shaderManager.attribState.length; i++) {\n      renderer.shaderManager.attribState[i] = null;\n      renderer.gl.disableVertexAttribArray(i);\n    }\n\n    const { a, b, c, d, tx, ty } = this.worldTransform;\n    const sceneRenderer = this.plugin.webGLRenderer;\n\n    if (this._mask) {\n      renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    if (this._filters) {\n      renderer.filterManager.pushFilter(this._filterBlock);\n    }\n\n    // check blend mode\n    /* if (this.blendMode && this.blendMode !== spriteBatch.currentBlendMode) {\n      const blendModeWebGL = Phaser.PIXI.blendModesWebGL[spriteBatch.currentBlendMode];\n      renderer.blendModeManager.setBlendMode(blendModeWebGL);\n    } */\n\n    sceneRenderer.begin();\n    sceneRenderer.drawSkeleton(this.skeleton, this.premultipliedAlpha, -1, -1, (vertices, numVertices, stride) => {\n      for (let i = 0; i < numVertices; i += stride) {\n        const vx = vertices[i];\n        const vy = vertices[i + 1];\n        vertices[i] = vx * a + vy * c + tx;\n        vertices[i + 1] = vx * b + vy * d + ty;\n      }\n    });\n\n    sceneRenderer.end();\n\n    if (this._filters) {\n      renderer.filterManager.popFilter();\n    }\n\n    if (this._mask) {\n      renderer.maskManager.popMask(this.mask, renderer);\n    }\n\n    renderer.drawCount++;\n\n    renderer.blendModeManager.currentBlendMode = -1;\n    renderer.blendModeManager.setBlendMode(currentBlendMode);\n    renderer.gl.enable(renderer.gl.BLEND);\n    renderer.shaderManager._currentId = null;\n    renderer.shaderManager.setShader(currentShader);\n    renderer.spriteBatch.start();\n\n    if (this.debug) this._debug();\n  }\n\n  _renderCanvas(renderer) {\n    if (this._checkSpine() || !this.plugin.canvasRenderer) return;\n\n    const { context } = renderer;\n    const { a, b, c, d, tx, ty } = this.worldTransform;\n    const { skeleton } = this;\n    const skeletonRenderer = this.plugin.canvasRenderer;\n\n    context.setTransform(a, b, c, d, tx, ty);\n\n    if (this.blendMode && this.blendMode !== renderer.currentBlendMode) {\n      renderer.currentBlendMode = this.blendMode;\n      renderer.context.globalCompositeOperation = Phaser.PIXI.blendModesCanvas[renderer.currentBlendMode];\n    }\n\n    if (this._mask) {\n      renderer.maskManager.pushMask(this._mask, renderer);\n    }\n\n    if (renderer.smoothProperty && renderer.scaleMode !== this.scaleMode) {\n      renderer.scaleMode = this.scaleMode;\n      renderer.context[renderer.smoothProperty] = (renderer.scaleMode === Phaser.PIXI.scaleModes.LINEAR);\n    }\n\n    if (this.debug) this._debug();\n    skeletonRenderer.debugRendering = this.debug;\n    skeletonRenderer.triangleRendering = this.enableCanvasMesh;\n\n    context.save();\n    skeletonRenderer.ctx = context;\n    skeletonRenderer.draw(skeleton);\n    context.restore();\n\n    if (this._mask) {\n      renderer.maskManager.popMask(renderer);\n    }\n  }\n\n  _debug() {\n    this.game.debug.spriteBounds(this);\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport { SceneRenderer } from '@esotericsoftware/spine-webgl';\nimport { SkeletonRenderer } from '@esotericsoftware/spine-canvas';\nimport SpineGameObject from './spineGameObject';\n\nexport default class SpinePlugin extends Phaser.Plugin {\n  constructor(game, parent) {\n    super(game, parent);\n    this.game = game;\n    this.pluginManager = parent;\n    this.spineList = [];\n\n    this._setFlags();\n    this._rendererConfig();\n    this._addSpineCache();\n    this._addSpineLoader();\n    this._addSpineFactory();\n    this._addRenderers();\n  }\n\n  _setFlags() {\n    this.hasPostRender = false;\n    this.hasPostUpdate = false;\n    this.hasPreUpdate = false;\n    this.hasRender = false;\n    this.hasUpdate = false;\n  }\n\n  _rendererConfig() {\n    this.isWebGL = this.game.renderType === Phaser.WEBGL || this.game.renderType === Phaser.WEBGL_MULTI;\n    this.gl = this.isWebGL ? this.game.renderer.gl : null;\n    this.webGLRenderer = null;\n    this.canvasRenderer = null;\n  }\n\n  _addSpineCache() {\n    Phaser.Cache.prototype.addCustom = function addCustom(key) {\n      this._cache[key] = {};\n      this[key.toUpperCase()] = this._cacheMap.length;\n      this._cacheMap[this[key.toUpperCase()]] = this._cache[key];\n\n      const keyIdx = this[key.toUpperCase()];\n      const methodName = key.charAt(0).toUpperCase() + key.slice(1);\n\n      Phaser.Cache.prototype[`add${methodName}`] = function add(str, data) {\n        this._cache[key][str] = data;\n      };\n\n      Phaser.Cache.prototype[`check${methodName}`] = function check(str) {\n        return this.checkKey(keyIdx, str);\n      };\n\n      Phaser.Cache.prototype[`get${methodName}`] = function get(str) {\n        return this.getItem(str, keyIdx, `get${methodName}`);\n      };\n    };\n\n    this.skeletonDataCache = this.game.cache.addCustom('spineSkeleton');\n    this.atlasCache = this.game.cache.addCustom('spineAtlas');\n  }\n\n  _addSpineLoader() {\n    Phaser.Loader.prototype.spine = function spine(key, spineFiles, overwrite) {\n      this.text(`${key}-text`, spineFiles.atlas, overwrite);\n\n      if (spineFiles.json) this.json(`${key}-json`, spineFiles.json);\n      if (spineFiles.binary) this.binary(`${key}-binary`, spineFiles.binary);\n\n      if (spineFiles.image) {\n        this.image(`${key}-image`, spineFiles.image, overwrite);\n      } else {\n        for (const image in spineFiles.images) {\n          if (Object.prototype.hasOwnProperty.call(spineFiles.images, image)) {\n            this.image(`${key}-${image.toLocaleLowerCase()}`, spineFiles.images[image], overwrite);\n          }\n        }\n      }\n\n      return this;\n    };\n  }\n\n  _addSpineFactory() {\n    const self = this;\n    Phaser.GameObjectFactory.prototype.spine = function spine(x, y, key, group, premultipliedAlpha) {\n      if (premultipliedAlpha === void 0) { premultipliedAlpha = false; }\n      if (group === undefined) {\n        group = this.world;\n      }\n      const spineObject = new SpineGameObject(this.game, self, x, y, key, premultipliedAlpha);\n      self.spineList.push(spineObject);\n      return group.add(spineObject);\n    };\n\n    Phaser.GameObjectCreator.prototype.spine = function spine(x, y, key, premultipliedAlpha) {\n      if (premultipliedAlpha === void 0) { premultipliedAlpha = false; }\n      const spineObject = new SpineGameObject(this.game, self, x, y, key, premultipliedAlpha);\n      self.spineList.push(spineObject);\n      return spineObject;\n    };\n  }\n\n  _addRenderers() {\n    if (this.isWebGL) {\n      if (!this.webGLRenderer) {\n        this.webGLRenderer = new SceneRenderer(this.game.canvas, this.gl, true);\n      }\n      this.onResize();\n      this.game.scale.onSizeChange.add(this.onResize, this);\n    } else if (!this.canvasRenderer) {\n      this.canvasRenderer = new SkeletonRenderer(this.game.context);\n    }\n    this.game.onDestroy.addOnce(this.gameDestroy);\n  }\n\n  onResize() {\n    const phaserRenderer = this.game.renderer;\n    const sceneRenderer = this.webGLRenderer;\n    if (phaserRenderer && sceneRenderer) {\n      const viewportWidth = phaserRenderer.width;\n      const viewportHeight = phaserRenderer.height;\n      sceneRenderer.camera.position.x = viewportWidth / 2;\n      sceneRenderer.camera.position.y = viewportHeight / 2;\n      sceneRenderer.camera.up.y = -1;\n      sceneRenderer.camera.direction.z = 1;\n      sceneRenderer.camera.setViewport(viewportWidth, viewportHeight);\n    }\n  }\n\n  destroy() {\n    if (this.isWebGL) {\n      this.game.scale.onSizeChange.remove(this.onResize);\n    }\n    super.destroy();\n  }\n\n  gameDestroy() {\n    for (const spine of this.spineList) {\n      if (spine.destroy) spine.destroy();\n    }\n    if (this.webGLRenderer) this.webGLRenderer.dispose();\n  }\n}\n","/**\n * @author       Ruben García Vilà\n * @copyright    2023 Ruben García Vilà.\n * @license      {@link https://github.com/Reltdeats/spine-phaser-ce/blob/master/LICENSE|MIT License}\n */\nimport SpinePlugin from './spinePlugin';\nwindow.SpinePlugin = SpinePlugin;\n"],"names":["StringSet","constructor","this","entries","size","add","value","contains","addAll","values","oldSize","i","n","length","clear","r","g","b","a","set","clamp","setFromColor","c","setFromString","hex","charAt","substr","parseInt","rgba8888ToColor","color","rgb888ToColor","fromString","WHITE","RED","GREEN","BLUE","MAGENTA","MathUtils","min","max","cosDeg","degrees","Math","cos","degRad","sinDeg","sin","signum","toInt","x","floor","ceil","cbrt","y","pow","abs","randomTriangular","randomTriangularWith","mode","u","random","d","sqrt","isPowerOfTwo","PI","PI2","radiansToDegrees","radDeg","degreesToRadians","Utils","arrayCopy","source","sourceStart","dest","destStart","numElements","j","arrayFill","array","fromIndex","toIndex","setArraySize","ensureArrayCapacity","newArray","defaultValue","Array","newFloatArray","SUPPORTS_TYPED_ARRAYS","Float32Array","newShortArray","Int16Array","toFloatArray","toSinglePrecision","fround","webkit602BugfixHelper","alpha","blend","element","identity","enumValue","type","name","toUpperCase","slice","Pool","instantiator","items","obtain","pop","free","item","reset","push","freeAll","Vector2","normalize","len","Attachment","Error","VertexAttachment","super","id","nextID","bones","vertices","worldVerticesLength","timelineAttachment","computeWorldVertices","slot","start","count","worldVertices","offset","stride","skeleton","bone","deformArray","deform","worldX","worldY","v","w","vx","vy","skip","skeletonBones","wx","wy","weight","f","copyTo","attachment","Sequence","digits","setupIndex","regions","copy","apply","index","sequenceIndex","region","updateRegion","getPath","basePath","result","frame","toString","_nextID","SequenceMode","SequenceModeValues","hold","once","loop","pingpong","onceReverse","loopReverse","pingpongReverse","Animation","timelines","duration","timelineIds","setTimelines","getPropertyIds","hasTimeline","ids","lastTime","time","events","direction","MixBlend","MixDirection","Property","Timeline","frameCount","propertyIds","frames","getFrameEntries","getFrameCount","getDuration","search1","search","step","CurveTimeline","bezierCount","curves","setLinear","setStepped","shrink","newCurves","setBezier","bezier","time1","value1","cx1","cy1","cx2","cy2","time2","value2","tmpx","tmpy","dddx","dddy","ddx","ddy","dx","dy","getBezierValue","frameIndex","valueOffset","CurveTimeline1","propertyId","setFrame","getCurveValue","ii","curveType","before","CurveTimeline2","propertyId1","propertyId2","RotateTimeline","boneIndex","active","setup","rotation","data","first","replace","TranslateTimeline","t","TranslateXTimeline","TranslateYTimeline","ScaleTimeline","scaleX","scaleY","bx","by","mixOut","ScaleXTimeline","ScaleYTimeline","ShearTimeline","shearX","shearY","ShearXTimeline","ShearYTimeline","RGBATimeline","slotIndex","slots","RGBTimeline","AlphaTimeline","RGBA2Timeline","r2","g2","b2","light","dark","darkColor","setupLight","setupDark","RGB2Timeline","AttachmentTimeline","attachmentNames","attachmentName","setAttachment","getAttachment","DeformTimeline","getCurvePercent","firedEvents","slotAttachment","vertexCount","vertexAttachment","setupVertices","lastVertices","percent","prevVertices","nextVertices","prev","EventTimeline","event","Number","MAX_VALUE","frameTime","DrawOrderTimeline","drawOrders","drawOrder","idx","drawOrderToSetupIndex","IkConstraintTimeline","ikConstraintIndex","mix","softness","bendDirection","compress","stretch","constraint","ikConstraints","mixIn","TransformConstraintTimeline","transformConstraintIndex","mixRotate","mixX","mixY","mixScaleX","mixScaleY","mixShearY","transformConstraints","rotate","PathConstraintPositionTimeline","pathConstraintIndex","pathConstraints","position","PathConstraintSpacingTimeline","spacing","PathConstraintMixTimeline","SequenceTimeline","sequence","ENTRIES","getSlotIndex","delay","MODE","DELAY","modeAndIndex","AnimationState","emptyAnimation","_emptyAnimation","tracks","timeScale","unkeyedState","listeners","queue","EventQueue","propertyIDs","animationsChanged","trackEntryPool","TrackEntry","update","delta","current","animationLast","nextAnimationLast","trackLast","nextTrackLast","currentDelta","next","nextTime","trackTime","setCurrent","mixingFrom","mixTime","trackEnd","end","clearNext","updateMixingFrom","from","mixingTo","drain","to","finished","mixDuration","totalAlpha","interruptAlpha","_animationsChanged","applied","mixBlend","applyMixingFrom","animationTime","getAnimationTime","applyTime","applyEvents","reverse","animation","timelineCount","timeline","applyAttachmentTimeline","timelineMode","shortestRotation","firstFrame","timelinesRotation","timelineBlend","SUBSEQUENT","applyRotateTimeline","queueEvents","setupState","SETUP","attachmentState","attachments","attachmentThreshold","drawOrderThreshold","alphaHold","alphaMix","eventThreshold","timelineHoldMix","FIRST","HOLD_SUBSEQUENT","HOLD_FIRST","holdMix","CURRENT","r1","total","diff","lastTotal","lastDiff","loops","dir","entry","animationStart","animationEnd","trackLastWrapped","complete","clearTracks","oldDrainDisabled","drainDisabled","clearTrack","trackIndex","interrupt","expandToIndex","previous","setAnimation","animationName","skeletonData","findAnimation","setAnimationWith","trackEntry","addAnimation","addAnimationWith","last","getTrackComplete","setEmptyAnimation","addEmptyAnimation","setEmptyAnimations","holdPrevious","getMix","dispose","computeHold","timelinesCount","outer","HOLD_MIX","getCurrent","addListener","listener","removeListener","indexOf","splice","clearListeners","clearListenerNotifications","setAnimationLast","isComplete","resetRotationDirections","animState","objects","EventType","AnimationStateData","animationToMixTime","defaultMix","setMix","fromName","toName","setMixWith","key","undefined","BoundingBoxAttachment","ClippingAttachment","endSlot","Texture","image","_image","getImage","TextureFilter","TextureWrap","TransformMode","PositionMode","SpacingMode","RotateMode","BlendMode","AttachmentType","TextureRegion","u2","v2","width","height","offsetX","offsetY","originalWidth","originalHeight","atlasText","pages","reader","TextureAtlasReader","pageFields","page","minFilter","magFilter","uWrap","Repeat","vWrap","pma","regionFields","line","readLine","trim","readEntry","names","TextureAtlasRegion","field","entryValues","TextureAtlasPage","findRegion","setTextures","assetManager","pathPrefix","setTexture","get","_a","texture","text","lines","split","colon","lastMatch","comma","Nearest","ClampToEdge","setFilters","setWraps","MeshAttachment","path","regionUVs","uvs","triangles","hullLength","edges","parentMesh","tempColor","textureWidth","textureHeight","getParentMesh","setParentMesh","newLinkedMesh","PathAttachment","lengths","closed","constantSpeed","PointAttachment","computeWorldPosition","point","computeWorldRotation","atan2","RegionAttachment","regionScaleX","regionScaleY","localX","localY","localX2","localY2","radians","localXCos","localXSin","localYCos","localYSin","localX2Cos","localX2Sin","localY2Cos","localY2Sin","vertexOffset","X1","Y1","C1R","C1G","C1B","C1A","U1","V1","X2","Y2","C2R","C2G","C2B","C2A","U2","V2","X3","Y3","C3R","C3G","C3B","C3A","U3","V3","X4","Y4","C4R","C4G","C4B","C4A","U4","V4","AtlasAttachmentLoader","atlas","loadSequence","newRegionAttachment","skin","newMeshAttachment","newBoundingBoxAttachment","newPathAttachment","newPointAttachment","newClippingAttachment","BoneData","parent","transformMode","Normal","skinRequired","Bone","children","ax","ay","arotation","ascaleX","ascaleY","ashearX","ashearY","sorted","setToSetupPose","isActive","updateWorldTransformWith","updateWorldTransform","rotationY","sx","sy","pa","pb","pc","pd","la","lb","lc","ld","OnlyTranslation","NoRotationOrReflection","s","prx","rx","ry","NoScale","NoScaleOrReflection","za","zc","zb","zd","getWorldRotationX","getWorldRotationY","getWorldScaleX","getWorldScaleY","updateAppliedTransform","ra","rb","rc","rd","pid","ia","ib","ic","sa","det","worldToLocal","world","invDet","localToWorld","local","worldToLocalRotation","worldRotation","localToWorldRotation","localRotation","rotateWorld","IkConstraint","findBone","target","apply1","uniform","apply2","targetX","targetY","p","rotationIK","tx","ty","sc","dd","child","bendDir","px","py","psx","psy","csx","os1","os2","s2","cx","cy","cwx","cwy","pp","a1","a2","l1","l2","td","sd","acos","aa","bb","ta","c1","c2","q","r0","minAngle","minX","minDist","minY","maxAngle","maxX","maxDist","maxY","os","ConstraintData","order","PathConstraintData","slotData","_target","positionMode","Fixed","spacingMode","rotateMode","Chain","offsetRotation","PathConstraint","spaces","positions","segments","findSlot","tangents","Tangent","scale","ChainScale","boneCount","spacesCount","Percent","setupLength","epsilon","Proportional","sum","lengthSpacing","Length","computeWorldPositions","boneX","boneY","tip","out","verticesLength","curveCount","prevCurve","NONE","multiplier","pathLength","o","curve","space","BEFORE","addBeforePosition","AFTER","addAfterPosition","addCurvePosition","x1","y1","x2","y2","dddfx","dddfy","ddfx","ddfy","dfx","dfy","curveLength","segment","temp","isNaN","tt","ttt","uu","uuu","ut","ut3","uut3","utt3","Slot","getSkeleton","TransformConstraint","relative","applyRelativeLocal","applyAbsoluteLocal","applyRelativeWorld","applyAbsoluteWorld","translate","tb","tc","degRadReflect","offsetShearY","offsetScaleX","offsetScaleY","Skeleton","yDown","_scaleY","_updateCache","boneData","ikConstraintData","transformConstraintData","pathConstraintData","updateCache","skinBones","ikCount","transformCount","pathCount","constraintCount","sortIkConstraint","sortTransformConstraint","sortPathConstraint","sortBone","constraints","constrained","sortReset","slotBone","sortPathConstraintAttachment","defaultSkin","skins","sortPathConstraintAttachmentWith","pathBones","nn","rootBone","getRootBone","updatable","setBonesToSetupPose","setSlotsToSetupPose","boneName","slotName","setSkinByName","skinName","findSkin","setSkin","newSkin","attachAll","getAttachmentByName","findIkConstraint","constraintName","ikConstraint","findTransformConstraint","findPathConstraint","getBoundsRect","getBounds","POSITIVE_INFINITY","NEGATIVE_INFINITY","mesh","Event","intValue","floatValue","stringValue","volume","balance","EventData","audioPath","IkConstraintData","SkeletonData","animations","version","hash","fps","imagesPath","findEvent","eventDataName","SkinEntry","Skin","addSkin","contained","getAttachments","copySkin","dictionary","removeAttachment","slotAttachments","getAttachmentsForSlot","oldSkin","SlotData","blendMode","TransformConstraintData","SkeletonBinary","attachmentLoader","linkedMeshes","readSkeletonData","binary","input","BinaryInput","lowHash","readInt32","highHash","readString","readFloat","nonessential","readBoolean","readInt","str","strings","readStringRef","readByte","readSkin","linkedMesh","inheritTimeline","eventName","readAnimation","slotCount","readAttachment","Region","readSequence","BoundingBox","readVertices","box","Mesh","readFloatArray","readShortArray","LinkedMesh","inheritTimelines","Path","Point","Clipping","endSlotIndex","clip","Vertices","weights","bonesArray","readShort","timelineType","frameLast","SLOT_ATTACHMENT","SLOT_RGBA","readUnsignedByte","CURVE_STEPPED","CURVE_BEZIER","SLOT_RGB","SLOT_RGBA2","nr","ng","nb","na","nr2","ng2","nb2","SLOT_RGB2","SLOT_ALPHA","BONE_ROTATE","readTimeline1","BONE_TRANSLATE","readTimeline2","BONE_TRANSLATEX","BONE_TRANSLATEY","BONE_SCALE","BONE_SCALEX","BONE_SCALEY","BONE_SHEAR","BONE_SHEARX","BONE_SHEARY","mix2","softness2","mixRotate2","mixX2","mixY2","mixScaleX2","mixScaleY2","mixShearY2","PATH_POSITION","PATH_SPACING","PATH_MIX","iii","nnn","ATTACHMENT_DEFORM","weighted","deformLength","vn","ATTACHMENT_SEQUENCE","drawOrderCount","offsetCount","unchanged","originalIndex","unchangedIndex","eventCount","eventData","buffer","DataView","getInt8","getUint8","getInt16","getInt32","optimizePositive","byteCount","chars","String","fromCharCode","getFloat32","inheritDeform","nvalue1","nvalue2","SkeletonBounds","boundingBoxes","polygons","polygonPool","updateAabb","boundingBox","polygon","aabbCompute","aabbContainsPoint","aabbIntersectsSegment","m","aabbIntersectsSkeleton","bounds","containsPoint","containsPointPolygon","prevIndex","inside","vertexY","prevY","vertexX","intersectsSegment","intersectsSegmentPolygon","width12","height12","det1","x3","y3","x4","y4","det2","width34","height34","det3","getPolygon","getWidth","getHeight","Triangulator","convexPolygons","convexPolygonsIndices","indicesArray","isConcaveArray","polygonIndicesPool","triangulate","verticesArray","indices","isConcave","p1","p2","p3","p1x","p1y","p2x","p2y","p3x","p3y","positiveArea","previousIndex","nextIndex","decompose","polygonIndices","fanBaseIndex","lastWinding","t1","t2","t3","merged","winding1","winding","winding2","firstIndex","lastIndex","prevPrevX","prevPrevY","prevX","firstX","firstY","secondX","secondY","otherIndices","otherFirstIndex","otherSecondIndex","otherLastIndex","otherPoly","SkeletonClipping","triangulator","clippingPolygon","clipOutput","clippedVertices","clippedTriangles","scratch","clipAttachment","clippingPolygons","clipStart","makeClockwise","clipEndWithSlot","clipEnd","isClipping","clipTriangles","trianglesLength","twoColor","polygonsCount","vertexSize","u1","v1","u3","v3","clippedVerticesItems","clippedTrianglesItems","clipOutputLength","d0","d1","d2","d4","clipOutputCount","clipOutputItems","c0","clippingArea","output","originalOutput","clipped","clippingVertices","clippingVerticesLast","edgeX","edgeY","edgeX2","edgeY2","deltaX","deltaY","inputVertices","inputVerticesLength","outputStart","inputX","inputY","inputX2","inputY2","side2","ua","verticeslength","area","lastX","other","SkeletonJson","json","root","JSON","parse","skeletonMap","spine","images","boneMap","parentName","getValue","slotMap","ik","constraintMap","transform","targetName","skinMap","entryName","eventMap","animationMap","map","scaledVertices","timelineName","timelineMap","keyMap","nextMap","newColor","readCurve","color2","newColor2","constraintIndex","attachmentsName","attachmentsMap","slotMapName","attachmentMapName","attachmentMap","timelineMapName","verticesValue","lastDelay","drawOrderMap","offsets","offsetMap","keys","name1","name2","property","canvasOrContext","contextConfig","restorables","WebGLRenderingContext","WebGL2RenderingContext","gl","canvas","getContext","addEventListener","e","preventDefault","restore","addRestorable","restorable","removeRestorable","ONE_MINUS_SRC_ALPHA","WebGLBlendModeConverter","getDestGLBlendMode","Additive","Multiply","Screen","getSourceColorGLBlendMode","premultipliedAlpha","getSourceAlphaGLBlendMode","context","useMipMaps","boundUnit","bind","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","validateMagFilter","usesMipMaps","generateMipmap","MipMapLinearLinear","MipMapLinearNearest","MipMapNearestLinear","MipMapNearestNearest","Linear","filter","TEXTURE_WRAP_S","TEXTURE_WRAP_T","createTexture","DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","LINEAR","LINEAR_MIPMAP_LINEAR","CLAMP_TO_EDGE","unit","activeTexture","TEXTURE0","bindTexture","unbind","deleteTexture","z","setFrom","sub","cross","multiply","matrix","l_mat","M00","M01","M02","M03","M10","M11","M12","M13","M20","M21","M22","M23","project","l_w","M30","M31","M32","M33","dot","distance","Matrix4","transpose","invert","l_det","inv_det","determinant","projection","near","far","fovy","aspectRatio","l_fd","tan","l_a1","l_a2","ortho2d","ortho","left","right","bottom","top","x_orth","y_orth","z_orth","tz","multiplyLeft","lookAt","up","xAxis","yAxis","zAxis","val","tmpMatrix","OrthoCamera","viewportWidth","viewportHeight","zoom","projectionView","inverseProjectionView","view","screenToWorld","screenCoords","screenWidth","screenHeight","worldToScreen","worldCoords","setViewport","getProgram","program","getVertexShader","vertexShader","getFragmentShader","fragmentShader","getVertexShaderSource","vsSource","getFragmentSource","fsSource","vs","fs","tmp2x2","tmp3x3","tmp4x4","compile","compileShader","VERTEX_SHADER","FRAGMENT_SHADER","compileProgram","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","isContextLost","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","setUniformi","uniform1i","getUniformLocation","setUniformf","uniform1f","setUniform2f","uniform2f","setUniform3f","value3","uniform3f","setUniform4f","value4","uniform4f","setUniform2x2f","uniformMatrix2fv","setUniform3x3f","uniformMatrix3fv","setUniform4x4f","uniformMatrix4fv","location","getAttributeLocation","attribute","getAttribLocation","newColoredTextured","POSITION","COLOR","TEXCOORDS","MVP_MATRIX","newTwoColoredTextured","COLOR2","newColored","SAMPLER","getAttributes","attributes","maxVertices","elementsPerVertex","numVertices","setVerticesLength","dirtyVertices","getVertices","maxIndices","numIndices","indicesLength","setIndicesLength","dirtyIndices","getIndices","getVertexSizeInFloats","verticesBuffer","indicesBuffer","Uint16Array","setVertices","setIndices","draw","primitiveType","drawWithOffset","drawElements","UNSIGNED_SHORT","drawArrays","bindBuffer","ARRAY_BUFFER","attrib","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","disableVertexAttribArray","createBuffer","bufferData","subarray","DYNAMIC_DRAW","deleteBuffer","VertexAttribute","Position2Attribute","VertexAttributeType","Float","TexCoordAttribute","ColorAttribute","Color2Attribute","ShapeType","PolygonBatcher","twoColorTint","drawCalls","isDrawing","lastTexture","cullWasEnabled","srcColorBlend","SRC_ALPHA","srcAlphaBlend","ONE","dstBlend","begin","enable","BLEND","blendFuncSeparate","disableCulling","isEnabled","CULL_FACE","disable","setBlendMode","flush","indexStart","TRIANGLES","globalDrawCalls","getDrawCalls","getAndResetGlobalDrawCalls","ShapeRenderer","shapeType","Filled","vertexIndex","tmp","setColor","setColorWith","check","vertex","Line","triangle","filled","color3","quad","color4","rect","rectLine","polygonVertices","circle","radius","angle","subdiv_step","subdiv_step2","subdiv_step3","pre1","pre2","pre4","pre5","tmp1x","tmp1y","tmp2x","tmp2y","fx","fy","SkeletonDebugRenderer","boneLineColor","boneOriginColor","attachmentLineColor","triangleLineColor","pathColor","clipColor","aabbColor","drawBones","drawRegionAttachments","drawBoundingBoxes","drawMeshHull","drawMeshTriangles","drawPaths","drawSkeletonXY","drawClipping","boneWidth","shapes","ignoredBones","skeletonX","skeletonY","srcFunc","regionAttachment","lastY","boxes","LIGHT_GRAY","Renderable","numFloats","SkeletonRenderer","tempColor2","renderable","clipper","temp2","temp3","temp4","batcher","slotRangeStart","slotRangeEnd","transformer","attachmentColor","skeletonColor","inRange","clippedVertexSize","QUAD_TRIANGLES","slotColor","finalColor","slotBlendMode","verts","activeRenderer","camera","batcherShader","shapesShader","skeletonRenderer","skeletonDebugRenderer","enableRenderer","drawSkeleton","drawSkeletonDebug","drawTexture","drawTextureUV","drawTextureRotated","pivotX","pivotY","worldOriginX","worldOriginY","fx2","fy2","p4x","p4y","drawRegion","resize","resizeMode","dpr","window","devicePixelRatio","round","clientWidth","h","clientHeight","viewport","Expand","Fit","sourceWidth","sourceHeight","targetWidth","targetHeight","renderer","ResizeMode","triangleRendering","debugRendering","ctx","drawTriangles","drawImages","strokeStyle","regionColor","save","atlasScale","globalAlpha","drawImage","strokeRect","computeRegionVertices","computeMeshVertices","x0","y0","u0","v0","drawTriangle","beginPath","moveTo","lineTo","stroke","img","closePath","VERTEX_SIZE","SpineBaseGameObject","Phaser","PIXI","DisplayObject","game","SPRITE","physicsType","Component","Core","init","call","_width","_height","install","prototype","preUpdatePhysics","PhysicsBody","preUpdate","preUpdateLifeSpan","LifeSpan","preUpdateInWorld","InWorld","preUpdateCore","SpineSkeleton","plugin","gameObject","setKeys","setSkeletonData","concat","createSkeleton","getSkeletonData","getAtlas","cache","checkSpineSkeleton","getSpineSkeleton","checkJSONKey","jsonFile","getJSON","binaryFile","getBinary","Uint8Array","addSpineSkeleton","checkSpineAtlas","getSpineAtlas","atlasFile","getText","TextureAtlas","isWebGL","imageFile","GLTexture","atlasPage","toLocaleLowerCase","CanvasTexture","addSpineAtlas","SpineUtils","skeletonToPhaserWorldCoordinates","worldTransform","phaserWorldCoordinatesToSkeleton","phaserWorldCoordinatesToBone","calculateBounds","calculateSkinBounds","arguments","timeStep","defaultBounds","animationState","customSkin","steps","SpineGameObject","scaleMode","scaleModes","utils","debug","enableCanvasMesh","_setCallbacks","_setSpine","beforeUpdateWorldTransforms","afterUpdateWorldTransforms","animationStateData","skeletonBounds","spineBounds","_checkSpine","inCamera","visible","_bounds","w0","w1","h0","h1","replaceSpine","updatePose","postUpdate","destroy","destroyPhase","onDestroy$dispatch","Group","remove","removeChild","transformCallback","transformCallbackContext","tweens","removeFrom","alive","exists","filters","mask","hitArea","stage","filterArea","_currentBounds","_mask","_destroyCachedSprite","pendingDestroy","_renderWebGL","webGLRenderer","currentBlendMode","blendModeManager","currentShader","shaderManager","spriteBatch","stop","attribState","sceneRenderer","maskManager","pushMask","_filters","filterManager","pushFilter","_filterBlock","popFilter","popMask","drawCount","_currentId","setShader","_debug","_renderCanvas","canvasRenderer","setTransform","globalCompositeOperation","blendModesCanvas","smoothProperty","spriteBounds","SpinePlugin","Plugin","pluginManager","spineList","_setFlags","_rendererConfig","_addSpineCache","_addSpineLoader","_addSpineFactory","_addRenderers","hasPostRender","hasPostUpdate","hasPreUpdate","hasRender","hasUpdate","renderType","WEBGL","WEBGL_MULTI","Cache","addCustom","_cache","_cacheMap","keyIdx","methodName","checkKey","getItem","skeletonDataCache","atlasCache","Loader","spineFiles","overwrite","Object","hasOwnProperty","self","GameObjectFactory","group","spineObject","GameObjectCreator","SceneRenderer","onResize","onSizeChange","onDestroy","addOnce","gameDestroy","phaserRenderer"],"sourceRoot":""}